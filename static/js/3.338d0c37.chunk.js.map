{"version":3,"file":"static/js/3.338d0c37.chunk.js","mappings":"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","sources":["components/TimetableEventCard.js","components/EditTimetableModal.js","pages/TimetablePage.js","components/AddModal.js"],"sourcesContent":["// src/components/TimetableEventCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { motion } from 'framer-motion';\n\n// IMPORTANT: This component now accepts a single 'event' object as a prop.\n// The list mapping and date navigation are handled in TimetablePage.js.\nconst TimetableEventCard = React.memo(({ event, nextEvent, isEditMode, onEdit, status }) => {\n  const handlers = useHandlers();\n\n  // Removed sortedEvents useMemo as this component now receives a single event.\n  // Sorting is handled in TimetablePage.js before passing individual events.\n\n  // Removed formatDateForDisplay as date navigation is no longer in this component.\n  // Removed handlePrevDay and handleNextDay as date navigation is no longer in this component.\n\n  // Helper: get study day (4am–4am)\n  function getStudyDay(dateObj) {\n    const studyDay = new Date(dateObj);\n    if (studyDay.getHours() < 4) {\n      studyDay.setDate(studyDay.getDate() - 1);\n    }\n    studyDay.setHours(0, 0, 0, 0);\n    return studyDay;\n  }\n\n  /**\n   * Determines the status of an event (Completed, Missed, or Pending).\n   * @param {string} eventDate - The date of the event in 'YYYY-MM-DD' format.\n   * @param {string} eventTime - The time of the event in 'HH:MM' format.\n   * @param {boolean} isChecked - The checked status of the event.\n   * @returns {{text: string, colorClass: string}} An object with status text and Tailwind CSS color class.\n   */\n  const getEventStatus = (event, nextEvent, now = new Date()) => {\n    if (event.checked) {\n      return { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n    }\n    const eventStart = new Date(`${event.date}T${event.time}`);\n    const DEFAULT_DURATION_MINUTES = 180;\n    const eventEnd = new Date(eventStart.getTime() + DEFAULT_DURATION_MINUTES * 60000);\n    const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n    const studyDay = getStudyDay(eventStart);\n    const studyDayEnd = new Date(studyDay);\n    studyDayEnd.setDate(studyDay.getDate() + 1);\n    studyDayEnd.setHours(4, 0, 0, 0); // 4am next day\n    // If now is after study day end, missed\n    if (now > studyDayEnd) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // If now is before event start time\n    if (now < eventStart) {\n      return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n    }\n    // If now is between event start and event end: Live\n    if (now >= eventStart && now < eventEnd) {\n      return { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n    }\n    // If now is after event end and before next event's start (or no next event): Missed\n    if (now >= eventEnd && (!nextStart || now < nextStart)) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // If now is after next event's start: Missed\n    if (nextStart && now >= nextStart) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // Default fallback\n    return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n  };\n\n  // If status prop provided, use it for text/color, otherwise fallback to local calculation\n  let statusObj;\n  if (status) {\n    switch (status) {\n      case 'Completed':\n        statusObj = { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n        break;\n      case 'Live':\n        statusObj = { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n        break;\n      case 'Missed':\n        statusObj = { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        break;\n      case 'Pending':\n        statusObj = { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n        break;\n      default:\n        statusObj = { text: status, colorClass: 'text-gray-600', dotClass: 'bg-gray-300' };\n    }\n  } else {\n    statusObj = getEventStatus(event, nextEvent, new Date());\n  }\n\n  // Card background: green for completed, gray for normal, red for missed\n  let cardClasses = `flex justify-between items-center p-4 mb-3 rounded-xl`;\n  if (event.checked || (status && status === 'Completed')) {\n    cardClasses += ' bg-green-100'; // Completed: green background\n  } else if ((status && status === 'Missed') || (!status && statusObj.text === 'Missed')) {\n    cardClasses += ' bg-red-100'; // Missed: red background\n  } else {\n    cardClasses += ' bg-gray-50'; // Normal: subtle gray background\n  }\n\n  return (\n    <div id={`timetable-event-${event.id}`} className={cardClasses}>\n      <div>\n        <p className=\"text-sm text-gray-500\">{event.time}</p>\n        <p\n          className={`text-lg font-semibold text-gray-800 ${event.checked ? 'line-through opacity-70' : ''}`}\n        >\n          {event.subject}\n        </p>\n        <h4 className=\"text-base text-gray-600\">{event.topic}</h4>\n        {/* Status with colored dot (always for Live, Pending, Missed; never for Completed) */}\n        {!event.checked && statusObj && (\n          <span className=\"flex items-center gap-1 mt-1\">\n            <span\n              className={`inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 ${statusObj.dotClass}`}\n            ></span>\n            <span className={`text-sm font-semibold ${statusObj.colorClass}`}>\n              {statusObj.text}\n            </span>\n          </span>\n        )}\n      </div>\n      <div className=\"flex items-center gap-1\">\n        {isEditMode ? (\n          <>\n            {/* Edit button, visible only in edit mode */}\n            <button\n              onClick={() => onEdit(event.id)}\n              className=\"p-1.5 mr-4 rounded-full text-gray-400 hover:text-blue-500 transition-colors duration-200\"\n              aria-label=\"Edit event\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n              </svg>\n            </button>\n            {/* Delete button, visible only in edit mode */}\n            <button\n              onClick={() => handlers.deleteTimetableEntry(event.id)}\n              className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\n              aria-label=\"Delete event\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M3 6h18\"></path>\n                <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\n                <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\n                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n              </svg>\n            </button>\n          </>\n        ) : (\n          // Check/uncheck button for marking completion, visible only NOT in edit mode\n          <motion.button\n            onClick={() => handlers.checkTimetableEntry(event.id)}\n            className={`w-6 h-6 rounded-full border-2 flex items-center justify-center`}\n            aria-label={event.checked ? 'Mark as incomplete' : 'Mark as complete'}\n            whileTap={{ scale: 0.85 }}\n            animate={{\n              scale: event.checked ? 1.1 : 1,\n              backgroundColor: event.checked ? '#22c55e' : '#ffffff00',\n              borderColor: event.checked ? '#22c55e' : '#d1d5db',\n            }}\n            transition={{ type: 'spring', stiffness: 400, damping: 15 }}\n          >\n            {/* Checkmark icon if event is checked */}\n            {event.checked && (\n              <motion.svg\n                initial={{ scale: 0, rotate: -90 }}\n                animate={{ scale: 1, rotate: 0 }}\n                transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 text-white\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={3}\n                  d=\"M5 13l4 4L19 7\"\n                />\n              </motion.svg>\n            )}\n          </motion.button>\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default TimetableEventCard;\n","// src/components/EditTimetableModal.js\nimport React, { useState, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EditTimetableModal = ({\n  isOpen,\n  onClose,\n  eventData,\n  onUpdate,\n  showNotification,\n  onAddSimilar,\n}) => {\n  const [subject, setSubject] = useState('');\n  const [topic, setTopic] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [createFutureEvent, setCreateFutureEvent] = useState(false);\n  const [futureDate, setFutureDate] = useState('');\n\n  useEffect(() => {\n    if (eventData) {\n      setSubject(eventData.subject || '');\n      setTopic(eventData.topic || '');\n      setDate(eventData.date || '');\n      setTime(eventData.time || '');\n    }\n  }, [eventData]);\n\n  const handleUpdateClick = async () => {\n    if (!eventData) {\n      showNotification('No event selected for editing.', 'error');\n      return;\n    }\n\n    if (!subject || !topic || !date || !time) {\n      showNotification('All fields are required.', 'error');\n      return;\n    }\n\n    if (createFutureEvent && !futureDate) {\n      showNotification('Please select a future date.', 'error');\n      return;\n    }\n\n    onClose(); // Optimistic UI\n\n    setTimeout(async () => {\n      try {\n        if (createFutureEvent) {\n          await onAddSimilar({\n            ...eventData,\n            subject,\n            topic,\n            date: futureDate,\n            time,\n            checked: false,\n          });\n          showNotification('New event created for future date.', 'success');\n        } else {\n          if (eventData.id) {\n            await onUpdate(eventData.id, subject, topic, date, time);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating event:', error);\n        showNotification('Failed to update event. Please try again.', 'error');\n      }\n    }, 0);\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto p-6 relative\"\n          >\n            <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Edit Study Event</h3>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-subject\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Subject\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-subject\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Anatomy\"\n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-topic\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Topic\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-topic\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Cardiovascular System\"\n                value={topic}\n                onChange={(e) => setTopic(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-date\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Date\n              </label>\n              <input\n                type=\"date\"\n                id=\"edit-modal-date\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"edit-modal-time\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Time\n              </label>\n              <input\n                type=\"time\"\n                id=\"edit-modal-time\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-6 pt-4 border-t border-gray-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <span className=\"text-sm font-medium text-gray-700\">Repeat Event</span>\n\n                {/* Custom Horizontal Toggle Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => setCreateFutureEvent(!createFutureEvent)}\n                  className={`relative w-12 h-6 rounded-full focus:outline-none transition-colors duration-300 ${\n                    createFutureEvent ? 'bg-blue-600' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`absolute top-1 left-1 h-4 w-4 rounded-full bg-white shadow transform transition-transform duration-300 ${\n                      createFutureEvent ? 'translate-x-6' : 'translate-x-0'\n                    }`}\n                  />\n                </button>\n              </div>\n\n              {createFutureEvent && (\n                <div className=\"mt-4\">\n                  <label\n                    htmlFor=\"future-date\"\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    Future Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"future-date\"\n                    min={date}\n                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                    value={futureDate}\n                    onChange={(e) => setFutureDate(e.target.value)}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-8 flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleUpdateClick}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                {createFutureEvent ? 'Create Future Event' : 'Update Event'}\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default EditTimetableModal;\n","// src/pages/TimetablePage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport TimetableEventCard from '../components/TimetableEventCard';\nimport { useHandlers } from '../context/HandlerContext';\nimport EditTimetableModal from '../components/EditTimetableModal';\nimport AddModal from '../components/AddModal';\n\n/**\n * Helper function to get a 'YYYY-MM-DD' formatted string from a Date object,\n * based on the user's local time zone. This prevents UTC conversion issues.\n * @param {Date} date - The date object to format.\n * @returns {string} The formatted date string.\n */\nconst getLocalDateString = (date) => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// Custom areEqual function for React.memo\nfunction areEqual(prevProps, nextProps) {\n  if (\n    prevProps.timetableEntries.length !== nextProps.timetableEntries.length ||\n    prevProps.selectedDisplayDate !== nextProps.selectedDisplayDate\n  ) {\n    return false;\n  }\n  // Compare each event by id and checked (add more fields if needed)\n  for (let i = 0; i < prevProps.timetableEntries.length; i++) {\n    const prevEvent = prevProps.timetableEntries[i];\n    const nextEvent = nextProps.timetableEntries[i];\n    if (\n      prevEvent.id !== nextEvent.id ||\n      prevEvent.checked !== nextEvent.checked ||\n      prevEvent.subject !== nextEvent.subject ||\n      prevEvent.topic !== nextEvent.topic ||\n      prevEvent.date !== nextEvent.date ||\n      prevEvent.time !== nextEvent.time\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Memoize TimetablePage to prevent unnecessary re-renders\nconst TimetablePage = React.memo(({ timetableEntries, showNotification, userId: _userId }) => {\n  const handlers = useHandlers();\n  const [timetableEditMode, setTimetableEditMode] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalFromState] = useState(false); // Renamed to avoid confusion\n  const [currentEventToEdit, setCurrentEventToEdit] = useState(null);\n\n  const [selectedDisplayDate, setSelectedDisplayDate] = useState(getLocalDateString(new Date()));\n  // Add search state\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Helper to control modal state consistently\n  const setIsEditModalOpen = useCallback((isOpen) => {\n    setIsEditModalFromState(isOpen);\n    if (!isOpen) {\n      setCurrentEventToEdit(null); // Clear event data when modal closes\n    }\n  }, []);\n\n  // Memoized handlers for toggles and modals\n  const handleToggleEditMode = useCallback(() => {\n    setTimetableEditMode((prev) => !prev);\n  }, []);\n\n  const handleCloseAddModal = useCallback(() => {\n    setIsAddModalOpen(false);\n  }, []);\n\n  const handleCloseEditModal = useCallback(() => {\n    setIsEditModalOpen(false);\n  }, [setIsEditModalOpen]);\n\n  // (Moved above usage)\n  const handleSaveEvent = (data) => {\n    handlers.addTimetableEntry(data.subject, data.topic, data.date, data.time);\n  };\n\n  const handleEditEvent = useCallback(\n    (eventId) => {\n      const eventToEdit = timetableEntries.find((event) => event.id === eventId);\n      if (eventToEdit) {\n        setCurrentEventToEdit(eventToEdit);\n        setIsEditModalOpen(true);\n      }\n    },\n    [timetableEntries, setIsEditModalOpen]\n  );\n\n  const handleDeleteTimetableEntry = useCallback(\n    (id) => {\n      handlers.deleteTimetableEntry(id);\n    },\n    [handlers]\n  );\n\n  const handleCheckTimetableEntry = useCallback(\n    (id) => {\n      handlers.checkTimetableEntry(id);\n    },\n    [handlers]\n  );\n\n  // This handleUpdateEvent now correctly calls the updateTimetableEntry prop from App.js\n  // which already has userId and showNotification in its closure.\n  const handleUpdateEvent = useCallback(\n    async (eventId, subject, topic, date, time) => {\n      await handlers.updateTimetableEntry(eventId, subject, topic, date, time);\n      setIsEditModalOpen(false); // Close modal using the consistent helper\n    },\n    [handlers, setIsEditModalOpen]\n  );\n\n  const handleAddSimilarEvent = useCallback(\n    (eventData) => {\n      handlers.addTimetableEntry(\n        eventData.subject,\n        eventData.topic,\n        eventData.date,\n        eventData.time\n      );\n    },\n    [handlers]\n  );\n\n  const memoizedSelectedDateObject = useMemo(() => {\n    const date = new Date(selectedDisplayDate);\n    const userTimezoneOffset = date.getTimezoneOffset() * 60000;\n    return new Date(date.getTime() + userTimezoneOffset);\n  }, [selectedDisplayDate]);\n\n  // Chronologically sort all entries by date, then by time\n  const sortedTimetableEntries = useMemo(() => {\n    return [...timetableEntries].sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      return a.time.localeCompare(b.time);\n    });\n  }, [timetableEntries]);\n\n  // Filtered and sorted entries based on search (searches across all entries)\n  const filteredEntries = useMemo(() => {\n    if (!searchQuery.trim()) {\n      // If not searching, show only today's entries, sorted\n      return sortedTimetableEntries.filter((entry) => entry.date === selectedDisplayDate);\n    }\n    const q = searchQuery.toLowerCase();\n    return sortedTimetableEntries.filter(\n      (entry) =>\n        entry.subject.toLowerCase().includes(q) ||\n        entry.topic.toLowerCase().includes(q) ||\n        entry.time.toLowerCase().includes(q)\n    );\n  }, [sortedTimetableEntries, searchQuery, selectedDisplayDate]);\n\n  // Utility: calculate event end time (default 1 hour duration if not specified)\n  const getEventEndTime = (event) => {\n    if (event.endTime) {\n      return new Date(`${event.date}T${event.endTime}`);\n    }\n    const [hour] = event.time.split(':').map(Number);\n    return new Date(new Date(`${event.date}T${event.time}`).setHours(hour + 1));\n  };\n\n  // Calculate status for each event\n  const filteredEntriesWithStatus = useMemo(() => {\n    const now = new Date();\n    return filteredEntries.map((event) => {\n      if (event.checked) return { ...event, status: 'Completed' };\n      // Find the true next event in the full sorted timetable\n      const idxInFull = sortedTimetableEntries.findIndex((e) => e.id === event.id);\n      const nextEvent = idxInFull !== -1 ? sortedTimetableEntries[idxInFull + 1] : undefined;\n      const eventStart = new Date(`${event.date}T${event.time}`);\n      const eventEnd = getEventEndTime(event);\n      const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n      if (now >= eventStart && (!nextStart || now < nextStart)) {\n        return { ...event, status: 'Live' };\n      } else if (now < eventStart) {\n        return { ...event, status: 'Pending' };\n      } else if (now > eventEnd && nextEvent && now > nextStart && !event.checked) {\n        return { ...event, status: 'Missed' };\n      }\n      return { ...event, status: 'Pending' };\n    });\n  }, [filteredEntries, sortedTimetableEntries]);\n\n  // Group filtered entries by date for search results\n  const groupedByDate = useMemo(() => {\n    if (!searchQuery.trim()) return {};\n    return filteredEntriesWithStatus.reduce((acc, entry) => {\n      if (!acc[entry.date]) acc[entry.date] = [];\n      acc[entry.date].push(entry);\n      return acc;\n    }, {});\n  }, [filteredEntriesWithStatus, searchQuery]);\n\n  const addModalFields = useMemo(\n    () => [\n      { name: 'subject', label: 'Subject', placeholder: 'e.g., Anatomy', required: true },\n      { name: 'topic', label: 'Topic', placeholder: 'e.g., Cardiovascular System', required: true },\n      {\n        name: 'date',\n        label: 'Date',\n        type: 'date',\n        required: true,\n        defaultValue: selectedDisplayDate,\n      },\n      { name: 'time', label: 'Time', type: 'time', required: true, defaultValue: '09:00' },\n    ],\n    [selectedDisplayDate]\n  );\n\n  const handleSelectCalendarDate = useCallback((date) => {\n    setSelectedDisplayDate(getLocalDateString(date));\n  }, []);\n\n  const handlePrevDay = useCallback(() => {\n    const newDate = new Date(memoizedSelectedDateObject);\n    newDate.setDate(newDate.getDate() - 1);\n    handleSelectCalendarDate(newDate);\n  }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n  const handleNextDay = useCallback(() => {\n    const newDate = new Date(memoizedSelectedDateObject);\n    newDate.setDate(newDate.getDate() + 1);\n    handleSelectCalendarDate(newDate);\n  }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n  // Empty state component\n  const EmptyState = () => (\n    <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n      <div className=\"w-24 h-24 mb-4 text-gray-300\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n      </div>\n      <h3 className=\"text-lg font-medium text-gray-900\">Your timetable is empty</h3>\n      <p className=\"mt-2 text-sm text-gray-500\">Start by adding your first event to see it here.</p>\n      <button\n        onClick={() => setIsAddModalOpen(true)}\n        className=\"mt-4 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        Add Event\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <div id=\"page-timetable\" className=\"page px-6 py-8\">\n        <header className=\"flex items-center justify-between mb-2\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Timetable</h1>\n\n        </header>\n        <p className=\"text-gray-500 mb-6\">Upcoming Study Schedule</p>\n\n        {/* Search Bar */}\n        <div className=\"mb-2\">\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search events by subject, topic, or time...\"\n            className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n          />\n        </div>\n\n        {/* Search results header */}\n        {searchQuery.trim() && (\n          <div className=\"mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Search Results</h2>\n          </div>\n        )}\n\n        {/* Only show Add New button and date picker if not searching */}\n        {!searchQuery.trim() && (\n          <>\n            <div className=\"flex items-center justify-between px-0 py-6 text-gray-700 font-semibold text-lg\">\n              <button\n                onClick={handlePrevDay}\n                className=\"p-2 rounded-full hover:bg-gray-100 active:scale-95 active:bg-gray-200 transition-all duration-200 ease-in-out\"\n                aria-label=\"Previous day\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <polyline points=\"15 18 9 12 15 6\"></polyline>\n                </svg>\n              </button>\n              <span className=\"flex-grow text-center text-lg sm:text-base\">\n                {memoizedSelectedDateObject.toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n              <button\n                onClick={handleNextDay}\n                className=\"p-2 rounded-full hover:bg-gray-100 active:scale-95 active:bg-gray-200 transition-all duration-200 ease-in-out\"\n                aria-label=\"Next day\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <polyline points=\"9 18 15 12 9 6\"></polyline>\n                </svg>\n              </button>\n            </div>\n          </>\n        )}\n\n        {/* Floating buttons container */}\n        \n          {/* Edit Button */}\n          <button\n            onClick={handleToggleEditMode}\n            className={`\n              fixed bottom-[9.5rem] right-6 z-50\n              bg-blue-50 text-blue-700 font-semibold \n              py-3 px-5 rounded-xl shadow-md \n              flex items-center text-sm\n              cursor-pointer\n              active:scale-[0.98] active:shadow-sm transition-all duration-200 ease-in-out\n              hover:bg-blue-100 hover:shadow-lg hover:-translate-y-0.5\n              transform transition-transform duration-200\n            `}\n            title={timetableEditMode ? 'Done editing timetable' : 'Edit timetable'}\n            initial={{ opacity: 0, y: 20, scale: 0.8 }}\n            animate={{\n              opacity: 1,\n              y: 0,\n              scale: 1,\n              backgroundColor: 'rgb(219, 234, 254)',\n              color: 'rgb(29, 78, 216)'\n            }}\n            whileHover={{\n              scale: 1.05,\n              backgroundColor: 'rgb(191, 219, 254)',\n              boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.08), 0 10px 10px -5px rgba(0, 0, 0, 0.03)'\n            }}\n            whileTap={{\n              scale: 0.97,\n              boxShadow: '0 2px 5px -1px rgba(0, 0, 0, 0.1)'\n            }}\n            transition={{\n              type: 'spring',\n              stiffness: 400,\n              damping: 17,\n            }}\n          >\n            <span className=\"mr-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n              </svg>\n            </span>\n            <span\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              {timetableEditMode ? 'Done' : 'Edit'}\n            </span>\n          </button>\n\n          {/* Add Event Button */}\n          <button\n            onClick={() => setIsAddModalOpen(true)}\n            className={`\n              fixed bottom-20 right-6 z-50\n              bg-blue-600 text-white font-semibold \n              py-4 px-6 rounded-xl shadow-lg \n              flex items-center\n              active:scale-[0.98] active:shadow-sm transition-all duration-200 ease-in-out\n              hover:bg-blue-700 hover:shadow-xl hover:-translate-y-0.5\n              transform transition-transform duration-200 \n              cursor-pointer\n            `}\n            title=\"Add a new study event\"\n            initial={{ opacity: 0, y: 20, scale: 0.8 }}\n            animate={{\n              opacity: 1,\n              y: 0,\n              scale: 1,\n              backgroundColor: 'rgb(37, 99, 235)'\n            }}\n            whileHover={{\n              scale: 1.05,\n              backgroundColor: 'rgb(29, 78, 216)',\n              boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'\n            }}\n            whileTap={{ \n              scale: 0.98,\n              boxShadow: '0 2px 5px -1px rgba(0, 0, 0, 0.1)'\n            }}\n            transition={{\n              type: 'spring',\n              stiffness: 400,\n              damping: 17,\n            }}\n          >\n            <span className=\"mr-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              </svg>\n            </span>\n            <span\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              Add Event\n            </span>\n          </button>\n        \n        {/* End of floating buttons */}\n\n        <div id=\"timetable-events-list\" className=\"space-y-4 bg-white rounded-lg min-h-[100px]\">\n          {filteredEntriesWithStatus.length > 0 ? (\n            <div className=\"space-y-4\">\n              {/* Group by date and show bold date headers when searching */}\n              {searchQuery.trim()\n                ? Object.keys(groupedByDate)\n                    .sort()\n                    .map((date) => (\n                      <div key={date}>\n                        <div className=\"font-semibold text-base text-blue-700 mb-2.5 mt-5 pl-1 tracking-normal pb-1\">\n                          {new Date(date).toLocaleDateString('en-US', {\n                            weekday: 'short',\n                            year: 'numeric',\n                            month: 'short',\n                            day: 'numeric',\n                          })}\n                        </div>\n                        <div className=\"space-y-4\">\n                          {groupedByDate[date].map((event, i, arr) => {\n                            const statusEvent =\n                              filteredEntriesWithStatus.find((e) => e.id === event.id) || event;\n                            return (\n                              <TimetableEventCard\n                                key={event.id}\n                                event={event}\n                                status={statusEvent.status}\n                                nextEvent={arr[i + 1]}\n                                isEditMode={timetableEditMode}\n                                onDelete={handlers.deleteTimetableEntry}\n                                onCheck={handlers.checkTimetableEntry}\n                                onEdit={handleEditEvent}\n                              />\n                            );\n                          })}\n                        </div>\n                      </div>\n                    ))\n                : filteredEntriesWithStatus.map((event, idx) => (\n                    <TimetableEventCard\n                      key={event.id}\n                      event={event}\n                      status={event.status}\n                      nextEvent={filteredEntriesWithStatus[idx + 1]}\n                      isEditMode={timetableEditMode}\n                      onDelete={handleDeleteTimetableEntry}\n                      onCheck={handleCheckTimetableEntry}\n                      onEdit={handleEditEvent}\n                    />\n                  ))}\n            </div>\n          ) : searchQuery.trim() ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\">No events match your search.</p>\n              <button\n                onClick={() => setSearchQuery('')}\n                className=\"mt-2 text-sm text-blue-600 hover:text-blue-800\"\n              >\n                Clear search\n              </button>\n            </div>\n          ) : (\n            <EmptyState />\n          )}\n        </div>\n      </div>\n\n      <AddModal\n        isOpen={isAddModalOpen}\n        onClose={handleCloseAddModal}\n        onSave={handleSaveEvent}\n        title=\"Add New Study Event\"\n        fields={addModalFields}\n      />\n\n      <EditTimetableModal\n        isOpen={isEditModalOpen}\n        onClose={handleCloseEditModal}\n        eventData={currentEventToEdit}\n        onUpdate={handleUpdateEvent}\n        onAddSimilar={handleAddSimilarEvent}\n        showNotification={showNotification}\n      />\n    </>\n  );\n}, areEqual);\n\nexport default TimetablePage;\n","// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  title,\n  fields,\n  initialState = EMPTY_INITIAL_STATE,\n}) => {\n  const handlers = useHandlers();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    if (isOpen) {\n      const initialData = fields.reduce((acc, field) => {\n        acc[field.name] = initialState[field.name] || field.defaultValue || '';\n        return acc;\n      }, {});\n      setFormData(initialData);\n    } else {\n      setFormData({});\n    }\n  }, [isOpen, fields, initialState]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSaveClick = () => {\n    for (const field of fields) {\n      if (field.required && !formData[field.name]) {\n        if (handlers.showNotification) {\n          handlers.showNotification(`${field.label} is required.`, 'error');\n        } else {\n          console.error(`${field.label} is required.`);\n        }\n        return;\n      }\n    }\n    if (onSave) {\n      onSave(formData);\n    } else if (handlers.addTimetableEntry) {\n      handlers.addTimetableEntry(formData);\n    }\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n          >\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n            <div className=\"space-y-4\">\n              {fields.map((field) => (\n                <div key={field.name} className=\"flex flex-col\">\n                  <label\n                    htmlFor={field.name}\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    {field.label}\n                    {field.required && <span className=\"text-red-500\">*</span>}\n                  </label>\n                  {field.type === 'textarea' ? (\n                    <textarea\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      rows=\"3\"\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  ) : field.type === 'select' ? (\n                    <select\n                      id={field.name}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    >\n                      {field.options &&\n                        field.options.map((option) => (\n                          <option key={option.value} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                    </select>\n                  ) : (\n                    <input\n                      type={field.type || 'text'}\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-end space-x-3\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveClick}\n                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default AddModal;\n"],"names":["React","_ref","event","nextEvent","isEditMode","onEdit","status","handlers","useHandlers","getEventStatus","now","arguments","length","undefined","Date","checked","text","colorClass","dotClass","eventStart","concat","date","time","eventEnd","getTime","DEFAULT_DURATION_MINUTES","nextStart","studyDay","dateObj","getHours","setDate","getDate","setHours","getStudyDay","studyDayEnd","statusObj","cardClasses","_jsxs","id","className","children","_jsx","subject","topic","_Fragment","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","deleteTimetableEntry","x1","y1","x2","y2","motion","button","checkTimetableEntry","whileTap","scale","animate","backgroundColor","borderColor","transition","type","stiffness","damping","svg","initial","rotate","isOpen","onClose","eventData","onUpdate","showNotification","onAddSimilar","setSubject","useState","setTopic","setTime","createFutureEvent","setCreateFutureEvent","futureDate","setFutureDate","useEffect","AnimatePresence","div","opacity","exit","duration","e","stopPropagation","htmlFor","placeholder","value","onChange","target","min","async","setTimeout","_objectSpread","error","console","getLocalDateString","year","getFullYear","month","getMonth","toString","padStart","day","areEqual","prevProps","nextProps","timetableEntries","selectedDisplayDate","i","prevEvent","userId","_userId","timetableEditMode","setTimetableEditMode","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalFromState","currentEventToEdit","setCurrentEventToEdit","setSelectedDisplayDate","searchQuery","setSearchQuery","setIsEditModalOpen","useCallback","handleToggleEditMode","prev","handleCloseAddModal","handleCloseEditModal","handleEditEvent","eventId","eventToEdit","find","handleDeleteTimetableEntry","handleCheckTimetableEntry","handleUpdateEvent","updateTimetableEntry","handleAddSimilarEvent","addTimetableEntry","memoizedSelectedDateObject","useMemo","userTimezoneOffset","getTimezoneOffset","sortedTimetableEntries","sort","a","b","localeCompare","filteredEntries","trim","filter","entry","q","toLowerCase","includes","filteredEntriesWithStatus","map","idxInFull","findIndex","endTime","hour","split","Number","getEventEndTime","groupedByDate","reduce","acc","push","addModalFields","name","label","required","defaultValue","handleSelectCalendarDate","handlePrevDay","newDate","handleNextDay","EmptyState","points","toLocaleDateString","weekday","title","y","color","whileHover","boxShadow","x","delay","Object","keys","arr","statusEvent","TimetableEventCard","onDelete","onCheck","idx","AddModal","onSave","data","fields","EditTimetableModal","EMPTY_INITIAL_STATE","initialState","formData","setFormData","initialData","field","handleChange","disabled","rows","options","option","handleSaveClick"],"sourceRoot":""}