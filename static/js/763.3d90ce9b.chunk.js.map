{"version":3,"file":"static/js/763.3d90ce9b.chunk.js","mappings":"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","sources":["components/AddModal.js","components/ManagedSubjectSection.js","pages/ManageContentPage.js"],"sourcesContent":["// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({ isOpen, onClose, onSave, title, fields, initialState = EMPTY_INITIAL_STATE }) => {\n    const handlers = useHandlers();\n    const [formData, setFormData] = useState({});\n\n    useEffect(() => {\n        if (isOpen) {\n            const initialData = fields.reduce((acc, field) => {\n                acc[field.name] = initialState[field.name] || field.defaultValue || '';\n                return acc;\n            }, {});\n            setFormData(initialData);\n        } else {\n            setFormData({});\n        }\n    }, [isOpen, fields, initialState]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSaveClick = () => {\n        for (const field of fields) {\n            if (field.required && !formData[field.name]) {\n                if (handlers.showNotification) {\n                    handlers.showNotification(`${field.label} is required.`, 'error');\n                } else {\n                    console.error(`${field.label} is required.`);\n                }\n                return;\n            }\n        }\n        if (onSave) {\n            onSave(formData);\n        } else if (handlers.addTimetableEntry) {\n            handlers.addTimetableEntry(formData);\n        }\n        onClose();\n    };\n\n    return (\n        <AnimatePresence>\n            {isOpen && (\n                <motion.div\n                    className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.22 }}\n                    onClick={onClose}\n                >\n                    <div\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n                    >\n                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n                        <div className=\"space-y-4\">\n                            {fields.map(field => (\n                                <div key={field.name} className=\"flex flex-col\">\n                                    <label htmlFor={field.name} className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        {field.label}{field.required && <span className=\"text-red-500\">*</span>}\n                                    </label>\n                                    {field.type === 'textarea' ? (\n                                        <textarea\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            rows=\"3\"\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    ) : field.type === 'select' ? (\n                                        <select\n                                            id={field.name}\n                                            name={field.name}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        >\n                                            {field.options && field.options.map(option => (\n                                                <option key={option.value} value={option.value}>\n                                                    {option.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            type={field.type || 'text'}\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"mt-6 flex justify-end space-x-3\">\n                            <button\n                                onClick={onClose}\n                                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                onClick={handleSaveClick}\n                                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default AddModal;","// src/components/ManagedSubjectSection.js\r\nimport React from 'react';\r\n\r\nconst ManagedSubjectSection = React.memo(({ subjectName, tests, onDeleteSubject, onDeleteTest, isExpanded, onToggleExpand }) => {\r\n    return (\r\n        <div className=\"bg-white p-3 rounded-lg border border-gray-200 shadow-sm\">\r\n            <div\r\n                className=\"flex justify-between items-center mb-3 cursor-pointer\"\r\n                onClick={() => onToggleExpand(subjectName)}\r\n            >\r\n                <h3 className=\"font-bold text-lg text-gray-800\">{subjectName}</h3>\r\n                <div className=\"flex items-center\">\r\n                    <button\r\n                        onClick={(e) => { e.stopPropagation(); onDeleteSubject(subjectName); }}\r\n                        className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\r\n                        aria-label=\"Delete subject\"\r\n                    >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"></path><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                    </button>\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className={`h-5 w-5 text-gray-500 transform transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            {isExpanded && (\r\n                <div className=\"space-y-2 pt-2 border-t border-gray-100\">\r\n                    {tests.length === 0 ? (\r\n                        <p className=\"text-gray-500 text-sm italic\">No tests in this subject.</p>\r\n                    ) : (\r\n                        tests.map(test => (\r\n                            <div key={test.title} className=\"flex justify-between items-center bg-gray-50 p-3 rounded-md border border-gray-200 text-sm\">\r\n                                <span>{test.title} ({test.mcqs} MCQs, {test.date})</span>\r\n                                <button\r\n                                    onClick={(e) => { e.stopPropagation(); onDeleteTest(subjectName, test.title); }}\r\n                                    className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 ml-2\"\r\n                                    aria-label=\"Delete test\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"></path><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                                </button>\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ManagedSubjectSection;","// src/pages/ManageContentPage.js\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useTestData } from '../context/TestDataContext'; // Only testData is in this context now\nimport ManagedSubjectSection from '../components/ManagedSubjectSection';\nimport { useHandlers } from '../context/HandlerContext';\nimport AddModal from '../components/AddModal'; // Import the new modal\n\nconst ManageContentPage = React.memo(({ onBackToProfile, showNotification }) => {\n    const { testData } = useTestData();\n    const handlers = useHandlers();\n    const [expandedSubjects, setExpandedSubjects] = useState({});\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalConfig, setModalConfig] = useState({ title: '', fields: [], onSave: () => {} });\n\n    const subjects = useMemo(() => Object.keys(testData), [testData]);\n\n    const handleToggleExpand = useCallback((subjectName) => {\n        setExpandedSubjects(prev => ({\n            ...prev,\n            [subjectName]: !prev[subjectName]\n        }));\n    }, []);\n\n    const openAddSubjectModal = () => {\n        setModalConfig({\n            title: 'Add New Subject',\n            fields: [\n                { name: 'subjectName', label: 'Subject Name', placeholder: 'e.g., Biochemistry', required: true }\n            ],\n            onSave: (data) => {\n                handlers.addSubject(data.subjectName);\n                setExpandedSubjects(prev => ({ ...prev, [data.subjectName]: true }));\n            }\n        });\n        setIsModalOpen(true);\n    };\n\n    const openAddTestModal = () => {\n        setModalConfig({\n            title: 'Add New Test',\n            fields: [\n                {\n                    name: 'subject',\n                    label: 'Select Subject',\n                    type: 'select',\n                    required: true,\n                    options: subjects.map(s => ({ value: s, label: s })),\n                    defaultValue: subjects[0] || ''\n                },\n                { name: 'title', label: 'Test Title', placeholder: 'e.g., Final Exam', required: true },\n                { name: 'mcqs', label: 'Number of MCQs', type: 'number', placeholder: 'e.g., 50', required: true },\n                { name: 'date', label: 'Date', type: 'date', required: true },\n                { name: 'link', label: 'Test Link (Optional)', type: 'url', placeholder: 'https://example.com/test' }\n            ],\n            onSave: (data) => {\n                handlers.addTest(data.subject, data.title, data.mcqs, data.date, data.link);\n                setExpandedSubjects(prev => ({ ...prev, [data.subject]: true }));\n            }\n        });\n        setIsModalOpen(true);\n    };\n\n    return (\n        // All subject/test handlers now come from context\n        <>\n            <div id=\"page-manage-tests\" className=\"page px-6 py-8\">\n                <header className=\"flex items-center justify-between mb-6\">\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Manage Content</h1>\n                    <button onClick={onBackToProfile} className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\">Done</button>\n                </header>\n\n                <div className=\"space-y-4 mb-6\">\n                    <button\n                        onClick={openAddSubjectModal}\n                        className=\"w-full bg-green-50 text-green-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-green-100 transition duration-300\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\n                        Add New Subject\n                    </button>\n\n                    <button\n                        onClick={openAddTestModal}\n                        className=\"w-full bg-blue-50 text-blue-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-blue-100 transition duration-300\"\n                        disabled={subjects.length === 0}\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\n                        Add New Test\n                    </button>\n                </div>\n\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Existing Content</h2>\n                <div id=\"manage-content-list\" className=\"space-y-4\">\n                    {subjects.length === 0 ? (\n                        <p className=\"text-gray-500 text-center py-4\">No subjects available. Add a new subject to get started.</p>\n                    ) : (\n                        subjects.map(subject => (\n                            <ManagedSubjectSection\n                                key={subject}\n                                subjectName={subject}\n                                tests={testData[subject]}\n                                onDeleteSubject={handlers.deleteSubject}\n                                onDeleteTest={handlers.deleteTest}\n                                isExpanded={expandedSubjects[subject]}\n                                onToggleExpand={handleToggleExpand}\n                            />\n                        ))\n                    )}\n                </div>\n            </div>\n\n            <AddModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                onSave={modalConfig.onSave}\n                title={modalConfig.title}\n                fields={modalConfig.fields}\n                showNotification={showNotification}\n            />\n        </>\n    );\n});\n\nexport default ManageContentPage;\n"],"names":["EMPTY_INITIAL_STATE","_ref","isOpen","onClose","onSave","title","fields","initialState","handlers","useHandlers","formData","setFormData","useState","useEffect","initialData","reduce","acc","field","name","defaultValue","handleChange","e","value","target","prev","_objectSpread","_jsx","AnimatePresence","children","motion","div","className","initial","opacity","animate","exit","transition","duration","onClick","_jsxs","stopPropagation","map","htmlFor","label","required","type","id","placeholder","onChange","disabled","rows","options","option","handleSaveClick","showNotification","concat","console","error","addTimetableEntry","React","subjectName","tests","onDeleteSubject","onDeleteTest","isExpanded","onToggleExpand","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","length","test","mcqs","date","onBackToProfile","testData","useTestData","expandedSubjects","setExpandedSubjects","isModalOpen","setIsModalOpen","modalConfig","setModalConfig","subjects","useMemo","Object","keys","handleToggleExpand","useCallback","_Fragment","openAddSubjectModal","data","addSubject","openAddTestModal","s","addTest","subject","link","ManagedSubjectSection","deleteSubject","deleteTest","AddModal"],"sourceRoot":""}