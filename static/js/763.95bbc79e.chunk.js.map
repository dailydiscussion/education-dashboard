{"version":3,"file":"static/js/763.95bbc79e.chunk.js","mappings":"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","sources":["components/AddModal.js","components/ManagedSubjectSection.js","pages/ManageContentPage.js"],"sourcesContent":["// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  title,\n  fields,\n  initialState = EMPTY_INITIAL_STATE,\n}) => {\n  const handlers = useHandlers();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    if (isOpen) {\n      const initialData = fields.reduce((acc, field) => {\n        acc[field.name] = initialState[field.name] || field.defaultValue || '';\n        return acc;\n      }, {});\n      setFormData(initialData);\n    } else {\n      setFormData({});\n    }\n  }, [isOpen, fields, initialState]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSaveClick = () => {\n    for (const field of fields) {\n      if (field.required && !formData[field.name]) {\n        if (handlers.showNotification) {\n          handlers.showNotification(`${field.label} is required.`, 'error');\n        } else {\n          console.error(`${field.label} is required.`);\n        }\n        return;\n      }\n    }\n    if (onSave) {\n      onSave(formData);\n    } else if (handlers.addTimetableEntry) {\n      handlers.addTimetableEntry(formData);\n    }\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n          >\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n            <div className=\"space-y-4\">\n              {fields.map((field) => (\n                <div key={field.name} className=\"flex flex-col\">\n                  <label\n                    htmlFor={field.name}\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    {field.label}\n                    {field.required && <span className=\"text-red-500\">*</span>}\n                  </label>\n                  {field.type === 'textarea' ? (\n                    <textarea\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      rows=\"3\"\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  ) : field.type === 'select' ? (\n                    <select\n                      id={field.name}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    >\n                      {field.options &&\n                        field.options.map((option) => (\n                          <option key={option.value} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                    </select>\n                  ) : (\n                    <input\n                      type={field.type || 'text'}\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-end space-x-3\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveClick}\n                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default AddModal;\n","// src/components/ManagedSubjectSection.js\r\nimport React from 'react';\r\n\r\nconst ManagedSubjectSection = React.memo(\r\n  ({ subjectName, tests, onDeleteSubject, onDeleteTest, isExpanded, onToggleExpand }) => {\r\n    return (\r\n      <div className=\"bg-white p-3 rounded-lg border border-gray-200 shadow-sm\">\r\n        <div\r\n          className=\"flex justify-between items-center mb-3 cursor-pointer\"\r\n          onClick={() => onToggleExpand(subjectName)}\r\n        >\r\n          <h3 className=\"font-bold text-lg text-gray-800\">{subjectName}</h3>\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onDeleteSubject(subjectName);\r\n              }}\r\n              className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\r\n              aria-label=\"Delete subject\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path d=\"M3 6h18\"></path>\r\n                <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n              </svg>\r\n            </button>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className={`h-5 w-5 text-gray-500 transform transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M19 9l-7 7-7-7\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"space-y-2 pt-2 border-t border-gray-100\">\r\n            {tests.length === 0 ? (\r\n              <p className=\"text-gray-500 text-sm italic\">No tests in this subject.</p>\r\n            ) : (\r\n              tests.map((test) => (\r\n                <div\r\n                  key={test.title}\r\n                  className=\"flex justify-between items-center bg-gray-50 p-3 rounded-md border border-gray-200 text-sm\"\r\n                >\r\n                  <span>\r\n                    {test.title} ({test.mcqs} MCQs, {test.date})\r\n                  </span>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      onDeleteTest(subjectName, test.title);\r\n                    }}\r\n                    className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 ml-2\"\r\n                    aria-label=\"Delete test\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M3 6h18\"></path>\r\n                      <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                      <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManagedSubjectSection;\r\n","// src/pages/ManageContentPage.js\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useTestData } from '../context/TestDataContext'; // Only testData is in this context now\nimport ManagedSubjectSection from '../components/ManagedSubjectSection';\nimport { useHandlers } from '../context/HandlerContext';\nimport AddModal from '../components/AddModal'; // Import the new modal\n\nconst ManageContentPage = React.memo(({ onBackToProfile, showNotification }) => {\n  const { testData } = useTestData();\n  const handlers = useHandlers();\n  const [expandedSubjects, setExpandedSubjects] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalConfig, setModalConfig] = useState({ title: '', fields: [], onSave: () => {} });\n\n  const subjects = useMemo(() => Object.keys(testData), [testData]);\n\n  const handleToggleExpand = useCallback((subjectName) => {\n    setExpandedSubjects((prev) => ({\n      ...prev,\n      [subjectName]: !prev[subjectName],\n    }));\n  }, []);\n\n  const handleDeleteSubject = React.useCallback(\n    (subjectName) => {\n      handlers.deleteSubject(subjectName);\n    },\n    [handlers]\n  );\n\n  const handleDeleteTest = React.useCallback(\n    (subject, title) => {\n      handlers.deleteTest(subject, title);\n    },\n    [handlers]\n  );\n\n  // Memoized onSave functions for modal configs\n  const handleAddSubjectSave = useCallback(\n    (data) => {\n      handlers.addSubject(data.subjectName);\n      setExpandedSubjects((prev) => ({ ...prev, [data.subjectName]: true }));\n    },\n    [handlers]\n  );\n\n  const handleAddTestSave = useCallback(\n    (data) => {\n      handlers.addTest(data.subject, data.title, data.mcqs, data.date, data.link);\n      setExpandedSubjects((prev) => ({ ...prev, [data.subject]: true }));\n    },\n    [handlers]\n  );\n\n  // Memoized modal openers\n  const openAddSubjectModal = useCallback(() => {\n    setModalConfig({\n      title: 'Add New Subject',\n      fields: [\n        {\n          name: 'subjectName',\n          label: 'Subject Name',\n          placeholder: 'e.g., Biochemistry',\n          required: true,\n        },\n      ],\n      onSave: handleAddSubjectSave,\n    });\n    setIsModalOpen(true);\n  }, [handleAddSubjectSave]);\n\n  const openAddTestModal = useCallback(() => {\n    setModalConfig({\n      title: 'Add New Test',\n      fields: [\n        {\n          name: 'subject',\n          label: 'Select Subject',\n          type: 'select',\n          required: true,\n          options: subjects.map((s) => ({ value: s, label: s })),\n          defaultValue: subjects[0] || '',\n        },\n        { name: 'title', label: 'Test Title', placeholder: 'e.g., Final Exam', required: true },\n        {\n          name: 'mcqs',\n          label: 'Number of MCQs',\n          type: 'number',\n          placeholder: 'e.g., 50',\n          required: true,\n        },\n        { name: 'date', label: 'Date', type: 'date', required: true },\n        {\n          name: 'link',\n          label: 'Test Link (Optional)',\n          type: 'url',\n          placeholder: 'https://example.com/test',\n        },\n      ],\n      onSave: handleAddTestSave,\n    });\n    setIsModalOpen(true);\n  }, [handleAddTestSave, subjects]);\n\n  // Empty state component\n  const EmptyState = () => (\n    <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n      <div className=\"w-24 h-24 mb-4 text-gray-300\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={1}\n            d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n          />\n        </svg>\n      </div>\n      <h3 className=\"text-lg font-medium text-gray-900\">No subjects added yet</h3>\n      <p className=\"mt-2 text-sm text-gray-500\">\n        Start by adding your first subject to organize your tests.\n      </p>\n      <button\n        onClick={openAddSubjectModal}\n        className=\"mt-4 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        Add Subject\n      </button>\n    </div>\n  );\n\n  return (\n    // All subject/test handlers now come from context\n    <>\n      <div id=\"page-manage-tests\" className=\"page px-6 py-8\">\n        <header className=\"flex items-center justify-between mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Manage Content</h1>\n          <button\n            onClick={onBackToProfile}\n            className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n          >\n            Done\n          </button>\n        </header>\n\n        <div className=\"space-y-4 mb-6\">\n          <button\n            onClick={openAddSubjectModal}\n            className=\"w-full bg-green-50 text-green-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-green-100 transition duration-300\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-2\"\n            >\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n            Add New Subject\n          </button>\n\n          <button\n            onClick={openAddTestModal}\n            className=\"w-full bg-blue-50 text-blue-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-blue-100 transition duration-300\"\n            disabled={subjects.length === 0}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-2\"\n            >\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n            Add New Test\n          </button>\n        </div>\n\n        <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Existing Content</h2>\n        <div id=\"manage-content-list\" className=\"space-y-4\">\n          {subjects.length > 0 ? (\n            subjects.map((subject) => (\n              <div key={subject} className=\"space-y-4\">\n                <ManagedSubjectSection\n                  subjectName={subject}\n                  tests={testData[subject]}\n                  onDeleteSubject={handleDeleteSubject}\n                  onDeleteTest={handleDeleteTest}\n                  isExpanded={expandedSubjects[subject]}\n                  onToggleExpand={handleToggleExpand}\n                />\n                {expandedSubjects[subject] && testData[subject].length === 0 && (\n                  <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n                    <p className=\"text-gray-500\">No tests in this subject yet.</p>\n                    <button\n                      onClick={openAddTestModal}\n                      className=\"mt-2 text-sm text-blue-600 hover:text-blue-800 font-medium\"\n                    >\n                      Add your first test\n                    </button>\n                  </div>\n                )}\n              </div>\n            ))\n          ) : (\n            <EmptyState />\n          )}\n        </div>\n      </div>\n\n      <AddModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onSave={modalConfig.onSave}\n        title={modalConfig.title}\n        fields={modalConfig.fields}\n        showNotification={showNotification}\n      />\n    </>\n  );\n});\n\nexport default ManageContentPage;\n"],"names":["EMPTY_INITIAL_STATE","_ref","isOpen","onClose","onSave","title","fields","initialState","handlers","useHandlers","formData","setFormData","useState","useEffect","initialData","reduce","acc","field","name","defaultValue","handleChange","e","value","target","prev","_jsx","AnimatePresence","children","motion","div","className","initial","opacity","animate","exit","transition","duration","onClick","_jsxs","stopPropagation","map","htmlFor","label","required","type","id","placeholder","onChange","disabled","rows","options","option","handleSaveClick","showNotification","console","error","addTimetableEntry","React","subjectName","tests","onDeleteSubject","onDeleteTest","isExpanded","onToggleExpand","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","length","test","mcqs","date","onBackToProfile","testData","useTestData","expandedSubjects","setExpandedSubjects","isModalOpen","setIsModalOpen","modalConfig","setModalConfig","subjects","useMemo","Object","keys","handleToggleExpand","useCallback","handleDeleteSubject","deleteSubject","handleDeleteTest","subject","deleteTest","handleAddSubjectSave","data","addSubject","handleAddTestSave","addTest","link","openAddSubjectModal","openAddTestModal","s","EmptyState","_Fragment","ManagedSubjectSection","AddModal"],"sourceRoot":""}