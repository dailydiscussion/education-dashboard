{"version":3,"file":"static/js/244.77af50ab.chunk.js","mappings":"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","sources":["components/TestCard.js","pages/TestsCompletedPage.js","components/AddModal.js"],"sourcesContent":["// src/components/TestCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { motion } from 'framer-motion';\n\nconst TestCard = React.memo(({ test, isEditMode, onDelete }) => {\n  // Ensure test object has all required properties with defaults\n  const safeTest = {\n    ...test,\n    title: test?.title || 'Untitled Test',\n    mcqs: test?.mcqs || 0,\n    completed: test?.completed || false,\n    link: test?.link || '',\n    date: test?.date || new Date().toISOString().split('T')[0],\n    subject: test?.subject || '',\n  };\n  const handlers = useHandlers();\n  const handleCardClick = () => {\n    // Allow clicking the card to open a link only if not in edit mode and has a valid link\n    if (!isEditMode && safeTest.link) {\n      if (safeTest.link.startsWith('http')) {\n        window.open(safeTest.link, '_blank');\n      } else {\n        // Log a warning for developers if the link is malformed\n        console.warn(\n          `Invalid link for ${safeTest.title}: ${safeTest.link}. Must start with http:// or https://`\n        );\n      }\n    }\n  };\n\n  const handleCheckboxClick = (e) => {\n    // Prevent the card's click event from firing when the checkbox is clicked\n    e.stopPropagation();\n    if (safeTest.subject && safeTest.title) {\n      handlers.toggleTestCompletion(safeTest.subject, safeTest.title, !safeTest.completed);\n    } else {\n      console.error('Cannot toggle test completion: subject or title is missing');\n    }\n  };\n\n  // Define base classes for the card for consistency\n  const baseCardClasses =\n    'relative p-4 rounded-lg flex justify-between items-center transition-all duration-300';\n\n  // Define specific classes for the completed state\n  const completedClasses = 'bg-green-100';\n\n  // Define specific classes for the default (incomplete) state\n  const defaultClasses = 'bg-gray-50';\n\n  // Add hover effects only if the card has a link and is not in edit mode\n  const linkClasses =\n    safeTest.link && !isEditMode ? 'cursor-pointer hover:shadow-md hover:-translate-y-1' : '';\n\n  // Combine all classes based on the component's state\n  const cardClasses = `${baseCardClasses} ${safeTest.completed ? completedClasses : defaultClasses} ${linkClasses}`;\n\n  return (\n    <div\n      id={`trophy-test-item-${safeTest.subject}-${safeTest.title}`}\n      className={cardClasses}\n      onClick={handleCardClick}\n      aria-label={safeTest.completed ? 'Completed test' : 'Incomplete test'}\n    >\n      <div className=\"flex items-center flex-grow min-w-0\">\n        {/* The interactive checkbox for toggling completion status */}\n        <motion.button\n          onClick={handleCheckboxClick}\n          className={`flex-shrink-0 w-6 h-6 rounded-full border-2 flex items-center justify-center mr-4`}\n          aria-label={safeTest.completed ? 'Mark as incomplete' : 'Mark as complete'}\n          whileTap={{ scale: 0.85 }}\n          animate={{\n            scale: safeTest.completed ? 1.1 : 1,\n            backgroundColor: safeTest.completed ? '#22c55e' : '#ffffff00',\n            borderColor: safeTest.completed ? '#22c55e' : '#d1d5db',\n          }}\n          transition={{ type: 'spring', stiffness: 400, damping: 15 }}\n        >\n          {safeTest.completed && (\n            <motion.svg\n              initial={{ scale: 0, rotate: -90 }}\n              animate={{ scale: 1, rotate: 0 }}\n              transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-4 w-4 text-white\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={3}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </motion.svg>\n          )}\n        </motion.button>\n\n        {/* Text content with conditional styling for better readability */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-2\">\n            <h4\n              className={`font-semibold truncate ${safeTest.completed ? 'text-gray-800' : 'text-gray-900'}`}\n            >\n              {safeTest.title}\n            </h4>\n          </div>\n          <p className={`text-sm mt-1 ${safeTest.completed ? 'text-gray-600' : 'text-gray-600'}`}>\n            {safeTest.mcqs} MCQs\n          </p>\n        </div>\n      </div>\n\n      {/* Controls for editing and navigation */}\n      <div className=\"flex-shrink-0 ml-2\">\n        {isEditMode ? (\n          <button\n            className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 hover:bg-red-100 transition-colors duration-200\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onDelete(safeTest.subject, safeTest.title);\n            }}\n            aria-label=\"Delete test\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M3 6h18\"></path>\n              <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\n              <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\n              <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n              <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n            </svg>\n          </button>\n        ) : (\n          test.link && (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"text-gray-400\"\n            >\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n          )\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default TestCard;\n","// src/pages/TestsCompletedPage.js\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useTestData } from '../context/TestDataContext';\nimport TestCard from '../components/TestCard';\nimport { useHandlers } from '../context/HandlerContext';\nimport AddModal from '../components/AddModal';\n\nconst TestsCompletedPage = React.memo(\n  ({ currentSelectedSubject, setCurrentSelectedSubject, showNotification }) => {\n    const { testData } = useTestData();\n    const handlers = useHandlers();\n    const [trophyEditMode, setTrophyEditMode] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const subjects = useMemo(() => Object.keys(testData), [testData]);\n\n    useEffect(() => {\n      if (\n        subjects.length > 0 &&\n        (!currentSelectedSubject || !subjects.includes(currentSelectedSubject))\n      ) {\n        setCurrentSelectedSubject(subjects[0]);\n      } else if (subjects.length === 0 && currentSelectedSubject !== '') {\n        setCurrentSelectedSubject('');\n      }\n    }, [subjects, currentSelectedSubject, setCurrentSelectedSubject]);\n\n    const openAddTestModal = React.useCallback(() => {\n      setIsModalOpen(true);\n    }, []);\n\n    const handleCloseModal = React.useCallback(() => {\n      setIsModalOpen(false);\n    }, []);\n\n    const handleToggleEditMode = React.useCallback(() => {\n      setTrophyEditMode((prev) => !prev);\n    }, []);\n\n    const handleSelectSubject = React.useCallback(\n      (subject) => {\n        setCurrentSelectedSubject(subject);\n      },\n      [setCurrentSelectedSubject]\n    );\n\n    const handleSearchChange = React.useCallback((e) => {\n      setSearchQuery(e.target.value);\n    }, []);\n\n    const handleSaveTest = (data) => {\n      handlers.addTest(currentSelectedSubject, data.title, data.mcqs, data.date, data.link);\n    };\n\n    const handleDeleteTest = React.useCallback(\n      (subject, title) => {\n        handlers.deleteTest(subject, title);\n      },\n      [handlers]\n    );\n\n    const handleToggleTestCompletion = useCallback(\n      (subject, title, completed) => {\n        handlers.toggleTestCompletion(subject, title, completed);\n      },\n      [handlers]\n    );\n    \n    // Helper function to render a test item\n    const renderTestItem = useCallback((test) => {\n      const testWithDefaults = {\n        ...test,\n        subject: test.subject || '',\n        title: test.title || 'Untitled Test',\n        mcqs: test.mcqs || 0,\n        completed: test.completed || false,\n        date: test.date || new Date().toISOString().split('T')[0],\n        link: test.link || '',\n        id: test.id || `${test.subject}-${test.title}`\n      };\n      \n      return (\n        <li key={testWithDefaults.id}>\n          <TestCard\n            test={testWithDefaults}\n            isEditMode={trophyEditMode}\n            onDelete={() => handleDeleteTest(testWithDefaults.subject, testWithDefaults.title)}\n          />\n        </li>\n      );\n    }, [trophyEditMode, handleDeleteTest]);\n\n    const modalFields = [\n      { name: 'title', label: 'Test Title', placeholder: 'e.g., Mid-term Exam', required: true },\n      {\n        name: 'mcqs',\n        label: 'Number of MCQs',\n        type: 'number',\n        placeholder: 'e.g., 40',\n        required: true,\n      },\n      { name: 'date', label: 'Completion Date', type: 'date', required: true },\n      {\n        name: 'link',\n        label: 'Test Link (Optional)',\n        type: 'url',\n        placeholder: 'https://example.com/test',\n      },\n    ];\n\n    // Global search: if searchQuery, search all subjects\n    const isSearching = searchQuery.trim().length > 0;\n    const filteredTests = isSearching\n      ? Object.entries(testData).flatMap(([subject, tests]) =>\n          tests\n            .filter((test) => test.title.toLowerCase().includes(searchQuery.toLowerCase()))\n            .map((test) => ({ ...test, subject }))\n        )\n      : currentSelectedSubject && testData[currentSelectedSubject]\n        ? testData[currentSelectedSubject].map((test) => ({\n            ...test,\n            subject: currentSelectedSubject,\n          }))\n        : [];\n\n    // Empty state component\n    const EmptyState = () => (\n      <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n        <div className=\"w-24 h-24 mb-4 text-gray-300\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n          </svg>\n        </div>\n        <h3 className=\"text-lg font-medium text-gray-900\">No tests added yet!</h3>\n        <p className=\"mt-2 text-sm text-gray-500\">Get started by adding your first test.</p>\n        <button\n          onClick={openAddTestModal}\n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          Add Test\n        </button>\n      </div>\n    );\n\n    return (\n      <>\n        <div id=\"page-trophy\" className=\"page px-6 py-8\">\n          <header className=\"flex items-center justify-between mb-2\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Tests</h1>\n          </header>\n          <p className=\"text-gray-500 mb-6\">Completed Tests & Progress</p>\n\n          <div className=\"mb-6\">\n            <input\n              type=\"text\"\n              placeholder=\"Search tests...\"\n              className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              aria-label=\"Search tests\"\n            />\n          </div>\n\n          {/* Hide subject selector and add button during search */}\n          {!isSearching && (\n            <>\n              <div\n                className=\"flex space-x-3 mb-6 overflow-x-auto hide-scrollbar\"\n                id=\"subject-filters-container\"\n              >\n                {subjects.map((subject) => (\n                  <button\n                    key={subject}\n                    className={`subject-filter flex-shrink-0 text-left p-3 rounded-lg transition-colors duration-200\n                                        ${currentSelectedSubject === subject ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`}\n                    onClick={() => handleSelectSubject(subject)}\n                  >\n                    <p className=\"font-bold\">{subject}</p>\n                    <p\n                      className={`text-sm ${currentSelectedSubject === subject ? 'opacity-80' : 'text-gray-500'}`}\n                    >\n                      {testData[subject]?.length || 0} Test\n                      {testData[subject]?.length === 1 ? '' : 's'}\n                    </p>\n                  </button>\n                ))}\n              </div>\n\n\n                {/* Edit button */}\n\n                <AnimatePresence>\n                <motion.button\n                  onClick={handleToggleEditMode}\n                  className={`\n                    fixed bottom-[9.5rem] right-6 z-50\n                    bg-blue-50 text-blue-700 font-semibold \n                    py-3 px-5 rounded-xl shadow-md \n                    flex items-center text-sm\n                    ${!currentSelectedSubject ? 'cursor-not-allowed' : 'cursor-pointer'}\n                  `}\n                  disabled={!currentSelectedSubject}\n                  title={trophyEditMode ? 'Done editing tests' : 'Edit tests'}\n                  initial={{ opacity: 0, y: 20, scale: 0.8 }}\n                  animate={{\n                    opacity: 1,\n                    y: 0,\n                    scale: 1,\n                    backgroundColor: trophyEditMode ? 'rgb(219, 234, 254)' : 'rgb(219, 234, 254)',\n                    color: 'rgb(29, 78, 216)'\n                  }}\n                  whileHover={{\n                    scale: 1.05,\n                    backgroundColor: 'rgb(191, 219, 254)',\n                    boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.08), 0 10px 10px -5px rgba(0, 0, 0, 0.03)'\n                  }}\n                  whileTap={{\n                    scale: 0.97,\n                    boxShadow: '0 2px 5px -1px rgba(0, 0, 0, 0.1)'\n                  }}\n                  transition={{\n                    type: 'spring',\n                    stiffness: 400,\n                    damping: 17,\n                  }}\n                >\n                  <span className=\"mr-2\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n                    </svg>\n                  </span>\n                  <motion.span\n                    initial={{ opacity: 0, x: -10 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ delay: 0.2 }}\n                  >\n                    {trophyEditMode ? 'Done' : 'Edit'}\n                  </motion.span>\n                </motion.button>\n                </AnimatePresence>\n\n                {/* end of edit button */}\n\n                {/* floating button */}\n\n                <AnimatePresence>\n                  <motion.button\n                    onClick={openAddTestModal}\n                    className={`\n                      fixed bottom-20 right-6 z-50\n                      bg-blue-600 text-white font-semibold \n                      py-4 px-6 rounded-xl shadow-lg \n                      flex items-center \n                      ${!currentSelectedSubject ? 'cursor-not-allowed' : 'cursor-pointer'}\n                    `}\n                    disabled={!currentSelectedSubject}\n                    title={!currentSelectedSubject ? 'Select a subject to add a test' : 'Add a new test'}\n                    initial={{ opacity: 0, y: 20, scale: 0.8 }}\n                    animate={{\n                      opacity: !currentSelectedSubject ? 0.75 : 1,\n                      y: 0,\n                      scale: 1,\n                      backgroundColor: !currentSelectedSubject ? 'rgb(37, 99, 235)' : 'rgb(37, 99, 235)'\n                    }}\n                    whileHover={!currentSelectedSubject ? {} : {\n                      scale: 1.05,\n                      backgroundColor: 'rgb(29, 78, 216)',\n                      boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'\n                    }}\n                    whileTap={!currentSelectedSubject ? {} : { \n                      scale: 0.98,\n                      boxShadow: '0 2px 5px -1px rgba(0, 0, 0, 0.1)'\n                    }}\n                    transition={{\n                      type: 'spring',\n                      stiffness: 400,\n                      damping: 17,\n                    }}\n                  >\n                    <span className=\"mr-2\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      >\n                        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                      </svg>\n                    </span>\n                    <motion.span\n                      initial={{ opacity: 0, x: -10 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: 0.2 }}\n                    >\n                      {`Add Test${currentSelectedSubject ? '' : ''}`}\n                    </motion.span>\n                  </motion.button>\n                </AnimatePresence>\n\n                {/* end of floating button */}\n\n            </>\n          )}\n\n          {/* end of floating button */}\n\n          {/* test list */}\n          <div id=\"test-list-container\" className=\"space-y-6\">\n            {isSearching ? (\n              // Show all tests in a single list when searching\n              <div className=\"space-y-3\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Search Results</h3>\n                {filteredTests.length > 0 ? (\n                  <ul className=\"space-y-3\">\n                    {filteredTests.map((test) => renderTestItem(test))}\n                  </ul>\n                ) : (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    No tests found matching \"{searchQuery}\"\n                  </div>\n                )}\n              </div>\n            ) : (\n              // Group tests by subject when not searching\n              Object.entries(\n                filteredTests.reduce((groups, test) => {\n                  const subject = test.subject || 'Other';\n                  if (!groups[subject]) {\n                    groups[subject] = [];\n                  }\n                  groups[subject].push(test);\n                  return groups;\n                }, {})\n              ).map(([subject, tests]) => (\n                <div key={subject} className=\"space-y-3\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">{subject}</h3>\n                  <ul className=\"space-y-3\">\n                    {tests.map((test) => renderTestItem(test))}\n                  </ul>\n                </div>\n              ))\n            )}\n            \n            {!isSearching && filteredTests.length === 0 && <EmptyState />}\n          </div>\n        </div>\n        <AddModal\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n          onSave={handleSaveTest}\n          title={`Add New Test to ${currentSelectedSubject}`}\n          fields={modalFields}\n          showNotification={showNotification}\n        />\n      </>\n    );\n  }\n);\n\nexport default TestsCompletedPage;\n","// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  title,\n  fields,\n  initialState = EMPTY_INITIAL_STATE,\n}) => {\n  const handlers = useHandlers();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    if (isOpen) {\n      const initialData = fields.reduce((acc, field) => {\n        acc[field.name] = initialState[field.name] || field.defaultValue || '';\n        return acc;\n      }, {});\n      setFormData(initialData);\n    } else {\n      setFormData({});\n    }\n  }, [isOpen, fields, initialState]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSaveClick = () => {\n    for (const field of fields) {\n      if (field.required && !formData[field.name]) {\n        if (handlers.showNotification) {\n          handlers.showNotification(`${field.label} is required.`, 'error');\n        } else {\n          console.error(`${field.label} is required.`);\n        }\n        return;\n      }\n    }\n    if (onSave) {\n      onSave(formData);\n    } else if (handlers.addTimetableEntry) {\n      handlers.addTimetableEntry(formData);\n    }\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n          >\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n            <div className=\"space-y-4\">\n              {fields.map((field) => (\n                <div key={field.name} className=\"flex flex-col\">\n                  <label\n                    htmlFor={field.name}\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    {field.label}\n                    {field.required && <span className=\"text-red-500\">*</span>}\n                  </label>\n                  {field.type === 'textarea' ? (\n                    <textarea\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      rows=\"3\"\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  ) : field.type === 'select' ? (\n                    <select\n                      id={field.name}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    >\n                      {field.options &&\n                        field.options.map((option) => (\n                          <option key={option.value} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                    </select>\n                  ) : (\n                    <input\n                      type={field.type || 'text'}\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-end space-x-3\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveClick}\n                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default AddModal;\n"],"names":["React","_ref","test","isEditMode","onDelete","safeTest","_objectSpread","title","mcqs","completed","link","date","Date","toISOString","split","subject","handlers","useHandlers","linkClasses","cardClasses","concat","_jsxs","id","className","onClick","handleCardClick","startsWith","window","open","console","warn","children","_jsx","motion","button","e","stopPropagation","toggleTestCompletion","error","whileTap","scale","animate","backgroundColor","borderColor","transition","type","stiffness","damping","svg","initial","rotate","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","width","height","x1","y1","x2","y2","points","currentSelectedSubject","setCurrentSelectedSubject","showNotification","testData","useTestData","trophyEditMode","setTrophyEditMode","useState","isModalOpen","setIsModalOpen","searchQuery","setSearchQuery","subjects","useMemo","Object","keys","useEffect","length","includes","openAddTestModal","handleCloseModal","handleToggleEditMode","prev","handleSelectSubject","handleSearchChange","target","value","handleDeleteTest","deleteTest","renderTestItem","useCallback","testWithDefaults","TestCard","isSearching","trim","filteredTests","entries","flatMap","_ref2","tests","filter","toLowerCase","map","EmptyState","_Fragment","placeholder","onChange","_testData$subject","_testData$subject2","AnimatePresence","disabled","opacity","y","color","whileHover","boxShadow","span","x","delay","reduce","groups","push","_ref3","AddModal","isOpen","onClose","onSave","data","addTest","fields","name","label","required","EMPTY_INITIAL_STATE","initialState","formData","setFormData","initialData","acc","field","defaultValue","handleChange","div","exit","duration","htmlFor","rows","options","option","handleSaveClick","addTimetableEntry"],"sourceRoot":""}