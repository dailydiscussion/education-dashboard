{"version":3,"file":"static/js/763.edb0016d.chunk.js","mappings":"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","sources":["components/AddModal.js","components/ManagedSubjectSection.js","pages/ManageContentPage.js"],"sourcesContent":["// src/components/AddModal.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// By defining the default object outside the component, we ensure it's a stable reference.\r\n// This prevents the useEffect hook from re-running unnecessarily.\r\nconst EMPTY_INITIAL_STATE = {};\r\n\r\nconst AddModal = ({ isOpen, onClose, onSave, title, fields, initialState = EMPTY_INITIAL_STATE, showNotification }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    useEffect(() => {\r\n        // This effect now correctly runs only when the modal is opened,\r\n        // or if the `fields` or `initialState` props genuinely change.\r\n        // Previously, a new `initialState` object was created on every render,\r\n        // causing this effect to fire on every keystroke and reset the form data.\r\n        if (isOpen) {\r\n            const initialData = fields.reduce((acc, field) => {\r\n                acc[field.name] = initialState[field.name] || field.defaultValue || '';\r\n                return acc;\r\n            }, {});\r\n            setFormData(initialData);\r\n        } else {\r\n            // Reset formData when the modal closes to ensure a clean state for next time.\r\n            setFormData({});\r\n        }\r\n    }, [isOpen, fields, initialState]);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        // Basic validation to ensure required fields are filled.\r\n        for (const field of fields) {\r\n            if (field.required && !formData[field.name]) {\r\n                if (showNotification) {\r\n                    showNotification(`${field.label} is required.`, 'error');\r\n                } else {\r\n                    console.error(`${field.label} is required.`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        onSave(formData);\r\n        onClose(); // Close modal after saving\r\n    };\r\n\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n            <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative transform transition-all scale-100 opacity-100\">\r\n                <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\r\n                <div className=\"space-y-4\">\r\n                    {fields.map(field => (\r\n                        <div key={field.name} className=\"flex flex-col\">\r\n                            <label htmlFor={field.name} className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                {field.label}{field.required && <span className=\"text-red-500\">*</span>}\r\n                            </label>\r\n                            {field.type === 'textarea' ? (\r\n                                <textarea\r\n                                    id={field.name}\r\n                                    name={field.name}\r\n                                    placeholder={field.placeholder || ''}\r\n                                    value={formData[field.name] || ''}\r\n                                    onChange={handleChange}\r\n                                    // The `disabled` property is correctly read from the field config.\r\n                                    // Since `addModalFields` doesn't set it, this will be undefined, and the input will be enabled.\r\n                                    disabled={field.disabled || false}\r\n                                    rows=\"3\"\r\n                                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\r\n                                />\r\n                            ) : field.type === 'select' ? (\r\n                                <select\r\n                                    id={field.name}\r\n                                    name={field.name}\r\n                                    value={formData[field.name] || ''}\r\n                                    onChange={handleChange}\r\n                                    disabled={field.disabled || false}\r\n                                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\r\n                                >\r\n                                    {field.options && field.options.map(option => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            ) : (\r\n                                <input\r\n                                    type={field.type || 'text'}\r\n                                    id={field.name}\r\n                                    name={field.name}\r\n                                    placeholder={field.placeholder || ''}\r\n                                    value={formData[field.name] || ''}\r\n                                    onChange={handleChange}\r\n                                    disabled={field.disabled || false}\r\n                                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"mt-6 flex justify-end space-x-3\">\r\n                     <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSaveClick}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddModal;","// src/components/ManagedSubjectSection.js\r\nimport React from 'react';\r\n\r\nconst ManagedSubjectSection = React.memo(({ subjectName, tests, onDeleteSubject, onDeleteTest, isExpanded, onToggleExpand }) => {\r\n    return (\r\n        <div className=\"bg-white p-3 rounded-lg border border-gray-200 shadow-sm\">\r\n            <div\r\n                className=\"flex justify-between items-center mb-3 cursor-pointer\"\r\n                onClick={() => onToggleExpand(subjectName)}\r\n            >\r\n                <h3 className=\"font-bold text-lg text-gray-800\">{subjectName}</h3>\r\n                <div className=\"flex items-center\">\r\n                    <button\r\n                        onClick={(e) => { e.stopPropagation(); onDeleteSubject(subjectName); }}\r\n                        className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\r\n                        aria-label=\"Delete subject\"\r\n                    >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"></path><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                    </button>\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className={`h-5 w-5 text-gray-500 transform transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            {isExpanded && (\r\n                <div className=\"space-y-2 pt-2 border-t border-gray-100\">\r\n                    {tests.length === 0 ? (\r\n                        <p className=\"text-gray-500 text-sm italic\">No tests in this subject.</p>\r\n                    ) : (\r\n                        tests.map(test => (\r\n                            <div key={test.title} className=\"flex justify-between items-center bg-gray-50 p-3 rounded-md border border-gray-200 text-sm\">\r\n                                <span>{test.title} ({test.mcqs} MCQs, {test.date})</span>\r\n                                <button\r\n                                    onClick={(e) => { e.stopPropagation(); onDeleteTest(subjectName, test.title); }}\r\n                                    className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 ml-2\"\r\n                                    aria-label=\"Delete test\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"></path><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                                </button>\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ManagedSubjectSection;","// src/pages/ManageContentPage.js\r\nimport React, { useState, useCallback, useMemo } from 'react';\r\nimport ManagedSubjectSection from '../components/ManagedSubjectSection';\r\nimport AddModal from '../components/AddModal'; // Import the new modal\r\n\r\nconst ManageContentPage = React.memo(({ testData, addSubject, addTest, deleteSubject, deleteTest, onBackToProfile, showNotification }) => {\r\n    const [expandedSubjects, setExpandedSubjects] = useState({});\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalConfig, setModalConfig] = useState({ title: '', fields: [], onSave: () => {} });\r\n\r\n    const subjects = useMemo(() => Object.keys(testData), [testData]);\r\n\r\n    const handleToggleExpand = useCallback((subjectName) => {\r\n        setExpandedSubjects(prev => ({\r\n            ...prev,\r\n            [subjectName]: !prev[subjectName]\r\n        }));\r\n    }, []);\r\n\r\n    const openAddSubjectModal = () => {\r\n        setModalConfig({\r\n            title: 'Add New Subject',\r\n            fields: [\r\n                { name: 'subjectName', label: 'Subject Name', placeholder: 'e.g., Biochemistry', required: true }\r\n            ],\r\n            onSave: (data) => {\r\n                addSubject(data.subjectName);\r\n                setExpandedSubjects(prev => ({ ...prev, [data.subjectName]: true }));\r\n            }\r\n        });\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const openAddTestModal = () => {\r\n        setModalConfig({\r\n            title: 'Add New Test',\r\n            fields: [\r\n                {\r\n                    name: 'subject',\r\n                    label: 'Select Subject',\r\n                    type: 'select',\r\n                    required: true,\r\n                    options: subjects.map(s => ({ value: s, label: s })),\r\n                    defaultValue: subjects[0] || ''\r\n                },\r\n                { name: 'title', label: 'Test Title', placeholder: 'e.g., Final Exam', required: true },\r\n                { name: 'mcqs', label: 'Number of MCQs', type: 'number', placeholder: 'e.g., 50', required: true },\r\n                { name: 'date', label: 'Date', type: 'date', required: true },\r\n                { name: 'link', label: 'Test Link (Optional)', type: 'url', placeholder: 'https://example.com/test' }\r\n            ],\r\n            onSave: (data) => {\r\n                addTest(data.subject, data.title, data.mcqs, data.date, data.link);\r\n                setExpandedSubjects(prev => ({ ...prev, [data.subject]: true }));\r\n            }\r\n        });\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"page-manage-tests\" className=\"page px-6 py-8\">\r\n                <header className=\"flex items-center justify-between mb-6\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Manage Content</h1>\r\n                    <button onClick={onBackToProfile} className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\">Done</button>\r\n                </header>\r\n\r\n                <div className=\"space-y-4 mb-6\">\r\n                    <button\r\n                        onClick={openAddSubjectModal}\r\n                        className=\"w-full bg-green-50 text-green-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-green-100 transition duration-300\"\r\n                    >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n                        Add New Subject\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={openAddTestModal}\r\n                        className=\"w-full bg-blue-50 text-blue-700 font-semibold py-2 px-4 rounded-lg flex items-center justify-center hover:bg-blue-100 transition duration-300\"\r\n                        disabled={subjects.length === 0}\r\n                    >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n                        Add New Test\r\n                    </button>\r\n                </div>\r\n\r\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Existing Content</h2>\r\n                <div id=\"manage-content-list\" className=\"space-y-4\">\r\n                    {subjects.length === 0 ? (\r\n                        <p className=\"text-gray-500 text-center py-4\">No subjects available. Add a new subject to get started.</p>\r\n                    ) : (\r\n                        subjects.map(subject => (\r\n                            <ManagedSubjectSection\r\n                                key={subject}\r\n                                subjectName={subject}\r\n                                tests={testData[subject]}\r\n                                onDeleteSubject={deleteSubject}\r\n                                onDeleteTest={deleteTest}\r\n                                isExpanded={expandedSubjects[subject]}\r\n                                onToggleExpand={handleToggleExpand}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddModal\r\n                isOpen={isModalOpen}\r\n                onClose={() => setIsModalOpen(false)}\r\n                onSave={modalConfig.onSave}\r\n                title={modalConfig.title}\r\n                fields={modalConfig.fields}\r\n                showNotification={showNotification}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ManageContentPage;\r\n"],"names":["EMPTY_INITIAL_STATE","_ref","isOpen","onClose","onSave","title","fields","initialState","showNotification","formData","setFormData","useState","useEffect","initialData","reduce","acc","field","name","defaultValue","handleChange","e","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","map","htmlFor","label","required","type","id","placeholder","onChange","disabled","rows","options","option","onClick","handleSaveClick","concat","console","error","React","subjectName","tests","onDeleteSubject","onDeleteTest","isExpanded","onToggleExpand","stopPropagation","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","length","test","mcqs","date","testData","addSubject","addTest","deleteSubject","deleteTest","onBackToProfile","expandedSubjects","setExpandedSubjects","isModalOpen","setIsModalOpen","modalConfig","setModalConfig","subjects","useMemo","Object","keys","handleToggleExpand","useCallback","_Fragment","openAddSubjectModal","data","openAddTestModal","s","subject","link","ManagedSubjectSection","AddModal"],"sourceRoot":""}