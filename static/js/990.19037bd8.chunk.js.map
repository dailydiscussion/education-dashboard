{"version":3,"file":"static/js/990.19037bd8.chunk.js","mappings":"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","sources":["components/Greeting.js","components/FocusItemCard.js","components/CircularProgressBar.js","components/WeeklyTaskSummary.js","components/AvailableTestCard.js","components/EditFocusModal.js","pages/DashboardPage.js"],"sourcesContent":["// src/components/Greeting.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Greeting = React.memo(({ userName: _userName }) => {\r\n  const [greetingText, setGreetingText] = useState('');\r\n  const [greetingEmoji, setGreetingEmoji] = useState('');\r\n\r\n  useEffect(() => {\r\n    const updateGreeting = () => {\r\n      const hour = new Date().getHours();\r\n      let text = '';\r\n      let emoji = '';\r\n\r\n      if (hour >= 5 && hour < 12) {\r\n        text = 'Good morning';\r\n        emoji = '☀️';\r\n      } else if (hour >= 12 && hour < 17) {\r\n        text = 'Good afternoon';\r\n        emoji = '👋';\r\n      } else if (hour >= 17 && hour < 22) {\r\n        text = 'Good evening';\r\n        emoji = '🌙';\r\n      } else {\r\n        text = 'Time to sleep';\r\n        emoji = '😴';\r\n      }\r\n      setGreetingText(text);\r\n      setGreetingEmoji(emoji);\r\n    };\r\n\r\n    updateGreeting();\r\n    const intervalId = setInterval(updateGreeting, 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text-base font-light text-gray-500 flex items-center\">\r\n        {greetingText}\r\n        <span className=\"ml-1 text-base\">{greetingEmoji}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Greeting;\r\n","// src/components/FocusItemCard.js\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useHandlers } from '../context/HandlerContext';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\nconst FocusItemCard = React.memo(\n  ({ item, handleOpenFocusTest: _handleOpenFocusTest, ..._props }) => {\n    const handlers = useHandlers();\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n      id: item.id,\n    });\n\n    const style = {\n      transform: CSS.Transform.toString(transform),\n      transition: transition || 'transform 0.2s cubic-bezier(0.22, 1, 0.36, 1)',\n      willChange: 'transform',\n      opacity: isDragging ? 0.7 : 1,\n      background: isDragging ? '#f0f0f0' : undefined,\n    };\n\n    const handleCheckboxClick = (e) => {\n      e.stopPropagation();\n      handlers.toggleTestCompletion(item.subject, item.title, !item.completed);\n    };\n\n    const handleRemoveClick = (e) => {\n      e.stopPropagation();\n      handlers.removeFocusItem(item.id);\n    };\n\n    // Card classes inspired by a clean, timetable-like appearance\n    const cardClasses = `\n        flex items-center w-full p-4 rounded-lg border-l-4 transition-all duration-200 ease-in-out\n        ${item.completed ? 'bg-green-100' : 'bg-gray-50'} hover:shadow-lg cursor-pointer\n    `;\n\n    const titleClasses = `\n        font-bold text-gray-800 text-md\n        ${item.completed ? 'line-through text-gray-400' : ''}\n    `;\n\n    // Animation variants for card\n    const cardVariants = {\n      initial: { opacity: 0, scale: 0.96, y: 10 },\n      animate: { opacity: 1, scale: 1, y: 0 },\n      exit: { opacity: 0, scale: 0.85, x: 40, transition: { duration: 0.18 } },\n    };\n\n    return (\n      <motion.div\n        ref={setNodeRef}\n        style={style}\n        className={cardClasses.replace('border-l-4', '')}\n        variants={cardVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n      >\n        <div className=\"flex items-center w-full\">\n          {/* Checkbox on the left */}\n          <div className=\"flex items-center justify-center mr-4 flex-shrink-0\">\n            <motion.button\n              onClick={handleCheckboxClick}\n              className={`w-6 h-6 rounded-full border-2 ${item.completed ? 'bg-green-500 border-green-500' : 'border-gray-300 hover:border-blue-500'} flex-shrink-0 flex items-center justify-center transition-colors duration-200`}\n              aria-label={item.completed ? 'Mark as incomplete' : 'Mark as complete'}\n              whileTap={{ scale: 0.8 }}\n              animate={{\n                scale: item.completed ? 1.15 : 1,\n                backgroundColor: item.completed ? '#22c55e' : '#fff',\n                borderColor: item.completed ? '#22c55e' : '#d1d5db',\n              }}\n              transition={{ type: 'spring', stiffness: 350, damping: 18 }}\n            >\n              {item.completed && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4 text-white\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={3}\n                    d=\"M5 13l4 4L19 7\"\n                  />\n                </svg>\n              )}\n            </motion.button>\n          </div>\n\n          {/* Main Content as a link */}\n          {item.link ? (\n            <a\n              href={item.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex-grow min-w-0 px-2 py-1 block focus:outline-none\"\n              tabIndex={0}\n              aria-label={`Open test for ${item.title}`}\n              style={{ textDecoration: 'none' }}\n            >\n              <h3 className={titleClasses} title={item.title}>\n                {item.title}\n              </h3>\n              <p className=\"text-sm text-gray-500 truncate\">{item.subject}</p>\n              <div className=\"flex items-center mt-2 text-xs space-x-4\">\n                {item.mcqs > 0 && (\n                  <span className=\"text-gray-600 flex items-center\">{item.mcqs} MCQs</span>\n                )}\n              </div>\n            </a>\n          ) : (\n            <div className=\"flex-grow min-w-0 px-2 py-1\">\n              <h3 className={titleClasses} title={item.title}>\n                {item.title}\n              </h3>\n              <p className=\"text-sm text-gray-500 truncate\">{item.subject}</p>\n              <div className=\"flex items-center mt-2 text-xs space-x-4\">\n                {item.mcqs > 0 && (\n                  <span className=\"text-gray-600 flex items-center\">{item.mcqs} MCQs</span>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Action buttons on the right, always visible */}\n          <div className=\"flex flex-col items-center space-y-1 ml-2 flex-shrink-0\">\n            <button\n              className=\"p-1.5 rounded-full text-gray-400 hover:text-red-600 hover:bg-gray-100\"\n              onClick={handleRemoveClick}\n              aria-label=\"Remove from focus\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n              </svg>\n            </button>\n          </div>\n\n          <span\n            {...attributes}\n            {...listeners}\n            className=\"drag-handle flex items-center justify-center rounded-md ml-2 flex-shrink-0\"\n            style={{\n              cursor: 'grab',\n              width: 36,\n              height: 36,\n              touchAction: 'none',\n              background: 'none',\n            }}\n            aria-label=\"Drag to reorder\"\n            tabIndex={0}\n          >\n            {/* SVG grip icon */}\n            <svg\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 16 16\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"#6B7280\"\n            >\n              <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\n            </svg>\n          </span>\n        </div>\n      </motion.div>\n    );\n  }\n);\n\nexport default FocusItemCard;\n","// src/components/CircularProgressBar.js\r\nimport React from 'react';\r\n\r\nconst CircularProgressBar = React.memo(({ percentage }) => {\r\n  const radius = 15.9155;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const offset = circumference - (percentage / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-20 h-20\">\r\n      <svg className=\"w-full h-full\" viewBox=\"0 0 36 36\">\r\n        <path\r\n          className=\"text-green-200\"\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          fill=\"none\"\r\n          strokeWidth=\"3\"\r\n          stroke=\"currentColor\"\r\n        />\r\n        <path\r\n          className=\"progress-ring__circle text-green-500\"\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          fill=\"none\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          stroke=\"currentColor\"\r\n          style={{ strokeDasharray: `${circumference} ${circumference}`, strokeDashoffset: offset }}\r\n        />\r\n      </svg>\r\n      <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl font-bold text-green-600\">\r\n        {Math.round(percentage)}%\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CircularProgressBar;\r\n","// src/components/WeeklyTaskSummary.js\r\nimport React from 'react';\r\n\r\n/**\r\n * A single bar representing a day's progress, showing completed and missed tasks.\r\n */\r\nconst DayBar = ({ day, planned, completed, missed, isToday }) => {\r\n  const completedHeight = planned > 0 ? (completed / planned) * 100 : 0;\r\n  const missedHeight = planned > 0 ? (missed / planned) * 100 : 0;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center space-y-2\">\r\n      <div className=\"relative\">\r\n        <div className=\"absolute bottom-full mb-2 w-max px-2 py-1 text-xs text-white bg-gray-800 rounded-md opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n          {completed}/{planned} Done, {missed} Missed\r\n        </div>\r\n        {/* Bar container */}\r\n        <div className=\"group h-28 w-6 bg-gray-200 rounded-full flex flex-col justify-end overflow-hidden\">\r\n          {/* Missed portion of the bar */}\r\n          <div\r\n            className=\"bg-red-400 transition-all duration-500\"\r\n            style={{ height: `${missedHeight}%` }}\r\n          ></div>\r\n          {/* Completed portion of the bar */}\r\n          <div\r\n            className=\"bg-cyan-400 transition-all duration-500\"\r\n            style={{ height: `${completedHeight}%` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      {/* Day label */}\r\n      <p className={`text-sm font-semibold ${isToday ? 'text-cyan-500' : 'text-gray-500'}`}>\r\n        {day}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * The main component that displays the weekly summary chart.\r\n */\r\nconst WeeklyTaskSummary = React.memo(({ weeklyData }) => {\r\n  const totalCompleted = weeklyData.reduce((sum, day) => sum + day.completed, 0);\r\n  const totalMissed = weeklyData.reduce((sum, day) => sum + day.missed, 0);\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-2xl\">\r\n      <div className=\"flex justify-between items-start mb-4\">\r\n        <div>\r\n          <h3 className=\"text-gray-500 text-sm\">Overall</h3>\r\n          <p className=\"text-3xl font-bold text-gray-800\">\r\n            {totalCompleted} <span className=\"text-lg font-medium text-gray-600\">Completed</span>\r\n          </p>\r\n          <p className=\"text-red-500 text-lg font-bold\">\r\n            {totalMissed} <span className=\"font-medium\">Missed</span>\r\n          </p>\r\n        </div>\r\n        {/* Updated Legend */}\r\n        <div className=\"flex flex-col items-end space-y-1 text-sm\">\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-3 h-3 rounded-full bg-gray-200 mr-2\"></span>\r\n            <span>Planned</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-3 h-3 rounded-full bg-cyan-400 mr-2\"></span>\r\n            <span>Completed</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-3 h-3 rounded-full bg-red-400 mr-2\"></span>\r\n            <span>Missed</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-around\">\r\n        {weeklyData.map((data) => (\r\n          <DayBar\r\n            key={data.day}\r\n            day={data.day}\r\n            planned={data.planned}\r\n            completed={data.completed}\r\n            missed={data.missed}\r\n            isToday={data.isToday}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default WeeklyTaskSummary;\r\n","// src/components/AvailableTestCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\n\nconst AvailableTestCard = ({ test, subject, isAdded, focusItemId, onRemove }) => {\n  const handlers = useHandlers();\n\n  const handleAddClick = (e) => {\n    e.stopPropagation();\n    handlers.addFocusItem(test, subject);\n  };\n\n  const handleRemoveClick = (e) => {\n    e.stopPropagation();\n    if (onRemove) {\n      onRemove(focusItemId);\n    } else {\n      handlers.removeFocusItem(focusItemId);\n    }\n  };\n\n  const handleCheckboxClick = (e) => {\n    e.stopPropagation();\n    handlers.toggleTestCompletion(subject, test.title, !test.completed);\n  };\n\n  const cardClasses = `\n        flex items-center justify-between p-3 rounded-xl border transition-all duration-300\n        ${\n          test.completed\n            ? 'bg-green-50 border-green-200'\n            : 'bg-white border-gray-200 hover:shadow-md'\n        }\n    `;\n\n  const titleClasses = `\n        font-semibold\n        ${test.completed ? 'text-gray-500' : 'text-gray-800'}\n    `;\n\n  const subjectClasses = `\n        text-sm\n        ${test.completed ? 'text-gray-400' : 'text-gray-500'}\n    `;\n\n  return (\n    <div id={`available-test-${test.id}`} className={cardClasses}>\n      <div className=\"flex items-center flex-grow mr-2\">\n        <button\n          onClick={handleCheckboxClick}\n          className={`w-6 h-6 rounded-md border-2 ${test.completed ? 'bg-green-500 border-green-500' : 'border-gray-300'} mr-3 flex-shrink-0 flex items-center justify-center transition-colors`}\n          aria-label={test.completed ? 'Mark as incomplete' : 'Mark as complete'}\n        >\n          {test.completed && (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-4 w-4 text-white\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={3}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          )}\n        </button>\n        <div className=\"truncate\">\n          <h4 className={titleClasses}>{test.title}</h4>\n          <p className={subjectClasses}>{subject}</p>\n        </div>\n      </div>\n\n      <button\n        onClick={isAdded ? handleRemoveClick : handleAddClick}\n        className={`flex-shrink-0 px-4 py-1.5 text-sm font-semibold rounded-lg transition-colors duration-200\n                    ${\n                      isAdded\n                        ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                        : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\n                    }`}\n      >\n        {isAdded ? 'Remove' : 'Add'}\n      </button>\n    </div>\n  );\n};\n\nexport default AvailableTestCard;\n","// src/components/EditFocusModal.js\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport AvailableTestCard from './AvailableTestCard';\n\nconst EditFocusModal = ({\n  isOpen,\n  onClose,\n  testData,\n  todayFocusItems,\n  addFocusItem,\n  removeFocusItem,\n  handleToggleTestCompletion,\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedAvailableSubject, setSelectedAvailableSubject] = useState('');\n\n  // Reset filters when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      setSearchQuery('');\n      setSelectedAvailableSubject('');\n    }\n  }, [isOpen]);\n\n  // Memoize allTests calculation to prevent unnecessary re-renders\n  const allTests = useMemo(() => {\n    return Object.keys(testData).flatMap((subject) =>\n      testData[subject].map((test) => ({ ...test, subject, id: `${subject}-${test.title}` }))\n    );\n  }, [testData]);\n\n  // Memoize filteredAllTests calculation\n  const filteredAllTests = useMemo(() => {\n    return allTests.filter((test) => {\n      const matchesSubject =\n        selectedAvailableSubject === '' || test.subject === selectedAvailableSubject;\n      const matchesSearch =\n        test.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        test.subject.toLowerCase().includes(searchQuery.toLowerCase());\n      return matchesSubject && matchesSearch;\n    });\n  }, [allTests, selectedAvailableSubject, searchQuery]);\n\n  const subjects = Object.keys(testData);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose} // Close modal on backdrop click\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto p-6 relative scrollbar-hide\"\n          >\n            <div className=\"flex justify-between items-center mb-4 pb-4 border-b border-gray-200\">\n              <h2 className=\"text-2xl font-bold text-gray-800\">Add to Today's Focus</h2>\n              <button\n                onClick={onClose}\n                className=\"p-2 rounded-full text-gray-500 hover:bg-gray-200 transition-colors\"\n                aria-label=\"Close modal\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"select-available-subject\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Filter by Subject:\n              </label>\n              <select\n                id=\"select-available-subject\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={selectedAvailableSubject}\n                onChange={(e) => setSelectedAvailableSubject(e.target.value)}\n              >\n                <option value=\"\">All Subjects</option>\n                {subjects.map((subject) => (\n                  <option key={subject} value={subject}>\n                    {subject}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"mb-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Search available tests...\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                aria-label=\"Search available tests\"\n              />\n            </div>\n\n            <div\n              id=\"available-tests-list\"\n              className=\"space-y-3 pr-2 -mr-2 overflow-y-auto flex-grow hide-scrollbar\"\n            >\n              {filteredAllTests.length === 0 ? (\n                <p className=\"text-gray-500 text-center py-4\">\n                  No tests available matching your filters.\n                </p>\n              ) : (\n                filteredAllTests.map((test) => {\n                  const matchedFocusItem = todayFocusItems.find(\n                    (item) => item.subject === test.subject && item.title === test.title\n                  );\n                  const isAdded = !!matchedFocusItem;\n                  const focusItemId = matchedFocusItem ? matchedFocusItem.id : null;\n                  return (\n                    <AvailableTestCard\n                      key={test.id}\n                      test={test}\n                      subject={test.subject}\n                      isAdded={isAdded}\n                      focusItemId={focusItemId}\n                      onAdd={addFocusItem}\n                      onRemove={removeFocusItem}\n                      handleToggleTestCompletion={handleToggleTestCompletion}\n                    />\n                  );\n                })\n              )}\n            </div>\n            <div className=\"mt-6 flex justify-end pt-4 border-t border-gray-200\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n              >\n                Done\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default EditFocusModal;\n","// src/pages/DashboardPage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { FaPen } from 'react-icons/fa';\nimport profileAdminImg from '../assets/profile-admin.jpg';\nimport { useTestData } from '../context/TestDataContext';\nimport { useTimetable } from '../context/TimetableContext';\nimport { useFocusItems } from '../context/FocusItemsContext';\nimport Greeting from '../components/Greeting';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useHandlers } from '../context/HandlerContext';\nimport FocusItemCard from '../components/FocusItemCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport CircularProgressBar from '../components/CircularProgressBar';\nimport WeeklyTaskSummary from '../components/WeeklyTaskSummary';\nimport EditFocusModal from '../components/EditFocusModal';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { useAdmin } from '../context/AdminContext';\n\nconst DashboardPage = React.memo(\n  ({\n    onNavigate,\n    userName: _userName,\n    isLoadingTodayFocus,\n    currentTimetableSubject,\n    setCurrentTimetableSubject,\n    setCurrentSelectedSubject,\n    navigateToTrophyPage,\n  }) => {\n    const handlers = useHandlers();\n    // Use context for test data and related state\n    const { testData } = useTestData();\n    const { timetableEntries } = useTimetable();\n    const { todayFocusItems } = useFocusItems();\n    const { isAdmin } = useAdmin();\n    const [isEditFocusModalOpen, setIsEditFocusModalOpen] = useState(false);\n\n    // Copilot: Memoize subjects array from testData\n    const subjects = useMemo(() => Object.keys(testData), [testData]);\n\n    // Copilot: Memoize completedCount and totalCount for currentTimetableSubject\n    const completedCount = useMemo(\n      () =>\n        testData[currentTimetableSubject]\n          ? testData[currentTimetableSubject].filter((test) => test.completed).length\n          : 0,\n      [testData, currentTimetableSubject]\n    );\n\n    const totalCount = useMemo(\n      () => (testData[currentTimetableSubject] ? testData[currentTimetableSubject].length : 0),\n      [testData, currentTimetableSubject]\n    );\n\n    // Copilot: Memoize progressPercentage calculation\n    const progressPercentage = useMemo(() => {\n      const subjectTests = testData[currentTimetableSubject] || [];\n      const totalTests = subjectTests.length;\n      const completedTests = subjectTests.filter((test) => test.completed).length;\n      return totalTests > 0 ? (completedTests / totalTests) * 100 : 0;\n    }, [testData, currentTimetableSubject]);\n\n    // Copilot: Memoize weeklyTaskData calculation\n    const weeklyTaskData = useMemo(() => {\n      if (!timetableEntries) return [];\n      const days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n      const weeklySummary = [];\n      const today = new Date();\n      const todayDateString = today.toLocaleDateString('en-CA');\n      const startOfWeek = new Date(today);\n      startOfWeek.setHours(0, 0, 0, 0);\n      startOfWeek.setDate(today.getDate() - today.getDay());\n\n      for (let i = 0; i < 7; i++) {\n        const currentDay = new Date(startOfWeek);\n        currentDay.setDate(startOfWeek.getDate() + i);\n        const dateString = currentDay.toLocaleDateString('en-CA');\n        const tasksForDay = timetableEntries.filter((entry) => entry.date === dateString);\n        let completed = 0;\n        let missed = 0;\n        const now = new Date();\n        tasksForDay.forEach((task) => {\n          if (task.checked) {\n            completed++;\n          } else {\n            const eventDateTime = new Date(`${task.date}T${task.time}`);\n            if (eventDateTime < now) missed++;\n          }\n        });\n        weeklySummary.push({\n          day: days[currentDay.getDay()],\n          planned: tasksForDay.length,\n          completed,\n          missed,\n          isToday: dateString === todayDateString,\n        });\n      }\n      return weeklySummary;\n    }, [timetableEntries]);\n\n    // Calculate today's date string in 'YYYY-MM-DD' format\n\n    // Filter today's focus items for today (if they have a date field)\n    const todaysFocusTests = useMemo(() => {\n      return [...todayFocusItems].sort((a, b) => {\n        if (typeof a.order === 'number' && typeof b.order === 'number') {\n          return a.order - b.order;\n        }\n        // fallback to time if order is not present\n        return (a.time || '').localeCompare(b.time || '');\n      });\n    }, [todayFocusItems]);\n\n    // Find the current ongoing or next upcoming focus test\n\n    // Enhanced Timetable Event Status Logic\n    const now = new Date();\n    const sortedTimetable = [...timetableEntries].sort((a, b) => {\n      const aTime = new Date(`${a.date}T${a.time}`);\n      const bTime = new Date(`${b.date}T${b.time}`);\n      return aTime - bTime;\n    });\n\n    // Utility: calculate event end time (default 1 hour duration if not specified)\n    const getEventEndTime = (event) => {\n      if (event.endTime) {\n        return new Date(`${event.date}T${event.endTime}`);\n      }\n      const [hour] = event.time.split(':').map(Number);\n      return new Date(new Date(`${event.date}T${event.time}`).setHours(hour + 1));\n    };\n\n    let liveEvent = null;\n    let upcomingEvent = null;\n    let missedEvents = [];\n\n    sortedTimetable.forEach((event, idx, arr) => {\n      if (event.checked) return;\n      const eventStart = new Date(`${event.date}T${event.time}`);\n      const eventEnd = getEventEndTime(event);\n      const nextEvent = arr[idx + 1];\n      const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n\n      if (!liveEvent && now >= eventStart && (!nextStart || now < nextStart)) {\n        liveEvent = event;\n      } else if (!upcomingEvent && now < eventStart) {\n        upcomingEvent = event;\n      } else if (now > eventEnd && nextEvent && now > nextStart && !event.checked) {\n        missedEvents.push(event);\n      }\n    });\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, { activationConstraint: { distance: 5 } }),\n      useSensor(TouchSensor, { activationConstraint: { delay: 100, tolerance: 5 } }),\n      useSensor(KeyboardSensor)\n    );\n\n    const handleDragEnd = (event) => {\n      const { active, over } = event;\n      if (active.id !== over.id) {\n        const oldIndex = todayFocusItems.findIndex((item) => item.id === active.id);\n        const newIndex = todayFocusItems.findIndex((item) => item.id === over.id);\n        const newItems = arrayMove(todayFocusItems, oldIndex, newIndex);\n        handlers.reorderFocusItems(newItems);\n      }\n    };\n\n    const handleRemoveFocusItem = useCallback(\n      (id) => {\n        handlers.removeFocusItem(id);\n      },\n      [handlers]\n    );\n\n    const handleToggleTestCompletion = useCallback(\n      (id) => {\n        handlers.toggleTestCompletion(id);\n      },\n      [handlers]\n    );\n\n    const handleAddFocusItem = useCallback(\n      (item) => {\n        handlers.addFocusItem(item);\n      },\n      [handlers]\n    );\n\n    const handleCheck = useCallback(\n      (id) => {\n        handlers.toggleTestCompletion(id);\n      },\n      [handlers]\n    );\n\n    // Memoized handlers for navigation and modal\n    const handleProfileClick = useCallback(() => {\n      onNavigate('profile');\n    }, [onNavigate]);\n\n    const handleTrophyClick = useCallback(() => {\n      navigateToTrophyPage(currentTimetableSubject);\n    }, [navigateToTrophyPage, currentTimetableSubject]);\n\n    const handleOpenEditFocusModal = useCallback(() => {\n      setIsEditFocusModalOpen(true);\n    }, []);\n\n    const handleCloseEditFocusModal = useCallback(() => {\n      setIsEditFocusModalOpen(false);\n    }, []);\n\n    const handleSubjectChange = useCallback(\n      (newSubject) => {\n        setCurrentTimetableSubject(newSubject);\n        setCurrentSelectedSubject(newSubject);\n        localStorage.setItem('currentTimetableSubject', newSubject);\n      },\n      [setCurrentTimetableSubject, setCurrentSelectedSubject]\n    );\n\n    return (\n      <>\n        <div\n          id=\"page-dashboard\"\n          className=\"page px-6 py-8 overflow-x-hidden\"\n          style={{ overflow: 'hidden' }}\n        >\n          <div\n            className=\"flex items-center gap-4 mb-8 cursor-pointer transition-colors duration-300\"\n            onClick={handleProfileClick}\n          >\n            <img src={profileAdminImg} alt=\"User Avatar\" className=\"w-16 h-16 rounded-full\" />\n            <div>\n              <h2 className=\"text-2xl text-gray-600\">\n                Hello <span className=\"font-bold text-gray-800\">Nikhil !</span>\n              </h2>\n              <Greeting userName=\"Nikhil\" />\n            </div>\n          </div>\n\n          {/* Timetable Status Cards Section */}\n          <div className=\"mb-4\">\n            <h3 className=\"text-lg font-bold text-gray-800 mb-3 pl-1\">Today's Timetable Status</h3>\n          </div>\n          <div className=\"mb-8\">\n            <div\n              className=\"flex flex-nowrap overflow-x-auto pb-2 hide-scrollbar scroll-smooth w-full max-w-full\"\n              style={{ WebkitOverflowScrolling: 'touch' }}\n            >\n              {/* Live Event Card */}\n              {liveEvent && (\n                <div className=\"min-w-[300px] flex-shrink-0 bg-gray-50 rounded-xl flex items-center p-6 first:ml-0 ml-4\">\n                  <div>\n                    <div className=\"text-lg font-semibold text-gray-800\">{liveEvent.subject}</div>\n                    <div className=\"text-base text-gray-600\">{liveEvent.topic}</div>\n                    {/* Status with colored dot */}\n                    <span className=\"flex items-center gap-1 mt-1\">\n                      <span className=\"inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 bg-cyan-500\"></span>\n                      <span className=\"text-sm font-semibold text-cyan-600\">Live</span>\n                    </span>\n                  </div>\n                </div>\n              )}\n              {/* Upcoming Event Card */}\n              {upcomingEvent && (\n                <div className=\"min-w-[300px] flex-shrink-0 bg-gray-50 rounded-xl flex items-center p-6 first:ml-0 ml-4\">\n                  <div>\n                    <div className=\"text-lg font-semibold text-gray-800\">\n                      {upcomingEvent.subject}\n                    </div>\n                    <div className=\"text-base text-gray-600\">{upcomingEvent.topic}</div>\n                    {/* Status with colored dot */}\n                    <span className=\"flex items-center gap-1 mt-1\">\n                      <span className=\"inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 bg-orange-400\"></span>\n                      <span className=\"text-sm font-semibold text-orange-600\">Upcoming</span>\n                    </span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <header className=\"flex items-center justify-between mb-2\">\n            <h1 className=\"text-xl font-bold text-gray-900\">Weekly Performance</h1>\n          </header>\n          <p className=\"text-gray-500 mb-6\">Your progress for this week...</p>\n          <div className=\"mb-10 border rounded-lg\">\n            <WeeklyTaskSummary weeklyData={weeklyTaskData} />\n          </div>\n\n          <header className=\"flex items-center justify-between mb-2\">\n            <h2 className=\"text-xl font-bold text-gray-900\">Subject Progress</h2>\n          </header>\n          <p className=\"text-gray-500 mb-6\">Track completed tests for a specific subject.</p>\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"select-timetable-subject\"\n              className=\"block text-sm font-medium text-gray-700 mb-3\"\n            >\n              Select Subject:\n            </label>\n            <select\n              id=\"select-timetable-subject\"\n              value={currentTimetableSubject || ''}\n              onChange={(e) => handleSubjectChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Select Subject</option>\n              {subjects.map((subject) => (\n                <option key={subject} value={subject}>\n                  {subject.charAt(0).toUpperCase() + subject.slice(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div\n            id=\"timetable-progress-card\"\n            onClick={handleTrophyClick}\n            className=\"bg-green-50 rounded-xl p-5 flex items-center justify-between mb-10 cursor-pointer transition-colors duration-300\"\n          >\n            <CircularProgressBar percentage={progressPercentage} />\n            <div className=\"flex-1 ml-4\">\n              <p className=\"text-sm text-gray-500\">Subject</p>\n              <p id=\"timetable-progress-subject\" className=\"text-xl font-bold text-gray-800\">\n                {currentTimetableSubject || 'Select Subject'}\n              </p>\n              <p className=\"text-sm text-gray-500 mt-1\">Tests Completed</p>\n              <p className=\"text-lg font-bold text-gray-800\">\n                {completedCount}/{totalCount}\n              </p>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n          </div>\n\n          <header className=\"flex items-center justify-between mb-2\">\n            <h2 className=\"text-xl font-bold text-gray-900\">Today's Focus</h2>\n\n            {/* edit focus button */}\n            {isAdmin && (\n              <button\n                onClick={handleOpenEditFocusModal}\n                className=\"\n                  fixed bottom-20 right-6 z-50\n                  bg-blue-50 text-blue-700 font-semibold \n                  py-3 px-5 rounded-xl shadow-md \n                  flex items-center text-sm\n                  transition-all duration-200 ease-in-out\n                  hover:bg-blue-100 hover:shadow-lg hover:-translate-y-0.5 \n                  active:scale-[0.98] active:shadow-sm\n                \"\n                title=\"Edit focus items\"\n              >\n                <FaPen className=\"mr-2\" /> Edit Focus\n              </button>\n            )}\n            {/* edit focus button ends  */}\n          </header>\n          <p className=\"text-gray-500 mb-6\">\n            {todaysFocusTests.length === 0\n              ? \"You have no tests in Today's Focus.\"\n              : `You have ${todaysFocusTests.length} test${todaysFocusTests.length > 1 ? 's' : ''} in Today's Focus.`}\n          </p>\n          <div id=\"today-focus-container\" className=\"flex flex-col space-y-4 pb-4 min-w-0\">\n            {isLoadingTodayFocus ? (\n              <LoadingSpinner />\n            ) : todaysFocusTests.length > 0 ? (\n              <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleDragEnd}\n              >\n                <SortableContext\n                  items={todaysFocusTests.map((item) => item.id)}\n                  strategy={verticalListSortingStrategy}\n                >\n                  <AnimatePresence>\n                    {todaysFocusTests.map((item, index) => (\n                      <motion.div key={item.id} layout className=\"min-w-0\">\n                        <FocusItemCard\n                          item={item}\n                          onRemove={handleRemoveFocusItem}\n                          handleToggleTestCompletion={handleToggleTestCompletion}\n                          onCheck={handleCheck}\n                          isFirst={index === 0}\n                          isLast={index === todaysFocusTests.length - 1}\n                        />\n                      </motion.div>\n                    ))}\n                  </AnimatePresence>\n                </SortableContext>\n              </DndContext>\n            ) : (\n              <div className=\"bg-gray-50 rounded-xl p-6 text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 text-gray-300\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={1}\n                      d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-medium text-gray-900\">No focus items for today</h3>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Add tests to your focus list to track your study progress.\n                </p>\n                <div className=\"mt-4\">\n                  <button\n                    onClick={handleOpenEditFocusModal}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    <svg\n                      className=\"-ml-1 mr-2 h-5 w-5\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    Add Focus Items\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <EditFocusModal\n          isOpen={isEditFocusModalOpen}\n          onClose={handleCloseEditFocusModal}\n          testData={testData}\n          todayFocusItems={todayFocusItems}\n          addFocusItem={handleAddFocusItem}\n          removeFocusItem={handleRemoveFocusItem}\n        />\n      </>\n    );\n  }\n);\n\nexport default DashboardPage;\n"],"names":["React","_ref","userName","_userName","greetingText","setGreetingText","useState","greetingEmoji","setGreetingEmoji","useEffect","updateGreeting","hour","Date","getHours","text","emoji","intervalId","setInterval","clearInterval","_jsx","children","_jsxs","className","item","handleOpenFocusTest","_handleOpenFocusTest","_props","handlers","useHandlers","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","id","style","CSS","Transform","toString","willChange","opacity","background","undefined","cardClasses","completed","titleClasses","motion","div","ref","replace","variants","initial","scale","y","animate","exit","x","duration","button","onClick","e","stopPropagation","toggleTestCompletion","subject","title","whileTap","backgroundColor","borderColor","type","stiffness","damping","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","link","href","target","rel","tabIndex","textDecoration","mcqs","removeFocusItem","width","height","x1","y1","x2","y2","cursor","touchAction","percentage","circumference","Math","PI","offset","strokeDasharray","strokeDashoffset","round","DayBar","day","planned","missed","isToday","completedHeight","missedHeight","_ref2","weeklyData","totalCompleted","reduce","sum","totalMissed","map","data","test","isAdded","focusItemId","onRemove","subjectClasses","addFocusItem","isOpen","onClose","testData","todayFocusItems","handleToggleTestCompletion","searchQuery","setSearchQuery","selectedAvailableSubject","setSelectedAvailableSubject","allTests","useMemo","Object","keys","flatMap","filteredAllTests","filter","matchesSubject","matchesSearch","toLowerCase","includes","subjects","AnimatePresence","htmlFor","value","onChange","placeholder","length","matchedFocusItem","find","AvailableTestCard","onAdd","onNavigate","isLoadingTodayFocus","currentTimetableSubject","setCurrentTimetableSubject","setCurrentSelectedSubject","navigateToTrophyPage","useTestData","timetableEntries","useTimetable","useFocusItems","isAdmin","useAdmin","isEditFocusModalOpen","setIsEditFocusModalOpen","completedCount","totalCount","progressPercentage","subjectTests","totalTests","completedTests","weeklyTaskData","days","weeklySummary","today","todayDateString","toLocaleDateString","startOfWeek","setHours","setDate","getDate","getDay","i","currentDay","dateString","tasksForDay","entry","date","now","forEach","task","checked","time","push","todaysFocusTests","sort","a","b","order","localeCompare","sortedTimetable","liveEvent","upcomingEvent","missedEvents","event","idx","arr","eventStart","eventEnd","endTime","split","Number","getEventEndTime","nextEvent","nextStart","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","delay","tolerance","KeyboardSensor","handleRemoveFocusItem","useCallback","handleAddFocusItem","handleCheck","handleProfileClick","handleTrophyClick","handleOpenEditFocusModal","handleCloseEditFocusModal","handleSubjectChange","newSubject","localStorage","setItem","_Fragment","overflow","src","profileAdminImg","alt","Greeting","WebkitOverflowScrolling","topic","WeeklyTaskSummary","charAt","toUpperCase","slice","CircularProgressBar","points","FaPen","LoadingSpinner","DndContext","collisionDetection","closestCenter","onDragEnd","active","over","oldIndex","findIndex","newIndex","newItems","arrayMove","reorderFocusItems","SortableContext","items","strategy","verticalListSortingStrategy","index","layout","FocusItemCard","onCheck","isFirst","isLast","fillRule","clipRule","EditFocusModal"],"sourceRoot":""}