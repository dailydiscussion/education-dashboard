{"version":3,"file":"static/js/990.a9508017.chunk.js","mappings":"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","sources":["components/EmptyState.js","components/Greeting.js","components/FocusItemCard.js","components/CircularProgressBar.js","components/WeeklyTaskSummary.js","components/AvailableTestCard.js","components/EditFocusModal.js","pages/DashboardPage.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\n\n/**\n * EmptyState Component\n * \n * A reusable component to display a friendly message when there's no content to show.\n * \n * @param {Object} props - Component props\n * @param {string} [props.title='No items found'] - The main title/message\n * @param {string} [props.description='There are no items to display at the moment.'] - Additional description text\n * @param {React.ReactNode} [props.icon] - Optional icon to display\n * @param {React.ReactNode} [props.action] - Optional call-to-action button or element\n * @param {string} [props.className=''] - Additional CSS classes\n * @returns {React.ReactElement} The EmptyState component\n */\nconst EmptyState = ({\n  title = 'No items found',\n  description = 'There are no items to display at the moment.',\n  icon,\n  action,\n  className = ''\n}) => {\n  return (\n    <motion.div \n      className={`flex flex-col items-center justify-center p-8 text-center ${className}`}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      {icon && <div className=\"mb-4 text-gray-400\">{icon}</div>}\n      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{title}</h3>\n      <p className=\"text-gray-500 mb-6 max-w-md\">{description}</p>\n      {action && <div className=\"mt-2\">{action}</div>}\n    </motion.div>\n  );\n};\n\nEmptyState.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  icon: PropTypes.node,\n  action: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default EmptyState;\n","// src/components/Greeting.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Greeting = React.memo(({ userName }) => {\r\n    const [greetingText, setGreetingText] = useState('');\r\n    const [greetingEmoji, setGreetingEmoji] = useState('');\r\n\r\n    useEffect(() => {\r\n        const updateGreeting = () => {\r\n            const hour = new Date().getHours();\r\n            let text = '';\r\n            let emoji = '';\r\n\r\n            if (hour >= 5 && hour < 12) {\r\n                text = 'Good morning';\r\n                emoji = '☀️';\r\n            } else if (hour >= 12 && hour < 17) {\r\n                text = 'Good afternoon';\r\n                emoji = '👋';\r\n            } else if (hour >= 17 && hour < 22) {\r\n                text = 'Good evening';\r\n                emoji = '🌙';\r\n            } else {\r\n                text = 'Time to sleep';\r\n                emoji = '😴';\r\n            }\r\n            setGreetingText(text);\r\n            setGreetingEmoji(emoji);\r\n        };\r\n\r\n        updateGreeting();\r\n        const intervalId = setInterval(updateGreeting, 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"text-base font-light text-gray-500 flex items-center\">\r\n                {greetingText}<span className=\"ml-1 text-base\">{greetingEmoji}</span>\r\n            </p>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Greeting;","// src/components/FocusItemCard.js\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useHandlers } from '../context/HandlerContext';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\nconst FocusItemCard = React.memo(({ item, handleOpenFocusTest, ...props }) => {\n    const handlers = useHandlers();\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({ id: item.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition: transition || 'transform 0.2s cubic-bezier(0.22, 1, 0.36, 1)',\n        willChange: 'transform',\n        opacity: isDragging ? 0.7 : 1,\n        background: isDragging ? '#f0f0f0' : undefined,\n    };\n\n\n    const handleCheckboxClick = (e) => {\n        e.stopPropagation();\n        handlers.toggleTestCompletion(item.subject, item.title, !item.completed);\n    };\n\n    const handleRemoveClick = (e) => {\n        e.stopPropagation();\n        handlers.removeFocusItem(item.id);\n    };\n\n\n\n\n    // Card classes inspired by a clean, timetable-like appearance\n    const cardClasses = `\n        flex items-center w-full p-4 rounded-lg border-l-4 transition-all duration-200 ease-in-out\n        ${item.completed ? 'bg-green-100' : 'bg-gray-50'} hover:shadow-lg cursor-pointer\n    `;\n    \n    const titleClasses = `\n        font-bold text-gray-800 text-md\n        ${item.completed ? 'line-through text-gray-400' : ''}\n    `;\n\n    // Animation variants for card\n    const cardVariants = {\n        initial: { opacity: 0, scale: 0.96, y: 10 },\n        animate: { opacity: 1, scale: 1, y: 0 },\n        exit: { opacity: 0, scale: 0.85, x: 40, transition: { duration: 0.18 } },\n    };\n\n    return (\n        <motion.div\n            ref={setNodeRef}\n            style={style}\n            className={cardClasses.replace('border-l-4', '')}\n            variants={cardVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n        >\n            <div className=\"flex items-center w-full\">\n                {/* Checkbox on the left */}\n                <div className=\"flex items-center justify-center mr-4 flex-shrink-0\">\n                    <motion.button\n                        onClick={handleCheckboxClick}\n                        className={`w-6 h-6 rounded-full border-2 ${item.completed ? \"bg-green-500 border-green-500\" : \"border-gray-300 hover:border-blue-500\"} flex-shrink-0 flex items-center justify-center transition-colors duration-200`}\n                        aria-label={item.completed ? \"Mark as incomplete\" : \"Mark as complete\"}\n                        whileTap={{ scale: 0.8 }}\n                        animate={{ scale: item.completed ? 1.15 : 1, backgroundColor: item.completed ? '#22c55e' : '#fff', borderColor: item.completed ? '#22c55e' : '#d1d5db' }}\n                        transition={{ type: 'spring', stiffness: 350, damping: 18 }}\n                    >\n                        {item.completed && (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                            </svg>\n                        )}\n                    </motion.button>\n                </div>\n\n                {/* Main Content as a link */}\n                {item.link ? (\n                    <a\n                        href={item.link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex-grow min-w-0 px-2 py-1 block focus:outline-none\"\n                        tabIndex={0}\n                        aria-label={`Open test for ${item.title}`}\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <h3 className={titleClasses} title={item.title}>{item.title}</h3>\n                        <p className=\"text-sm text-gray-500 truncate\">{item.subject}</p>\n                        <div className=\"flex items-center mt-2 text-xs space-x-4\">\n                            {item.mcqs > 0 && (\n                                <span className=\"text-gray-600 flex items-center\">\n                                    {item.mcqs} MCQs\n                                </span>\n                            )}\n                        </div>\n                    </a>\n                ) : (\n                    <div className=\"flex-grow min-w-0 px-2 py-1\">\n                        <h3 className={titleClasses} title={item.title}>{item.title}</h3>\n                        <p className=\"text-sm text-gray-500 truncate\">{item.subject}</p>\n                        <div className=\"flex items-center mt-2 text-xs space-x-4\">\n                            {item.mcqs > 0 && (\n                                <span className=\"text-gray-600 flex items-center\">\n                                    {item.mcqs} MCQs\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n                {/* Action buttons on the right, always visible */}\n                <div className=\"flex flex-col items-center space-y-1 ml-2 flex-shrink-0\">\n                    <button\n                        className=\"p-1.5 rounded-full text-gray-400 hover:text-red-600 hover:bg-gray-100\"\n                        onClick={handleRemoveClick}\n                        aria-label=\"Remove from focus\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                    </button>\n                </div>\n\n                <span\n                    {...attributes}\n                    {...listeners}\n                    className=\"drag-handle flex items-center justify-center rounded-md ml-2 flex-shrink-0\"\n                    style={{ cursor: 'grab', width: 36, height: 36, touchAction: 'none', background: 'none' }}\n                    aria-label=\"Drag to reorder\"\n                    tabIndex={0}\n                >\n                    {/* SVG grip icon */}\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#6B7280\">\n                        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"/>\n                    </svg>\n                </span>\n            </div>\n        </motion.div>\n    );\n});\n\nexport default FocusItemCard;","// src/components/CircularProgressBar.js\r\nimport React from 'react';\r\n\r\nconst CircularProgressBar = React.memo(({ percentage }) => {\r\n    const radius = 15.9155;\r\n    const circumference = 2 * Math.PI * radius;\r\n    const offset = circumference - (percentage / 100) * circumference;\r\n\r\n    return (\r\n        <div className=\"relative w-20 h-20\">\r\n            <svg className=\"w-full h-full\" viewBox=\"0 0 36 36\">\r\n                <path className=\"text-green-200\" d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\" fill=\"none\" strokeWidth=\"3\" stroke=\"currentColor\" />\r\n                <path\r\n                    className=\"progress-ring__circle text-green-500\"\r\n                    d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                    fill=\"none\"\r\n                    strokeWidth=\"3\"\r\n                    strokeLinecap=\"round\"\r\n                    stroke=\"currentColor\"\r\n                    style={{ strokeDasharray: `${circumference} ${circumference}`, strokeDashoffset: offset }}\r\n                />\r\n            </svg>\r\n            <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl font-bold text-green-600\">{Math.round(percentage)}%</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CircularProgressBar;","// src/components/WeeklyTaskSummary.js\r\nimport React from 'react';\r\n\r\n/**\r\n * A single bar representing a day's progress, showing completed and missed tasks.\r\n */\r\nconst DayBar = ({ day, planned, completed, missed, isToday }) => {\r\n    const completedHeight = planned > 0 ? (completed / planned) * 100 : 0;\r\n    const missedHeight = planned > 0 ? (missed / planned) * 100 : 0;\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center space-y-2\">\r\n            <div className=\"relative\">\r\n                <div className=\"absolute bottom-full mb-2 w-max px-2 py-1 text-xs text-white bg-gray-800 rounded-md opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n                    {completed}/{planned} Done, {missed} Missed\r\n                </div>\r\n                {/* Bar container */}\r\n                <div className=\"group h-28 w-6 bg-gray-200 rounded-full flex flex-col justify-end overflow-hidden\">\r\n                    {/* Missed portion of the bar */}\r\n                    <div\r\n                        className=\"bg-red-400 transition-all duration-500\"\r\n                        style={{ height: `${missedHeight}%` }}\r\n                    ></div>\r\n                    {/* Completed portion of the bar */}\r\n                    <div\r\n                        className=\"bg-cyan-400 transition-all duration-500\"\r\n                        style={{ height: `${completedHeight}%` }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n            {/* Day label */}\r\n            <p className={`text-sm font-semibold ${isToday ? 'text-cyan-500' : 'text-gray-500'}`}>\r\n                {day}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * The main component that displays the weekly summary chart.\r\n */\r\nconst WeeklyTaskSummary = React.memo(({ weeklyData }) => {\r\n    const totalCompleted = weeklyData.reduce((sum, day) => sum + day.completed, 0);\r\n    const totalMissed = weeklyData.reduce((sum, day) => sum + day.missed, 0);\r\n\r\n    return (\r\n        <div className=\"bg-white p-6 rounded-2xl\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n                <div>\r\n                    <h3 className=\"text-gray-500 text-sm\">Overall</h3>\r\n                    <p className=\"text-3xl font-bold text-gray-800\">{totalCompleted} <span className=\"text-lg font-medium text-gray-600\">Completed</span></p>\r\n                    <p className=\"text-red-500 text-lg font-bold\">{totalMissed} <span className=\"font-medium\">Missed</span></p>\r\n                </div>\r\n                {/* Updated Legend */}\r\n                <div className=\"flex flex-col items-end space-y-1 text-sm\">\r\n                    <div className=\"flex items-center\">\r\n                        <span className=\"w-3 h-3 rounded-full bg-gray-200 mr-2\"></span>\r\n                        <span>Planned</span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <span className=\"w-3 h-3 rounded-full bg-cyan-400 mr-2\"></span>\r\n                        <span>Completed</span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <span className=\"w-3 h-3 rounded-full bg-red-400 mr-2\"></span>\r\n                        <span>Missed</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-around\">\r\n                {weeklyData.map(data => (\r\n                    <DayBar\r\n                        key={data.day}\r\n                        day={data.day}\r\n                        planned={data.planned}\r\n                        completed={data.completed}\r\n                        missed={data.missed}\r\n                        isToday={data.isToday}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeeklyTaskSummary;","// src/components/AvailableTestCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\n\nconst AvailableTestCard = ({ test, subject, isAdded, focusItemId, onRemove }) => {\n    const handlers = useHandlers();\n\n    const handleAddClick = (e) => {\n        e.stopPropagation();\n        handlers.addFocusItem(test, subject);\n    };\n\n    const handleRemoveClick = (e) => {\n        e.stopPropagation();\n        if (onRemove) {\n            onRemove(focusItemId);\n        } else {\n            handlers.removeFocusItem(focusItemId);\n        }\n    };\n\n    \n    const handleCheckboxClick = (e) => {\n        e.stopPropagation();\n        handlers.toggleTestCompletion(subject, test.title, !test.completed);\n    };\n\n    const cardClasses = `\n        flex items-center justify-between p-3 rounded-xl border transition-all duration-300\n        ${test.completed \n            ? 'bg-green-50 border-green-200' \n            : 'bg-white border-gray-200 hover:shadow-md'\n        }\n    `;\n\n    const titleClasses = `\n        font-semibold\n        ${test.completed \n            ? 'line-through text-gray-500' \n            : 'text-gray-800'\n        }\n    `;\n    \n    const subjectClasses = `\n        text-sm\n        ${test.completed \n            ? 'text-gray-400' \n            : 'text-gray-500'\n        }\n    `;\n\n    return (\n        <div id={`available-test-${test.id}`} className={cardClasses}>\n            <div className=\"flex items-center flex-grow mr-2\">\n                <button\n                    onClick={handleCheckboxClick}\n                    className={`w-6 h-6 rounded-md border-2 ${test.completed ? \"bg-green-500 border-green-500\" : \"border-gray-300\"} mr-3 flex-shrink-0 flex items-center justify-center transition-colors`}\n                    aria-label={test.completed ? \"Mark as incomplete\" : \"Mark as complete\"}\n                >\n                    {test.completed && (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                    )}\n                </button>\n                <div className=\"truncate\">\n                    <h4 className={titleClasses}>{test.title}</h4>\n                    <p className={subjectClasses}>{subject}</p>\n                </div>\n            </div>\n            \n            <button\n                onClick={isAdded ? handleRemoveClick : handleAddClick}\n                className={`flex-shrink-0 px-4 py-1.5 text-sm font-semibold rounded-lg transition-colors duration-200\n                    ${isAdded \n                        ? 'bg-red-100 text-red-700 hover:bg-red-200' \n                        : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\n                    }`\n                }\n            >\n                {isAdded ? 'Remove' : 'Add'}\n            </button>\n        </div>\n    );\n};\n\nexport default AvailableTestCard;","// src/components/EditFocusModal.js\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport AvailableTestCard from './AvailableTestCard';\n\nconst EditFocusModal = ({ isOpen, onClose, testData, todayFocusItems, addFocusItem, removeFocusItem, handleToggleTestCompletion }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [isSearching, setIsSearching] = useState(false);\n    const [searchError, setSearchError] = useState('');\n    const [selectedAvailableSubject, setSelectedAvailableSubject] = useState('');\n\n    // Reset filters when modal opens\n    useEffect(() => {\n        if (isOpen) {\n            setSearchQuery('');\n            setSelectedAvailableSubject('');\n        }\n    }, [isOpen]);\n\n    // Memoize allTests calculation to prevent unnecessary re-renders\n    const allTests = useMemo(() => {\n        return Object.keys(testData).flatMap(subject =>\n            testData[subject].map(test => ({ ...test, subject, id: `${subject}-${test.title}` }))\n        );\n    }, [testData]);\n\n    // Memoize filteredAllTests calculation with debounce effect\n    const [debouncedSearchQuery, setDebouncedSearchQuery] = useState('');\n    \n    // Debounce search query to prevent excessive filtering\n    useEffect(() => {\n        if (searchQuery.trim().length >= 2) {\n            setIsSearching(true);\n            const timer = setTimeout(() => {\n                setDebouncedSearchQuery(searchQuery);\n                setIsSearching(false);\n            }, 300);\n            return () => clearTimeout(timer);\n        } else if (searchQuery.trim().length > 0) {\n            setSearchError('Please enter at least 2 characters');\n            setDebouncedSearchQuery('');\n        } else {\n            setDebouncedSearchQuery('');\n            setSearchError('');\n        }\n    }, [searchQuery]);\n\n    const filteredAllTests = useMemo(() => {\n        // If no search query, only filter by subject\n        if (!debouncedSearchQuery) {\n            return allTests.filter(test => \n                selectedAvailableSubject === '' || test.subject === selectedAvailableSubject\n            );\n        }\n        \n        // Filter by both subject and search query\n        return allTests.filter(test => {\n            const matchesSubject = selectedAvailableSubject === '' || test.subject === selectedAvailableSubject;\n            const searchLower = debouncedSearchQuery.toLowerCase();\n            const matchesSearch = test.title.toLowerCase().includes(searchLower) ||\n                               test.subject.toLowerCase().includes(searchLower);\n            return matchesSubject && matchesSearch;\n        });\n    }, [allTests, selectedAvailableSubject, debouncedSearchQuery]);\n\n    const subjects = Object.keys(testData);\n\n    return (\n        <AnimatePresence>\n            {isOpen && (\n                <motion.div\n                    className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.22 }}\n                    onClick={onClose} // Close modal on backdrop click\n                >\n                        <div\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"bg-white rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto p-6 relative scrollbar-hide\"\n                        \n                        >\n\n                        <div className=\"flex justify-between items-center mb-4 pb-4 border-b border-gray-200\">\n                            <h2 className=\"text-2xl font-bold text-gray-800\">Add to Today's Focus</h2>\n                            <button\n                                onClick={onClose}\n                                className=\"p-2 rounded-full text-gray-500 hover:bg-gray-200 transition-colors\"\n                                aria-label=\"Close modal\"\n                            >\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                            </button>\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"select-available-subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">Filter by Subject:</label>\n                            <select\n                                id=\"select-available-subject\"\n                                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                                value={selectedAvailableSubject}\n                                onChange={(e) => setSelectedAvailableSubject(e.target.value)}\n                            >\n                                <option value=\"\">All Subjects</option>\n                                {subjects.map(subject => (\n                                    <option key={subject} value={subject}>{subject}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <div className=\"relative\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search tests by title or subject...\"\n                                    className={`w-full pl-10 pr-10 py-2 rounded-lg border ${\n                                        searchError ? 'border-red-400' : 'border-gray-200'\n                                    } focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white transition-colors duration-200`}\n                                    value={searchQuery}\n                                    onChange={(e) => {\n                                        const value = e.target.value;\n                                        setSearchQuery(value);\n                                        // Clear error when user types\n                                        if (searchError && value.trim().length >= 2) {\n                                            setSearchError('');\n                                        }\n                                    }}\n                                    aria-label=\"Search available tests\"\n                                    aria-invalid={!!searchError}\n                                    aria-describedby={searchError ? 'search-error' : undefined}\n                                />\n                                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\n                                    {isSearching ? (\n                                        <svg className=\"animate-spin h-4 w-4 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    ) : (\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                                        </svg>\n                                    )}\n                                </div>\n                                {searchQuery && (\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            setSearchQuery('');\n                                            setSearchError('');\n                                        }}\n                                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 focus:outline-none\"\n                                        aria-label=\"Clear search\"\n                                    >\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                        </svg>\n                                    </button>\n                                )}\n                            </div>\n                            <div className=\"flex justify-between mt-1 px-1\">\n                                {searchError ? (\n                                    <p id=\"search-error\" className=\"text-xs text-red-500\">{searchError}</p>\n                                ) : searchQuery ? (\n                                    <p className=\"text-xs text-gray-500\">\n                                        {searchQuery.length}/50 characters • {filteredAllTests.length} test{filteredAllTests.length !== 1 ? 's' : ''} found\n                                    </p>\n                                ) : (\n                                    <p className=\"text-xs text-gray-400\">Type at least 2 characters to search</p>\n                                )}\n                            </div>\n                        </div>\n\n                        <div id=\"available-tests-list\" className=\"space-y-3 pr-2 -mr-2 overflow-y-auto flex-grow hide-scrollbar\">\n                            {isSearching ? (\n                                <div className=\"flex justify-center py-4\">\n                                    <div className=\"animate-pulse text-gray-500\">Searching tests...</div>\n                                </div>\n                            ) : filteredAllTests.length === 0 ? (\n                                <p className=\"text-gray-500 text-center py-4\">\n                                    {searchQuery || selectedAvailableSubject \n                                        ? 'No tests match your search. Try different keywords or filters.'\n                                        : 'No tests available. Add tests in the Tests section first.'}\n                                </p>\n                            ) : (\n                                filteredAllTests.map(test => {\n                                    const matchedFocusItem = todayFocusItems.find(item => item.subject === test.subject && item.title === test.title);\n                                    const isAdded = !!matchedFocusItem;\n                                    const focusItemId = matchedFocusItem ? matchedFocusItem.id : null;\n                                    return (\n                                        <AvailableTestCard\n                                            key={test.id}\n                                            test={test}\n                                            subject={test.subject}\n                                            isAdded={isAdded}\n                                            focusItemId={focusItemId}\n                                            onAdd={addFocusItem}\n                                            onRemove={removeFocusItem}\n                                            handleToggleTestCompletion={handleToggleTestCompletion}\n                                        />\n                                    );\n                                })\n                            )}\n                        </div>\n                         <div className=\"mt-6 flex justify-end pt-4 border-t border-gray-200\">\n                            <button\n                                onClick={onClose}\n                                className=\"px-6 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n                            >\n                                Done\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default EditFocusModal;","// src/pages/DashboardPage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport profileAdminImg from '../assets/profile-admin.jpg';\nimport { useTestData } from '../context/TestDataContext';\nimport { useTimetable } from '../context/TimetableContext';\nimport { useFocusItems } from '../context/FocusItemsContext';\nimport EmptyState from '../components/EmptyState';\nimport Greeting from '../components/Greeting';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useHandlers } from '../context/HandlerContext';\nimport FocusItemCard from '../components/FocusItemCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport CircularProgressBar from '../components/CircularProgressBar';\nimport WeeklyTaskSummary from '../components/WeeklyTaskSummary';\nimport EditFocusModal from '../components/EditFocusModal';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\nconst DashboardPage = React.memo(({\n  onNavigate,\n  userName,\n  isLoadingTodayFocus,\n  currentTimetableSubject,\n  setCurrentTimetableSubject,\n  setCurrentSelectedSubject,\n  navigateToTrophyPage,\n}) => {\n  const handlers = useHandlers();\n  // Use context for test data and related state\n  const { testData } = useTestData();\n  const { timetableEntries } = useTimetable();\n  const { todayFocusItems } = useFocusItems();\n\n  const [isEditFocusModalOpen, setIsEditFocusModalOpen] = useState(false);\n\n    // Copilot: Memoize subjects array from testData\n    const subjects = useMemo(() => Object.keys(testData), [testData]);\n\n    // Copilot: Memoize completedCount and totalCount for currentTimetableSubject\n    const completedCount = useMemo(() => (\n        testData[currentTimetableSubject]\n            ? testData[currentTimetableSubject].filter(test => test.completed).length\n            : 0\n    ), [testData, currentTimetableSubject]);\n\n    const totalCount = useMemo(() => (\n        testData[currentTimetableSubject]\n            ? testData[currentTimetableSubject].length\n            : 0\n    ), [testData, currentTimetableSubject]);\n\n    // Copilot: Memoize progressPercentage calculation\n    const progressPercentage = useMemo(() => {\n        const subjectTests = testData[currentTimetableSubject] || [];\n        const totalTests = subjectTests.length;\n        const completedTests = subjectTests.filter(test => test.completed).length;\n        return totalTests > 0 ? (completedTests / totalTests) * 100 : 0;\n    }, [testData, currentTimetableSubject]);\n\n    // Copilot: Memoize weeklyTaskData calculation\n    const weeklyTaskData = useMemo(() => {\n        if (!timetableEntries) return [];\n        const days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n        const weeklySummary = [];\n        const today = new Date();\n        const todayDateString = today.toLocaleDateString('en-CA');\n        const startOfWeek = new Date(today);\n        startOfWeek.setHours(0, 0, 0, 0);\n        startOfWeek.setDate(today.getDate() - today.getDay());\n\n        for (let i = 0; i < 7; i++) {\n            const currentDay = new Date(startOfWeek);\n            currentDay.setDate(startOfWeek.getDate() + i);\n            const dateString = currentDay.toLocaleDateString('en-CA');\n            const tasksForDay = timetableEntries.filter(entry => entry.date === dateString);\n            let completed = 0;\n            let missed = 0;\n            const now = new Date();\n            tasksForDay.forEach(task => {\n                if (task.checked) {\n                    completed++;\n                } else {\n                    const eventDateTime = new Date(`${task.date}T${task.time}`);\n                    if (eventDateTime < now) missed++;\n                }\n            });\n            weeklySummary.push({ day: days[currentDay.getDay()], planned: tasksForDay.length, completed, missed, isToday: dateString === todayDateString });\n        }\n        return weeklySummary;\n    }, [timetableEntries]);\n\n    // Calculate today's date string in 'YYYY-MM-DD' format\n\n\n    // Filter today's focus items for today (if they have a date field)\n    const todaysFocusTests = useMemo(() => {\n        return todayFocusItems.sort((a, b) => (a.time || '').localeCompare(b.time || ''));\n    }, [todayFocusItems]);\n\n    // Find the current ongoing or next upcoming focus test\n\n\n    // Enhanced Timetable Event Status Logic\n    const now = new Date();\n    const sortedTimetable = [...timetableEntries].sort((a, b) => {\n        const aTime = new Date(`${a.date}T${a.time}`);\n        const bTime = new Date(`${b.date}T${b.time}`);\n        return aTime - bTime;\n    });\n\n    // Utility: calculate event end time (default 1 hour duration if not specified)\n    const getEventEndTime = (event) => {\n        if (event.endTime) {\n            return new Date(`${event.date}T${event.endTime}`);\n        }\n        const [hour] = event.time.split(':').map(Number);\n        return new Date(new Date(`${event.date}T${event.time}`).setHours(hour + 1));\n    };\n\n    let liveEvent = null;\n    let upcomingEvent = null;\n    let missedEvents = [];\n\n    sortedTimetable.forEach((event, idx, arr) => {\n        if (event.checked) return;\n        const eventStart = new Date(`${event.date}T${event.time}`);\n        const eventEnd = getEventEndTime(event);\n        const nextEvent = arr[idx + 1];\n        const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n\n        if (!liveEvent && now >= eventStart && (!nextStart || now < nextStart)) {\n            liveEvent = event;\n        } else if (!upcomingEvent && now < eventStart) {\n            upcomingEvent = event;\n        } else if (\n            now > eventEnd && nextEvent && now > nextStart && !event.checked\n        ) {\n            missedEvents.push(event);\n        }\n    });\n\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, { activationConstraint: { distance: 5 } }),\n        useSensor(TouchSensor, { activationConstraint: { delay: 100, tolerance: 5 } }),\n        useSensor(KeyboardSensor)\n    );\n\n    const handleDragEnd = (event) => {\n        const { active, over } = event;\n        if (active.id !== over.id) {\n            const oldIndex = todayFocusItems.findIndex(item => item.id === active.id);\n            const newIndex = todayFocusItems.findIndex(item => item.id === over.id);\n            const newItems = arrayMove(todayFocusItems, oldIndex, newIndex);\n            handlers.reorderFocusItems(newItems);\n        }\n    };\n\n    const handleRemoveFocusItem = useCallback((id) => {\n        handlers.removeFocusItem(id);\n    }, [handlers]);\n\n    const handleToggleTestCompletion = useCallback((id) => {\n        handlers.toggleTestCompletion(id);\n    }, [handlers]);\n\n    const handleAddFocusItem = useCallback((item) => {\n        handlers.addFocusItem(item);\n    }, [handlers]);\n\n    const handleCheck = useCallback((id) => {\n        handlers.toggleTestCompletion(id);\n    }, [handlers]);\n\n    // Memoized handlers for navigation and modal\n    const handleProfileClick = useCallback(() => {\n        onNavigate('profile');\n    }, [onNavigate]);\n\n    const handleOpenEditFocusModal = useCallback(() => {\n        setIsEditFocusModalOpen(true);\n    }, []);\n\n    const handleCloseEditFocusModal = useCallback(() => {\n        setIsEditFocusModalOpen(false);\n    }, []);\n\n    const handleTrophyClick = useCallback(() => {\n        navigateToTrophyPage(currentTimetableSubject);\n    }, [navigateToTrophyPage, currentTimetableSubject]);\n\n    const handleSubjectChange = useCallback((e) => {\n        const newSubject = e.target.value;\n        setCurrentTimetableSubject(newSubject);\n        setCurrentSelectedSubject(newSubject);\n        localStorage.setItem('currentTimetableSubject', newSubject);\n    }, [setCurrentTimetableSubject, setCurrentSelectedSubject]);\n\n    return (\n        <>\n            <div id=\"page-dashboard\" className=\"page px-6 py-8 overflow-x-hidden\" style={{overflow:'hidden'}} >\n                \n                <div\n                    className=\"flex items-center gap-4 mb-8 cursor-pointer transition-colors duration-300\"\n                    onClick={handleProfileClick}\n                >\n<img src={profileAdminImg} alt=\"User Avatar\" className=\"w-16 h-16 rounded-full\" />\n                    <div>\n                        <h2 className=\"text-2xl text-gray-600\">Hello <span className=\"font-bold text-gray-800\">Nikhil !</span></h2>\n                        <Greeting userName=\"Nikhil\" />\n                    </div>\n                </div>\n\n                {/* Timetable Status Cards Section */}\n                <div className=\"mb-4\">\n                  <h3 className=\"text-lg font-bold text-gray-800 mb-3 pl-1\">Today's Timetable Status</h3>\n                </div>\n                <div className=\"mb-8\">\n                  <div\n                    className=\"flex flex-nowrap overflow-x-auto pb-2 hide-scrollbar scroll-smooth w-full max-w-full\"\n                    style={{ WebkitOverflowScrolling: 'touch' }}\n                  >\n                    {/* Live Event Card */}\n                    {liveEvent && (\n                      <div className=\"min-w-[300px] flex-shrink-0 bg-gray-50 rounded-xl flex items-center p-6 first:ml-0 ml-4\">\n                        <div>\n                          <div className=\"text-lg font-semibold text-gray-800\">{liveEvent.subject}</div>\n                          <div className=\"text-base text-gray-600\">{liveEvent.topic}</div>\n                          {/* Status with colored dot */}\n                          <span className=\"flex items-center gap-1 mt-1\">\n                            <span className=\"inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 bg-cyan-500\"></span>\n                            <span className=\"text-sm font-semibold text-cyan-600\">Live</span>\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                    {/* Upcoming Event Card */}\n                    {upcomingEvent && (\n                      <div className=\"min-w-[300px] flex-shrink-0 bg-gray-50 rounded-xl flex items-center p-6 first:ml-0 ml-4\">\n                        <div>\n                          <div className=\"text-lg font-semibold text-gray-800\">{upcomingEvent.subject}</div>\n                          <div className=\"text-base text-gray-600\">{upcomingEvent.topic}</div>\n                          {/* Status with colored dot */}\n                          <span className=\"flex items-center gap-1 mt-1\">\n                            <span className=\"inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 bg-orange-400\"></span>\n                            <span className=\"text-sm font-semibold text-orange-600\">Upcoming</span>\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <header className=\"flex items-center justify-between mb-2\">\n                    <h1 className=\"text-xl font-bold text-gray-900\">Weekly Performance</h1>\n                </header>\n                <p className=\"text-gray-500 mb-6\">Your progress for this week...</p>\n                <div className=\"mb-10 border rounded-lg\">\n                    <WeeklyTaskSummary weeklyData={weeklyTaskData} />\n                </div>\n\n                <header className=\"flex items-center justify-between mb-2\">\n                    <h2 className=\"text-xl font-bold text-gray-900\">Subject Progress</h2>\n                </header>\n                <p className=\"text-gray-500 mb-6\">Track completed tests for a specific subject.</p>\n                <div className=\"mb-6\">\n                    <label htmlFor=\"select-timetable-subject\" className=\"block text-sm font-medium text-gray-700 mb-3\">Select Subject:</label>\n                    <select\n                        id=\"select-timetable-subject\"\n                        className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={currentTimetableSubject}\n                        onChange={handleSubjectChange}\n                        disabled={subjects.length === 0}\n                    >\n                        {subjects.length === 0 && <option value=\"\">No Subjects Available</option>}\n                        {subjects.map(subject => <option key={subject} value={subject}>{subject}</option>)}\n                    </select>\n                </div>\n                <div id=\"timetable-progress-card\" onClick={handleTrophyClick} className=\"bg-green-50 rounded-xl p-5 flex items-center justify-between mb-10 cursor-pointer transition-colors duration-300\">\n                    <CircularProgressBar percentage={progressPercentage} />\n                    <div className=\"flex-1 ml-4\">\n                        <p className=\"text-sm text-gray-500\">Subject</p>\n                        <p id=\"timetable-progress-subject\" className=\"text-xl font-bold text-gray-800\">{currentTimetableSubject || 'Select Subject'}</p>\n                        <p className=\"text-sm text-gray-500 mt-1\">Tests Completed</p>\n                        <p className=\"text-lg font-bold text-gray-800\">{completedCount}/{totalCount}</p>\n                    </div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n                </div>\n                \n                <header className=\"flex items-center justify-between mb-2\">\n                    <h2 className=\"text-xl font-bold text-gray-900\">Today's Focus</h2>\n                    <button onClick={handleOpenEditFocusModal} className=\"bg-blue-50 text-blue-700 font-semibold text-xs px-4 py-2 rounded-full flex items-center hover:bg-blue-100 transition duration-200\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n                        Edit Focus\n                    </button>\n                </header>\n                <p className=\"text-gray-500 mb-6\">\n                    {todaysFocusTests.length === 0\n                            ? \"You have no tests in Today's Focus.\"\n                            : `You have ${todaysFocusTests.length} test${todaysFocusTests.length > 1 ? 's' : ''} in Today's Focus.`}\n                </p>\n                <div id=\"today-focus-container\" className=\"flex flex-col space-y-4 pb-4 min-w-0\">\n                    {isLoadingTodayFocus ? (\n                        <LoadingSpinner />\n                    ) : (\n                        todaysFocusTests.length === 0 ? (\n                            <EmptyState\n                                title=\"No focus items for today\"\n                                description=\"Add tests to your focus list to keep track of what you need to study today.\"\n                                icon={\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-gray-300\">\n                                        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                                        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                                    </svg>\n                                }\n                                action={\n                                    <button\n                                        onClick={handleOpenEditFocusModal}\n                                        className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n                                    >\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                        Add Focus Items\n                                    </button>\n                                }\n                                className=\"py-8\"\n                            />\n                        ) : (\n                            <DndContext\n                                sensors={sensors}\n                                collisionDetection={closestCenter}\n                                onDragEnd={handleDragEnd}\n                            >\n                                <SortableContext\n                                    items={todaysFocusTests.map(item => item.id)}\n                                    strategy={verticalListSortingStrategy}\n                                >\n                                    <AnimatePresence>\n                                        {todaysFocusTests.map((item, index) => (\n                                            <motion.div key={item.id} layout className=\"min-w-0\">\n                                                <FocusItemCard \n    item={item} \n    onRemove={handleRemoveFocusItem} \n    handleToggleTestCompletion={handleToggleTestCompletion} \n    onCheck={handleCheck} \n    isFirst={index === 0} \n    isLast={index === todaysFocusTests.length - 1} \n/>\n                                            </motion.div>\n                                        ))}\n                                    </AnimatePresence>\n                                </SortableContext>\n                            </DndContext>\n                        )\n                    )}\n                </div>\n            </div>\n\n            <EditFocusModal\n                isOpen={isEditFocusModalOpen}\n                onClose={handleCloseEditFocusModal}\n                testData={testData}\n                todayFocusItems={todayFocusItems}\n                addFocusItem={handleAddFocusItem}\n                removeFocusItem={handleRemoveFocusItem}\n            />\n        </>\n    );\n});\n\nexport default DashboardPage;"],"names":["_ref","title","description","icon","action","className","_jsxs","motion","div","concat","initial","opacity","y","animate","transition","duration","children","_jsx","React","userName","greetingText","setGreetingText","useState","greetingEmoji","setGreetingEmoji","useEffect","updateGreeting","hour","Date","getHours","text","emoji","intervalId","setInterval","clearInterval","item","handleOpenFocusTest","_objectWithoutProperties","_excluded","handlers","useHandlers","attributes","listeners","setNodeRef","transform","isDragging","useSortable","id","style","CSS","Transform","toString","willChange","background","undefined","cardClasses","completed","titleClasses","ref","replace","variants","scale","exit","x","button","onClick","e","stopPropagation","toggleTestCompletion","subject","whileTap","backgroundColor","borderColor","type","stiffness","damping","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","link","href","target","rel","tabIndex","textDecoration","mcqs","removeFocusItem","width","height","x1","y1","x2","y2","_objectSpread","cursor","touchAction","percentage","circumference","Math","PI","offset","strokeDasharray","strokeDashoffset","round","DayBar","day","planned","missed","isToday","completedHeight","missedHeight","_ref2","weeklyData","totalCompleted","reduce","sum","totalMissed","map","data","test","isAdded","focusItemId","onRemove","subjectClasses","addFocusItem","isOpen","onClose","testData","todayFocusItems","handleToggleTestCompletion","searchQuery","setSearchQuery","isSearching","setIsSearching","searchError","setSearchError","selectedAvailableSubject","setSelectedAvailableSubject","allTests","useMemo","Object","keys","flatMap","debouncedSearchQuery","setDebouncedSearchQuery","trim","length","timer","setTimeout","clearTimeout","filteredAllTests","filter","matchesSubject","searchLower","toLowerCase","matchesSearch","includes","subjects","AnimatePresence","htmlFor","value","onChange","placeholder","cx","cy","r","matchedFocusItem","find","AvailableTestCard","onAdd","onNavigate","isLoadingTodayFocus","currentTimetableSubject","setCurrentTimetableSubject","setCurrentSelectedSubject","navigateToTrophyPage","useTestData","timetableEntries","useTimetable","useFocusItems","isEditFocusModalOpen","setIsEditFocusModalOpen","completedCount","totalCount","progressPercentage","subjectTests","totalTests","completedTests","weeklyTaskData","days","weeklySummary","today","todayDateString","toLocaleDateString","startOfWeek","setHours","setDate","getDate","getDay","i","currentDay","dateString","tasksForDay","entry","date","now","forEach","task","checked","time","push","todaysFocusTests","sort","a","b","localeCompare","sortedTimetable","liveEvent","upcomingEvent","missedEvents","event","idx","arr","eventStart","eventEnd","endTime","split","Number","getEventEndTime","nextEvent","nextStart","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","delay","tolerance","KeyboardSensor","handleRemoveFocusItem","useCallback","handleAddFocusItem","handleCheck","handleProfileClick","handleOpenEditFocusModal","handleCloseEditFocusModal","handleTrophyClick","handleSubjectChange","newSubject","localStorage","setItem","_Fragment","overflow","src","profileAdminImg","alt","Greeting","WebkitOverflowScrolling","topic","WeeklyTaskSummary","disabled","CircularProgressBar","points","LoadingSpinner","EmptyState","fillRule","clipRule","DndContext","collisionDetection","closestCenter","onDragEnd","active","over","oldIndex","findIndex","newIndex","newItems","arrayMove","reorderFocusItems","SortableContext","items","strategy","verticalListSortingStrategy","index","layout","FocusItemCard","onCheck","isFirst","isLast","EditFocusModal"],"sourceRoot":""}