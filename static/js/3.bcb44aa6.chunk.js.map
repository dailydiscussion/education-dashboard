{"version":3,"file":"static/js/3.bcb44aa6.chunk.js","mappings":"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","sources":["components/TimetableEventCard.js","components/EditTimetableModal.js","pages/TimetablePage.js","components/AddModal.js"],"sourcesContent":["// src/components/TimetableEventCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { HiPencil, HiTrash, HiDotsVertical, HiCheck, HiX, HiPlus } from 'react-icons/hi';\nimport { motion } from 'framer-motion';\n\n// IMPORTANT: This component now accepts a single 'event' object as a prop.\n// The list mapping and date navigation are handled in TimetablePage.js.\nconst TimetableEventCard = React.memo(({ event, nextEvent, isEditMode, onEdit, status }) => {\n  const handlers = useHandlers();\n\n  // Removed sortedEvents useMemo as this component now receives a single event.\n  // Sorting is handled in TimetablePage.js before passing individual events.\n\n  // Removed formatDateForDisplay as date navigation is no longer in this component.\n  // Removed handlePrevDay and handleNextDay as date navigation is no longer in this component.\n\n  // Helper: get study day (4am–4am)\n  function getStudyDay(dateObj) {\n    const studyDay = new Date(dateObj);\n    if (studyDay.getHours() < 4) {\n      studyDay.setDate(studyDay.getDate() - 1);\n    }\n    studyDay.setHours(0, 0, 0, 0);\n    return studyDay;\n  }\n\n  // Helper: convert 24-hour time to 12-hour AM/PM format\n  function formatTimeToAMPM(timeString) {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours, 10);\n    const ampm = hour >= 12 ? 'pm' : 'am';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  }\n\n  /**\n   * Determines the status of an event (Completed, Missed, or Pending).\n   * @param {string} eventDate - The date of the event in 'YYYY-MM-DD' format.\n   * @param {string} eventTime - The time of the event in 'HH:MM' format.\n   * @param {boolean} isChecked - The checked status of the event.\n   * @returns {{text: string, colorClass: string}} An object with status text and Tailwind CSS color class.\n   */\n  const getEventStatus = (event, nextEvent, now = new Date()) => {\n    if (event.checked) {\n      return { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n    }\n    const eventStart = new Date(`${event.date}T${event.time}`);\n    const DEFAULT_DURATION_MINUTES = 180;\n    const eventEnd = new Date(eventStart.getTime() + DEFAULT_DURATION_MINUTES * 60000);\n    const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n    const studyDay = getStudyDay(eventStart);\n    const studyDayEnd = new Date(studyDay);\n    studyDayEnd.setDate(studyDay.getDate() + 1);\n    studyDayEnd.setHours(4, 0, 0, 0); // 4am next day\n    // If now is after study day end, missed\n    if (now > studyDayEnd) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // If now is before event start time\n    if (now < eventStart) {\n      return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n    }\n    // If now is between event start and event end: Live\n    if (now >= eventStart && now < eventEnd) {\n      return { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n    }\n    // If now is after event end and before next event's start (or no next event): Missed\n    if (now >= eventEnd && (!nextStart || now < nextStart)) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // If now is after next event's start: Missed\n    if (nextStart && now >= nextStart) {\n      return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n    }\n    // Default fallback\n    return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n  };\n\n  // If status prop provided, use it for text/color, otherwise fallback to local calculation\n  let statusObj;\n  if (status) {\n    switch (status) {\n      case 'Completed':\n        statusObj = { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n        break;\n      case 'Live':\n        statusObj = { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n        break;\n      case 'Missed':\n        statusObj = { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        break;\n      case 'Pending':\n        statusObj = { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n        break;\n      default:\n        statusObj = { text: status, colorClass: 'text-gray-600', dotClass: 'bg-gray-300' };\n    }\n  } else {\n    statusObj = getEventStatus(event, nextEvent, new Date());\n  }\n\n  // Card background: green for completed, gray for normal, red for missed\n  let cardClasses = `flex flex-col p-4 mb-3 rounded-xl`;\n  if (event.checked || (status && status === 'Completed')) {\n    cardClasses += ' bg-green-100'; // Completed: green background\n  } else if ((status && status === 'Missed') || (!status && statusObj.text === 'Missed')) {\n    cardClasses += ' bg-red-100'; // Missed: red background\n  } else {\n    cardClasses += ' bg-gray-50'; // Normal: subtle gray background\n  }\n\n  return (\n    <div id={`timetable-event-${event.id}`} className={cardClasses}>\n      {/* Main row: Checkmark | Details | Time */}\n      <div className=\"flex items-center justify-between\">\n        {/* Left: Checkmark (always visible) */}\n        <div className=\"flex items-center pr-3\">\n          <motion.button\n            onClick={() => handlers.checkTimetableEntry(event.id)}\n            className=\"w-6 h-6 rounded-full border-2 flex items-center justify-center bg-white\"\n            aria-label={event.checked ? 'Mark as incomplete' : 'Mark as complete'}\n            whileTap={{ scale: 0.85 }}\n            animate={{\n              scale: event.checked ? 1.1 : 1,\n              backgroundColor: event.checked ? '#22c55e' : '#ffffff',\n              borderColor: event.checked ? '#22c55e' : '#d1d5db',\n            }}\n            transition={{ type: 'spring', stiffness: 400, damping: 15 }}\n          >\n            {event.checked && (\n              <motion.svg\n                initial={{ scale: 0, rotate: -90 }}\n                animate={{ scale: 1, rotate: 0 }}\n                transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 text-white\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={3}\n                  d=\"M5 13l4 4L19 7\"\n                />\n              </motion.svg>\n            )}\n          </motion.button>\n        </div>\n\n        {/* Center: Subject, Topic, Status */}\n        <div className=\"flex-1 min-w-0\">\n          <p className={`text-lg font-semibold text-gray-800 truncate ${event.checked ? 'line-through opacity-70' : ''}`}>\n            {event.subject}\n          </p>\n          <h4 className=\"text-base text-gray-600 truncate\">{event.topic}</h4>\n          {!event.checked && statusObj && (\n            <span className=\"flex items-center gap-1 mt-1\">\n              <span\n                className={`inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 ${statusObj.dotClass}`}\n              ></span>\n              <span className={`text-sm font-semibold ${statusObj.colorClass}`}>\n                {statusObj.text}\n              </span>\n            </span>\n          )}\n        </div>\n\n        {/* Right: Time */}\n        <div className=\"flex flex-col items-end\">\n          <p className=\"text-lg font-bold text-gray-400\">{formatTimeToAMPM(event.time)}</p>\n        </div>\n      </div>\n\n      {/* Bottom bar: Edit/Delete (only in edit mode) */}\n      {isEditMode && (\n        <div className=\"flex items-center gap-3 pt-3 border-white justify-end\">\n          <motion.button\n            onClick={() => onEdit(event.id)}\n            className={`flex items-center justify-center gap-1.5 w-20 py-1.5 rounded-lg transition-colors duration-200 text-blue-600 hover:bg-opacity-70 ${\n              event.checked || (status && status === 'Completed')\n                ? 'bg-green-50 hover:bg-green-100'\n                : (status && status === 'Missed') || (!status && statusObj.text === 'Missed')\n                ? 'bg-red-50 hover:bg-red-100'\n                : 'bg-white hover:bg-gray-50'\n            }`}\n            aria-label=\"Edit event\"\n            whileTap={{ scale: 0.95 }}\n            transition={{ type: 'spring', stiffness: 400, damping: 17 }}\n          >\n            <HiPencil className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Edit</span>\n          </motion.button>\n          <motion.button\n            onClick={() => handlers.deleteTimetableEntry(event.id)}\n            className={`flex items-center justify-center gap-1.5 w-20 py-1.5 rounded-lg transition-colors duration-200 text-red-600 hover:bg-opacity-70 ${\n              event.checked || (status && status === 'Completed')\n                ? 'bg-green-50 hover:bg-green-100'\n                : (status && status === 'Missed') || (!status && statusObj.text === 'Missed')\n                ? 'bg-red-50 hover:bg-red-100'\n                : 'bg-white hover:bg-gray-50'\n            }`}\n            aria-label=\"Delete event\"\n            whileTap={{ scale: 0.95 }}\n            transition={{ type: 'spring', stiffness: 400, damping: 17 }}\n          >\n            <HiTrash className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Delete</span>\n          </motion.button>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default TimetableEventCard;\n","// src/components/EditTimetableModal.js\nimport React, { useState, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EditTimetableModal = ({\n  isOpen,\n  onClose,\n  eventData,\n  onUpdate,\n  showNotification,\n  onAddSimilar,\n}) => {\n  const [subject, setSubject] = useState('');\n  const [topic, setTopic] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [createFutureEvent, setCreateFutureEvent] = useState(false);\n  const [futureDate, setFutureDate] = useState('');\n\n  useEffect(() => {\n    if (eventData) {\n      setSubject(eventData.subject || '');\n      setTopic(eventData.topic || '');\n      setDate(eventData.date || '');\n      setTime(eventData.time || '');\n    }\n  }, [eventData]);\n\n  const handleUpdateClick = async () => {\n    if (!eventData) {\n      showNotification('No event selected for editing.', 'error');\n      return;\n    }\n\n    if (!subject || !topic || !date || !time) {\n      showNotification('All fields are required.', 'error');\n      return;\n    }\n\n    if (createFutureEvent && !futureDate) {\n      showNotification('Please select a future date.', 'error');\n      return;\n    }\n\n    onClose(); // Optimistic UI\n\n    setTimeout(async () => {\n      try {\n        if (createFutureEvent) {\n          await onAddSimilar({\n            ...eventData,\n            subject,\n            topic,\n            date: futureDate,\n            time,\n            checked: false,\n          });\n          showNotification('New event created for future date.', 'success');\n        } else {\n          if (eventData.id) {\n            await onUpdate(eventData.id, subject, topic, date, time);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating event:', error);\n        showNotification('Failed to update event. Please try again.', 'error');\n      }\n    }, 0);\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto p-6 relative\"\n          >\n            <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Edit Study Event</h3>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-subject\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Subject\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-subject\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Anatomy\"\n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-topic\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Topic\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-topic\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Cardiovascular System\"\n                value={topic}\n                onChange={(e) => setTopic(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label\n                htmlFor=\"edit-modal-date\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Date\n              </label>\n              <input\n                type=\"date\"\n                id=\"edit-modal-date\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"edit-modal-time\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Time\n              </label>\n              <input\n                type=\"time\"\n                id=\"edit-modal-time\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-6 pt-4 border-t border-gray-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <span className=\"text-sm font-medium text-gray-700\">Repeat Event</span>\n\n                {/* Custom Horizontal Toggle Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => setCreateFutureEvent(!createFutureEvent)}\n                  className={`relative w-12 h-6 rounded-full focus:outline-none transition-colors duration-300 ${\n                    createFutureEvent ? 'bg-blue-600' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`absolute top-1 left-1 h-4 w-4 rounded-full bg-white shadow transform transition-transform duration-300 ${\n                      createFutureEvent ? 'translate-x-6' : 'translate-x-0'\n                    }`}\n                  />\n                </button>\n              </div>\n\n              {createFutureEvent && (\n                <div className=\"mt-4\">\n                  <label\n                    htmlFor=\"future-date\"\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    Future Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"future-date\"\n                    min={date}\n                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                    value={futureDate}\n                    onChange={(e) => setFutureDate(e.target.value)}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-8 flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleUpdateClick}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                {createFutureEvent ? 'Create Future Event' : 'Update Event'}\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default EditTimetableModal;\n","// src/pages/TimetablePage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport TimetableEventCard from '../components/TimetableEventCard';\nimport { useHandlers } from '../context/HandlerContext';\nimport EditTimetableModal from '../components/EditTimetableModal';\nimport AddModal from '../components/AddModal';\nimport { useAdmin } from '../context/AdminContext';\nimport { FaCheck, FaPen, FaPlus } from 'react-icons/fa';\n\n/**\n * Helper function to get a 'YYYY-MM-DD' formatted string from a Date object,\n * based on the user's local time zone. This prevents UTC conversion issues.\n * @param {Date} date - The date object to format.\n * @returns {string} The formatted date string.\n */\nconst getLocalDateString = (date) => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// Custom areEqual function for React.memo\nfunction areEqual(prevProps, nextProps) {\n  if (\n    prevProps.timetableEntries.length !== nextProps.timetableEntries.length ||\n    prevProps.selectedDisplayDate !== nextProps.selectedDisplayDate\n  ) {\n    return false;\n  }\n  // Compare each event by id and checked (add more fields if needed)\n  for (let i = 0; i < prevProps.timetableEntries.length; i++) {\n    const prevEvent = prevProps.timetableEntries[i];\n    const nextEvent = nextProps.timetableEntries[i];\n    if (\n      prevEvent.id !== nextEvent.id ||\n      prevEvent.checked !== nextEvent.checked ||\n      prevEvent.subject !== nextEvent.subject ||\n      prevEvent.topic !== nextEvent.topic ||\n      prevEvent.date !== nextEvent.date ||\n      prevEvent.time !== nextEvent.time\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Memoize TimetablePage to prevent unnecessary re-renders\nconst TimetablePage = React.memo(({ timetableEntries, showNotification, userId: _userId }) => {\n  const handlers = useHandlers();\n  const [timetableEditMode, setTimetableEditMode] = useState(false);\n  const { isAdmin } = useAdmin();\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalFromState] = useState(false); // Renamed to avoid confusion\n  const [currentEventToEdit, setCurrentEventToEdit] = useState(null);\n\n  const [selectedDisplayDate, setSelectedDisplayDate] = useState(getLocalDateString(new Date()));\n  // Add search state\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Helper to control modal state consistently\n  const setIsEditModalOpen = useCallback((isOpen) => {\n    setIsEditModalFromState(isOpen);\n    if (!isOpen) {\n      setCurrentEventToEdit(null); // Clear event data when modal closes\n    }\n  }, []);\n\n  // Memoized handlers for toggles and modals\n  const handleToggleEditMode = useCallback(() => {\n    setTimetableEditMode((prev) => !prev);\n  }, []);\n\n  const handleCloseAddModal = useCallback(() => {\n    setIsAddModalOpen(false);\n  }, []);\n\n  const handleCloseEditModal = useCallback(() => {\n    setIsEditModalOpen(false);\n  }, [setIsEditModalOpen]);\n\n  // (Moved above usage)\n  const handleSaveEvent = (data) => {\n    handlers.addTimetableEntry(data.subject, data.topic, data.date, data.time);\n  };\n\n  const handleEditEvent = useCallback(\n    (eventId) => {\n      const eventToEdit = timetableEntries.find((event) => event.id === eventId);\n      if (eventToEdit) {\n        setCurrentEventToEdit(eventToEdit);\n        setIsEditModalOpen(true);\n      }\n    },\n    [timetableEntries, setIsEditModalOpen]\n  );\n\n  const handleDeleteTimetableEntry = useCallback(\n    (id) => {\n      handlers.deleteTimetableEntry(id);\n    },\n    [handlers]\n  );\n\n  const handleCheckTimetableEntry = useCallback(\n    (id) => {\n      handlers.checkTimetableEntry(id);\n    },\n    [handlers]\n  );\n\n  // This handleUpdateEvent now correctly calls the updateTimetableEntry prop from App.js\n  // which already has userId and showNotification in its closure.\n  const handleUpdateEvent = useCallback(\n    async (eventId, subject, topic, date, time) => {\n      await handlers.updateTimetableEntry(eventId, subject, topic, date, time);\n      setIsEditModalOpen(false); // Close modal using the consistent helper\n    },\n    [handlers, setIsEditModalOpen]\n  );\n\n  const handleAddSimilarEvent = useCallback(\n    (eventData) => {\n      handlers.addTimetableEntry(\n        eventData.subject,\n        eventData.topic,\n        eventData.date,\n        eventData.time\n      );\n    },\n    [handlers]\n  );\n\n  const memoizedSelectedDateObject = useMemo(() => {\n    const date = new Date(selectedDisplayDate);\n    const userTimezoneOffset = date.getTimezoneOffset() * 60000;\n    return new Date(date.getTime() + userTimezoneOffset);\n  }, [selectedDisplayDate]);\n\n  // Chronologically sort all entries by date, then by time\n  const sortedTimetableEntries = useMemo(() => {\n    return [...timetableEntries].sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      return a.time.localeCompare(b.time);\n    });\n  }, [timetableEntries]);\n\n  // Filtered and sorted entries based on search (searches across all entries)\n  const filteredEntries = useMemo(() => {\n    if (!searchQuery.trim()) {\n      // If not searching, show only today's entries, sorted\n      return sortedTimetableEntries.filter((entry) => entry.date === selectedDisplayDate);\n    }\n    const q = searchQuery.toLowerCase();\n    return sortedTimetableEntries.filter(\n      (entry) =>\n        entry.subject.toLowerCase().includes(q) ||\n        entry.topic.toLowerCase().includes(q) ||\n        entry.time.toLowerCase().includes(q)\n    );\n  }, [sortedTimetableEntries, searchQuery, selectedDisplayDate]);\n\n  // Utility: calculate event end time (default 1 hour duration if not specified)\n  const getEventEndTime = (event) => {\n    if (event.endTime) {\n      return new Date(`${event.date}T${event.endTime}`);\n    }\n    const [hour] = event.time.split(':').map(Number);\n    return new Date(new Date(`${event.date}T${event.time}`).setHours(hour + 1));\n  };\n\n  // Calculate status for each event\n  const filteredEntriesWithStatus = useMemo(() => {\n    const now = new Date();\n    return filteredEntries.map((event) => {\n      if (event.checked) return { ...event, status: 'Completed' };\n      // Find the true next event in the full sorted timetable\n      const idxInFull = sortedTimetableEntries.findIndex((e) => e.id === event.id);\n      const nextEvent = idxInFull !== -1 ? sortedTimetableEntries[idxInFull + 1] : undefined;\n      const eventStart = new Date(`${event.date}T${event.time}`);\n      const eventEnd = getEventEndTime(event);\n      const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n      if (now >= eventStart && (!nextStart || now < nextStart)) {\n        return { ...event, status: 'Live' };\n      } else if (now < eventStart) {\n        return { ...event, status: 'Pending' };\n      } else if (now > eventEnd && nextEvent && now > nextStart && !event.checked) {\n        return { ...event, status: 'Missed' };\n      }\n      return { ...event, status: 'Pending' };\n    });\n  }, [filteredEntries, sortedTimetableEntries]);\n\n  // Group filtered entries by date for search results\n  const groupedByDate = useMemo(() => {\n    if (!searchQuery.trim()) return {};\n    return filteredEntriesWithStatus.reduce((acc, entry) => {\n      if (!acc[entry.date]) acc[entry.date] = [];\n      acc[entry.date].push(entry);\n      return acc;\n    }, {});\n  }, [filteredEntriesWithStatus, searchQuery]);\n\n  const addModalFields = useMemo(\n    () => [\n      { name: 'subject', label: 'Subject', placeholder: 'e.g., Anatomy', required: true },\n      { name: 'topic', label: 'Topic', placeholder: 'e.g., Cardiovascular System', required: true },\n      {\n        name: 'date',\n        label: 'Date',\n        type: 'date',\n        required: true,\n        defaultValue: selectedDisplayDate,\n      },\n      { name: 'time', label: 'Time', type: 'time', required: true, defaultValue: '09:00' },\n    ],\n    [selectedDisplayDate]\n  );\n\n  const handleSelectCalendarDate = useCallback((date) => {\n    setSelectedDisplayDate(getLocalDateString(date));\n  }, []);\n\n  const handlePrevDay = useCallback(() => {\n    const newDate = new Date(memoizedSelectedDateObject);\n    newDate.setDate(newDate.getDate() - 1);\n    handleSelectCalendarDate(newDate);\n  }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n  const handleNextDay = useCallback(() => {\n    const newDate = new Date(memoizedSelectedDateObject);\n    newDate.setDate(newDate.getDate() + 1);\n    handleSelectCalendarDate(newDate);\n  }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n  // Empty state component\n  const EmptyState = () => (\n    <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n      <div className=\"w-24 h-24 mb-4 text-gray-300\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={1}\n            d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n          />\n        </svg>\n      </div>\n      <h3 className=\"text-lg font-medium text-gray-900\">Your timetable is empty</h3>\n      <p className=\"mt-2 text-sm text-gray-500\">Start by adding your first event to see it here.</p>\n      <button\n        onClick={() => setIsAddModalOpen(true)}\n        className=\"mt-4 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        Add Event\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <div id=\"page-timetable\" className=\"page px-6 py-8 pb-40\">\n        <header className=\"flex items-center justify-between mb-2\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Timetable</h1>\n        </header>\n        <p className=\"text-gray-500 mb-6\">Upcoming Study Schedule</p>\n\n        {/* Search Bar */}\n        <div className=\"mb-2\">\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search events by subject, topic, or time...\"\n            className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n          />\n        </div>\n\n        {/* Search results header */}\n        {searchQuery.trim() && (\n          <div className=\"mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Search Results</h2>\n          </div>\n        )}\n\n        {/* Only show Add New button and date picker if not searching */}\n        {!searchQuery.trim() && (\n          <>\n            <div className=\"flex items-center justify-between px-0 py-6 text-gray-700 font-semibold text-lg\">\n              <button\n                onClick={handlePrevDay}\n                className=\"p-2 rounded-full hover:bg-gray-100 active:scale-95 active:bg-gray-200 transition-all duration-200 ease-in-out\"\n                aria-label=\"Previous day\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <polyline points=\"15 18 9 12 15 6\"></polyline>\n                </svg>\n              </button>\n              <span className=\"flex-grow text-center text-lg sm:text-base\">\n                {memoizedSelectedDateObject.toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n              <button\n                onClick={handleNextDay}\n                className=\"p-2 rounded-full hover:bg-gray-100 active:scale-95 active:bg-gray-200 transition-all duration-200 ease-in-out\"\n                aria-label=\"Next day\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <polyline points=\"9 18 15 12 9 6\"></polyline>\n                </svg>\n              </button>\n            </div>\n          </>\n        )}\n\n        {/* Floating buttons container */}\n\n        {/* Edit Button */}\n        {isAdmin && (\n          <button\n            onClick={handleToggleEditMode}\n            className={`\n                fixed bottom-[9.5rem] right-6 z-50\n                bg-blue-50 text-blue-700 font-semibold \n                py-3 px-5 rounded-xl shadow-md \n                flex items-center text-sm\n                transition-all duration-200 ease-in-out\n                hover:bg-blue-100 hover:shadow-lg hover:-translate-y-0.5\n                active:scale-[0.98] active:shadow-sm\n              `}\n            title={timetableEditMode ? 'Done editing timetable' : 'Edit timetable'}\n          >\n            {timetableEditMode ? (\n              <>\n                <FaCheck className=\"mr-2\" /> Done\n              </>\n            ) : (\n              <>\n                <FaPen className=\"mr-2\" />\n                Edit\n              </>\n            )}\n          </button>\n        )}\n\n        {/* Add Event Button */}\n        {isAdmin && (\n          <button\n            onClick={() => setIsAddModalOpen(true)}\n            className={`\n                fixed bottom-20 right-6 z-50\n                bg-blue-600 text-white font-semibold \n                py-4 px-6 rounded-xl shadow-lg \n                flex items-center\n                transition-all duration-200 ease-in-out\n                hover:bg-blue-700 hover:shadow-xl hover:-translate-y-0.5\n                active:scale-[0.98] active:shadow-sm\n              `}\n            title=\"Add a new study event\"\n          >\n            <FaPlus className=\"mr-2\" />\n            <span>Add Event</span>\n          </button>\n        )}\n\n        {/* End of floating buttons */}\n\n        <div id=\"timetable-events-list\" className=\"space-y-4 bg-white rounded-lg min-h-[100px] pb-24\">\n          {filteredEntriesWithStatus.length > 0 ? (\n            <div className=\"space-y-4\">\n              {/* Group by date and show bold date headers when searching */}\n              {searchQuery.trim()\n                ? Object.keys(groupedByDate)\n                    .sort()\n                    .map((date) => (\n                      <div key={date}>\n                        <div className=\"font-semibold text-base text-blue-700 mb-2.5 mt-5 pl-1 tracking-normal pb-1\">\n                          {new Date(date).toLocaleDateString('en-US', {\n                            weekday: 'short',\n                            year: 'numeric',\n                            month: 'short',\n                            day: 'numeric',\n                          })}\n                        </div>\n                        <div className=\"space-y-4\">\n                          {groupedByDate[date].map((event, i, arr) => {\n                            const statusEvent =\n                              filteredEntriesWithStatus.find((e) => e.id === event.id) || event;\n                            return (\n                              <TimetableEventCard\n                                key={event.id}\n                                event={event}\n                                status={statusEvent.status}\n                                nextEvent={arr[i + 1]}\n                                isEditMode={timetableEditMode}\n                                onDelete={handlers.deleteTimetableEntry}\n                                onCheck={handlers.checkTimetableEntry}\n                                onEdit={handleEditEvent}\n                              />\n                            );\n                          })}\n                        </div>\n                      </div>\n                    ))\n                : filteredEntriesWithStatus.map((event, idx) => (\n                    <TimetableEventCard\n                      key={event.id}\n                      event={event}\n                      status={event.status}\n                      nextEvent={filteredEntriesWithStatus[idx + 1]}\n                      isEditMode={timetableEditMode}\n                      onDelete={handleDeleteTimetableEntry}\n                      onCheck={handleCheckTimetableEntry}\n                      onEdit={handleEditEvent}\n                    />\n                  ))}\n            </div>\n          ) : searchQuery.trim() ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\">No events match your search.</p>\n              <button\n                onClick={() => setSearchQuery('')}\n                className=\"mt-2 text-sm text-blue-600 hover:text-blue-800\"\n              >\n                Clear search\n              </button>\n            </div>\n          ) : (\n            <EmptyState />\n          )}\n        </div>\n      </div>\n\n      <AddModal\n        isOpen={isAddModalOpen}\n        onClose={handleCloseAddModal}\n        onSave={handleSaveEvent}\n        title=\"Add New Study Event\"\n        fields={addModalFields}\n      />\n\n      <EditTimetableModal\n        isOpen={isEditModalOpen}\n        onClose={handleCloseEditModal}\n        eventData={currentEventToEdit}\n        onUpdate={handleUpdateEvent}\n        onAddSimilar={handleAddSimilarEvent}\n        showNotification={showNotification}\n      />\n    </>\n  );\n}, areEqual);\n\nexport default TimetablePage;\n","// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  title,\n  fields,\n  initialState = EMPTY_INITIAL_STATE,\n}) => {\n  const handlers = useHandlers();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    if (isOpen) {\n      const initialData = fields.reduce((acc, field) => {\n        acc[field.name] = initialState[field.name] || field.defaultValue || '';\n        return acc;\n      }, {});\n      setFormData(initialData);\n    } else {\n      setFormData({});\n    }\n  }, [isOpen, fields, initialState]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSaveClick = () => {\n    for (const field of fields) {\n      if (field.required && !formData[field.name]) {\n        if (handlers.showNotification) {\n          handlers.showNotification(`${field.label} is required.`, 'error');\n        } else {\n          console.error(`${field.label} is required.`);\n        }\n        return;\n      }\n    }\n    if (onSave) {\n      onSave(formData);\n    } else if (handlers.addTimetableEntry) {\n      handlers.addTimetableEntry(formData);\n    }\n    onClose();\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n          >\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n            <div className=\"space-y-4\">\n              {fields.map((field) => (\n                <div key={field.name} className=\"flex flex-col\">\n                  <label\n                    htmlFor={field.name}\n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    {field.label}\n                    {field.required && <span className=\"text-red-500\">*</span>}\n                  </label>\n                  {field.type === 'textarea' ? (\n                    <textarea\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      rows=\"3\"\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  ) : field.type === 'select' ? (\n                    <select\n                      id={field.name}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    >\n                      {field.options &&\n                        field.options.map((option) => (\n                          <option key={option.value} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                    </select>\n                  ) : (\n                    <input\n                      type={field.type || 'text'}\n                      id={field.name}\n                      name={field.name}\n                      placeholder={field.placeholder || ''}\n                      value={formData[field.name] || ''}\n                      onChange={handleChange}\n                      disabled={field.disabled || false}\n                      className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-end space-x-3\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveClick}\n                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default AddModal;\n"],"names":["React","_ref","event","nextEvent","isEditMode","onEdit","status","handlers","useHandlers","getEventStatus","now","arguments","length","undefined","Date","checked","text","colorClass","dotClass","eventStart","concat","date","time","eventEnd","getTime","DEFAULT_DURATION_MINUTES","nextStart","studyDay","dateObj","getHours","setDate","getDate","setHours","getStudyDay","studyDayEnd","statusObj","cardClasses","_jsxs","id","className","children","_jsx","motion","button","onClick","checkTimetableEntry","whileTap","scale","animate","backgroundColor","borderColor","transition","type","stiffness","damping","svg","initial","rotate","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","subject","topic","timeString","hours","minutes","split","hour","parseInt","ampm","formatTimeToAMPM","HiPencil","deleteTimetableEntry","HiTrash","isOpen","onClose","eventData","onUpdate","showNotification","onAddSimilar","setSubject","useState","setTopic","setTime","createFutureEvent","setCreateFutureEvent","futureDate","setFutureDate","useEffect","AnimatePresence","div","opacity","exit","duration","e","stopPropagation","htmlFor","placeholder","value","onChange","target","min","async","setTimeout","_objectSpread","error","console","getLocalDateString","year","getFullYear","month","getMonth","toString","padStart","day","areEqual","prevProps","nextProps","timetableEntries","selectedDisplayDate","i","prevEvent","userId","_userId","timetableEditMode","setTimetableEditMode","isAdmin","useAdmin","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalFromState","currentEventToEdit","setCurrentEventToEdit","setSelectedDisplayDate","searchQuery","setSearchQuery","setIsEditModalOpen","useCallback","handleToggleEditMode","prev","handleCloseAddModal","handleCloseEditModal","handleEditEvent","eventId","eventToEdit","find","handleDeleteTimetableEntry","handleCheckTimetableEntry","handleUpdateEvent","updateTimetableEntry","handleAddSimilarEvent","addTimetableEntry","memoizedSelectedDateObject","useMemo","userTimezoneOffset","getTimezoneOffset","sortedTimetableEntries","sort","a","b","localeCompare","filteredEntries","trim","filter","entry","q","toLowerCase","includes","filteredEntriesWithStatus","map","idxInFull","findIndex","endTime","Number","getEventEndTime","groupedByDate","reduce","acc","push","addModalFields","name","label","required","defaultValue","handleSelectCalendarDate","handlePrevDay","newDate","handleNextDay","EmptyState","_Fragment","width","height","points","toLocaleDateString","weekday","title","FaCheck","FaPen","FaPlus","Object","keys","arr","statusEvent","TimetableEventCard","onDelete","onCheck","idx","AddModal","onSave","data","fields","EditTimetableModal","EMPTY_INITIAL_STATE","initialState","formData","setFormData","initialData","field","handleChange","disabled","rows","options","option","handleSaveClick"],"sourceRoot":""}