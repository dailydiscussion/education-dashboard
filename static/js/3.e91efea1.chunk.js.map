{"version":3,"file":"static/js/3.e91efea1.chunk.js","mappings":"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","sources":["components/TimetableEventCard.js","components/EditTimetableModal.js","pages/TimetablePage.js","components/AddModal.js"],"sourcesContent":["// src/components/TimetableEventCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { motion } from 'framer-motion';\n\n// IMPORTANT: This component now accepts a single 'event' object as a prop.\n// The list mapping and date navigation are handled in TimetablePage.js.\nconst TimetableEventCard = React.memo(({ event, nextEvent, isEditMode, onEdit, status }) => {\n    const handlers = useHandlers();\n\n    // Removed sortedEvents useMemo as this component now receives a single event.\n    // Sorting is handled in TimetablePage.js before passing individual events.\n\n    // Removed formatDateForDisplay as date navigation is no longer in this component.\n    // Removed handlePrevDay and handleNextDay as date navigation is no longer in this component.\n\n    // Helper: get study day (4am–4am)\n    function getStudyDay(dateObj) {\n        const studyDay = new Date(dateObj);\n        if (studyDay.getHours() < 4) {\n            studyDay.setDate(studyDay.getDate() - 1);\n        }\n        studyDay.setHours(0, 0, 0, 0);\n        return studyDay;\n    }\n\n    /**\n     * Determines the status of an event (Completed, Missed, or Pending).\n     * @param {string} eventDate - The date of the event in 'YYYY-MM-DD' format.\n     * @param {string} eventTime - The time of the event in 'HH:MM' format.\n     * @param {boolean} isChecked - The checked status of the event.\n     * @returns {{text: string, colorClass: string}} An object with status text and Tailwind CSS color class.\n     */\n    const getEventStatus = (event, nextEvent, now = new Date()) => {\n        if (event.checked) {\n            return { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n        }\n        const eventStart = new Date(`${event.date}T${event.time}`);\n        const DEFAULT_DURATION_MINUTES = 180;\n        const eventEnd = new Date(eventStart.getTime() + DEFAULT_DURATION_MINUTES * 60000);\n        const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n        const studyDay = getStudyDay(eventStart);\n        const studyDayEnd = new Date(studyDay);\n        studyDayEnd.setDate(studyDay.getDate() + 1);\n        studyDayEnd.setHours(4, 0, 0, 0); // 4am next day\n        // If now is after study day end, missed\n        if (now > studyDayEnd) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // If now is before event start time\n        if (now < eventStart) {\n            return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n        }\n        // If now is between event start and event end: Live\n        if (now >= eventStart && now < eventEnd) {\n            return { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n        }\n        // If now is after event end and before next event's start (or no next event): Missed\n        if (now >= eventEnd && (!nextStart || now < nextStart)) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // If now is after next event's start: Missed\n        if (nextStart && now >= nextStart) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // Default fallback\n        return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n\n\n    };\n\n    // If status prop provided, use it for text/color, otherwise fallback to local calculation\n    let statusObj;\n    if (status) {\n        switch (status) {\n            case 'Completed':\n                statusObj = { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n                break;\n            case 'Live':\n                statusObj = { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n                break;\n            case 'Missed':\n                statusObj = { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n                break;\n            case 'Pending':\n                statusObj = { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n                break;\n            default:\n                statusObj = { text: status, colorClass: 'text-gray-600', dotClass: 'bg-gray-300' };\n        }\n    } else {\n        statusObj = getEventStatus(event, nextEvent, new Date());\n    }\n\n    // Card background: green for completed, gray for normal, red for missed\n    let cardClasses = `flex justify-between items-center p-4 mb-3 rounded-xl`;\n    if (event.checked || (status && status === 'Completed')) {\n        cardClasses += ' bg-green-100'; // Completed: green background\n    } else if ((status && status === 'Missed') || (!status && statusObj.text === 'Missed')) {\n        cardClasses += ' bg-red-100'; // Missed: red background\n    } else {\n        cardClasses += ' bg-gray-50'; // Normal: subtle gray background\n    }\n\n    return (\n        <div\n            id={`timetable-event-${event.id}`}\n            className={cardClasses}\n        >\n            <div>\n                <p className=\"text-sm text-gray-500\">{event.time}</p>\n                <p className={`text-lg font-semibold text-gray-800 ${event.checked ? 'line-through opacity-70' : ''}`}>{event.subject}</p>\n                <h4 className=\"text-base text-gray-600\">{event.topic}</h4>\n                {/* Status with colored dot (always for Live, Pending, Missed; never for Completed) */}\n                {!event.checked && statusObj && (\n                  <span className=\"flex items-center gap-1 mt-1\">\n                    <span className={`inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 ${statusObj.dotClass}`}></span>\n                    <span className={`text-sm font-semibold ${statusObj.colorClass}`}>{statusObj.text}</span>\n                  </span>\n                )}\n            </div>\n            <div className=\"flex items-center gap-1\">\n                {isEditMode ? (\n                    <>\n                        {/* Edit button, visible only in edit mode */}\n                        <button\n                            onClick={() => onEdit(event.id)}\n                            className=\"p-1.5 mr-4 rounded-full text-gray-400 hover:text-blue-500 transition-colors duration-200\"\n                            aria-label=\"Edit event\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                                <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n                            </svg>\n                        </button>\n                        {/* Delete button, visible only in edit mode */}\n                        <button\n                            onClick={() => handlers.deleteTimetableEntry(event.id)}\n                            className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\n                            aria-label=\"Delete event\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                <path d=\"M3 6h18\"></path>\n                                <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\n                                <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\n                                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n                                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n                            </svg>\n                        </button>\n                    </>\n                ) : (\n                    // Check/uncheck button for marking completion, visible only NOT in edit mode\n                    <motion.button\n                        onClick={() => handlers.checkTimetableEntry(event.id)}\n                        className={`w-6 h-6 rounded-full border-2 flex items-center justify-center`}\n                        aria-label={event.checked ? \"Mark as incomplete\" : \"Mark as complete\"}\n                        whileTap={{ scale: 0.85 }}\n                        animate={{\n                            scale: event.checked ? 1.1 : 1,\n                            backgroundColor: event.checked ? '#22c55e' : '#ffffff00',\n                            borderColor: event.checked ? '#22c55e' : '#d1d5db'\n                        }}\n                        transition={{ type: 'spring', stiffness: 400, damping: 15 }}\n                    >\n                        {/* Checkmark icon if event is checked */}\n                        {event.checked && (\n                            <motion.svg\n                                initial={{ scale: 0, rotate: -90 }}\n                                animate={{ scale: 1, rotate: 0 }}\n                                transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-4 w-4 text-white\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                            </motion.svg>\n                        )}\n                    </motion.button>\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default TimetableEventCard;","// src/components/EditTimetableModal.js\nimport React, { useState, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EditTimetableModal = ({\n  isOpen,\n  onClose,\n  eventData,\n  onUpdate,\n  showNotification,\n  onAddSimilar,\n}) => {\n  const [subject, setSubject] = useState('');\n  const [topic, setTopic] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [createFutureEvent, setCreateFutureEvent] = useState(false);\n  const [futureDate, setFutureDate] = useState('');\n\n  useEffect(() => {\n    if (eventData) {\n      setSubject(eventData.subject || '');\n      setTopic(eventData.topic || '');\n      setDate(eventData.date || '');\n      setTime(eventData.time || '');\n    }\n  }, [eventData]);\n\n  const handleUpdateClick = async () => {\n    if (!eventData) {\n      showNotification('No event selected for editing.', 'error');\n      return;\n    }\n\n    if (!subject || !topic || !date || !time) {\n      showNotification('All fields are required.', 'error');\n      return;\n    }\n\n    if (createFutureEvent && !futureDate) {\n      showNotification('Please select a future date.', 'error');\n      return;\n    }\n\n    onClose(); // Optimistic UI\n\n    setTimeout(async () => {\n      try {\n        if (createFutureEvent) {\n          await onAddSimilar({\n            ...eventData,\n            subject,\n            topic,\n            date: futureDate,\n            time,\n            checked: false,\n          });\n          showNotification('New event created for future date.', 'success');\n        } else {\n          if (eventData.id) {\n            await onUpdate(eventData.id, subject, topic, date, time);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating event:', error);\n        showNotification('Failed to update event. Please try again.', 'error');\n      }\n    }, 0);\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.22 }}\n          onClick={onClose}\n        >\n            <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"bg-white rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto p-6 relative\"\n            >\n\n            <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Edit Study Event</h3>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"edit-modal-subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Subject\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-subject\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Anatomy\"\n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"edit-modal-topic\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Topic\n              </label>\n              <input\n                type=\"text\"\n                id=\"edit-modal-topic\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                placeholder=\"e.g., Cardiovascular System\"\n                value={topic}\n                onChange={(e) => setTopic(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"edit-modal-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Date\n              </label>\n              <input\n                type=\"date\"\n                id=\"edit-modal-date\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label htmlFor=\"edit-modal-time\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Time\n              </label>\n              <input\n                type=\"time\"\n                id=\"edit-modal-time\"\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-6 pt-4 border-t border-gray-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <span className=\"text-sm font-medium text-gray-700\">Repeat Event</span>\n\n                {/* Custom Horizontal Toggle Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => setCreateFutureEvent(!createFutureEvent)}\n                  className={`relative w-12 h-6 rounded-full focus:outline-none transition-colors duration-300 ${\n                    createFutureEvent ? 'bg-blue-600' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`absolute top-1 left-1 h-4 w-4 rounded-full bg-white shadow transform transition-transform duration-300 ${\n                      createFutureEvent ? 'translate-x-6' : 'translate-x-0'\n                    }`}\n                  />\n                </button>\n              </div>\n\n              {createFutureEvent && (\n                <div className=\"mt-4\">\n                  <label htmlFor=\"future-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Future Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"future-date\"\n                    min={date}\n                    className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                    value={futureDate}\n                    onChange={(e) => setFutureDate(e.target.value)}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-8 flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleUpdateClick}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                {createFutureEvent ? 'Create Future Event' : 'Update Event'}\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default EditTimetableModal;","// src/pages/TimetablePage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport TimetableEventCard from '../components/TimetableEventCard';\nimport { useHandlers } from '../context/HandlerContext';\nimport EditTimetableModal from '../components/EditTimetableModal';\nimport AddModal from '../components/AddModal';\n\n\n/**\n * Helper function to get a 'YYYY-MM-DD' formatted string from a Date object,\n * based on the user's local time zone. This prevents UTC conversion issues.\n * @param {Date} date - The date object to format.\n * @returns {string} The formatted date string.\n */\nconst getLocalDateString = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n};\n\n// Custom areEqual function for React.memo\nfunction areEqual(prevProps, nextProps) {\n    if (\n        prevProps.timetableEntries.length !== nextProps.timetableEntries.length ||\n        prevProps.selectedDisplayDate !== nextProps.selectedDisplayDate\n    ) {\n        return false;\n    }\n    // Compare each event by id and checked (add more fields if needed)\n    for (let i = 0; i < prevProps.timetableEntries.length; i++) {\n        const prevEvent = prevProps.timetableEntries[i];\n        const nextEvent = nextProps.timetableEntries[i];\n        if (\n            prevEvent.id !== nextEvent.id ||\n            prevEvent.checked !== nextEvent.checked ||\n            prevEvent.subject !== nextEvent.subject ||\n            prevEvent.topic !== nextEvent.topic ||\n            prevEvent.date !== nextEvent.date ||\n            prevEvent.time !== nextEvent.time\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Memoize TimetablePage to prevent unnecessary re-renders\nconst TimetablePage = React.memo(({ timetableEntries, showNotification, userId }) => {\n    const handlers = useHandlers();\n    const [timetableEditMode, setTimetableEditMode] = useState(false);\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalFromState] = useState(false); // Renamed to avoid confusion\n    const [currentEventToEdit, setCurrentEventToEdit] = useState(null);\n\n    const [selectedDisplayDate, setSelectedDisplayDate] = useState(getLocalDateString(new Date()));\n    // Add search state\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    // Helper to control modal state consistently\n    const setIsEditModalOpen = useCallback((isOpen) => {\n        setIsEditModalFromState(isOpen);\n        if (!isOpen) {\n            setCurrentEventToEdit(null); // Clear event data when modal closes\n        }\n    }, []);\n\n    // Memoized handlers for toggles and modals\n    const handleToggleEditMode = useCallback(() => {\n        setTimetableEditMode(prev => !prev);\n    }, []);\n\n    const handleCloseAddModal = useCallback(() => {\n        setIsAddModalOpen(false);\n    }, []);\n\n    const handleCloseEditModal = useCallback(() => {\n        setIsEditModalOpen(false);\n    }, [setIsEditModalOpen]);\n\n    // (Moved above usage)\n    const handleSaveEvent = (data) => {\n        handlers.addTimetableEntry(data.subject, data.topic, data.date, data.time);\n    };\n\n    const handleEditEvent = useCallback((eventId) => {\n        const eventToEdit = timetableEntries.find(event => event.id === eventId);\n        if (eventToEdit) {\n            setCurrentEventToEdit(eventToEdit);\n            setIsEditModalOpen(true);\n        }\n    }, [timetableEntries, setIsEditModalOpen]);\n\n    const handleDeleteTimetableEntry = useCallback((id) => {\n        handlers.deleteTimetableEntry(id);\n    }, [handlers]);\n\n    const handleCheckTimetableEntry = useCallback((id) => {\n        handlers.checkTimetableEntry(id);\n    }, [handlers]);\n\n    // This handleUpdateEvent now correctly calls the updateTimetableEntry prop from App.js\n    // which already has userId and showNotification in its closure.\n    const handleUpdateEvent = useCallback(async (eventId, subject, topic, date, time) => {\n        await handlers.updateTimetableEntry(eventId, subject, topic, date, time);\n        setIsEditModalOpen(false); // Close modal using the consistent helper\n    }, [handlers, setIsEditModalOpen]);\n\n    const handleAddSimilarEvent = useCallback((eventData) => {\n        handlers.addTimetableEntry(\n            eventData.subject,\n            eventData.topic,\n            eventData.date,\n            eventData.time\n        );\n    }, [handlers]);\n\n    const memoizedSelectedDateObject = useMemo(() => {\n        const date = new Date(selectedDisplayDate);\n        const userTimezoneOffset = date.getTimezoneOffset() * 60000;\n        return new Date(date.getTime() + userTimezoneOffset);\n    }, [selectedDisplayDate]);\n\n    // Chronologically sort all entries by date, then by time\n    const sortedTimetableEntries = useMemo(() => {\n        return [...timetableEntries].sort((a, b) => {\n            if (a.date !== b.date) return a.date.localeCompare(b.date);\n            return a.time.localeCompare(b.time);\n        });\n    }, [timetableEntries]);\n\n    // Filtered and sorted entries based on search (searches across all entries)\n    const filteredEntries = useMemo(() => {\n        if (!searchQuery.trim()) {\n            // If not searching, show only today's entries, sorted\n            return sortedTimetableEntries.filter(entry => entry.date === selectedDisplayDate);\n        }\n        const q = searchQuery.toLowerCase();\n        return sortedTimetableEntries.filter(entry =>\n            entry.subject.toLowerCase().includes(q) ||\n            entry.topic.toLowerCase().includes(q) ||\n            entry.time.toLowerCase().includes(q)\n        );\n    }, [sortedTimetableEntries, searchQuery, selectedDisplayDate]);\n\n    // Utility: calculate event end time (default 1 hour duration if not specified)\n    const getEventEndTime = (event) => {\n        if (event.endTime) {\n            return new Date(`${event.date}T${event.endTime}`);\n        }\n        const [hour] = event.time.split(':').map(Number);\n        return new Date(new Date(`${event.date}T${event.time}`).setHours(hour + 1));\n    };\n\n    // Calculate status for each event\n    const filteredEntriesWithStatus = useMemo(() => {\n        const now = new Date();\n        return filteredEntries.map((event) => {\n            if (event.checked) return { ...event, status: 'Completed' };\n            // Find the true next event in the full sorted timetable\n            const idxInFull = sortedTimetableEntries.findIndex(e => e.id === event.id);\n            const nextEvent = idxInFull !== -1 ? sortedTimetableEntries[idxInFull + 1] : undefined;\n            const eventStart = new Date(`${event.date}T${event.time}`);\n            const eventEnd = getEventEndTime(event);\n            const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n            if (now >= eventStart && (!nextStart || now < nextStart)) {\n                return { ...event, status: 'Live' };\n            } else if (now < eventStart) {\n                return { ...event, status: 'Pending' };\n            } else if (now > eventEnd && nextEvent && now > nextStart && !event.checked) {\n                return { ...event, status: 'Missed' };\n            }\n            return { ...event, status: 'Pending' };\n        });\n    }, [filteredEntries, sortedTimetableEntries]);\n\n    // Group filtered entries by date for search results\n    const groupedByDate = useMemo(() => {\n        if (!searchQuery.trim()) return {};\n        return filteredEntriesWithStatus.reduce((acc, entry) => {\n            if (!acc[entry.date]) acc[entry.date] = [];\n            acc[entry.date].push(entry);\n            return acc;\n        }, {});\n    }, [filteredEntriesWithStatus, searchQuery]);\n\n    const addModalFields = useMemo(() => [\n        { name: 'subject', label: 'Subject', placeholder: 'e.g., Anatomy', required: true },\n        { name: 'topic', label: 'Topic', placeholder: 'e.g., Cardiovascular System', required: true },\n        { name: 'date', label: 'Date', type: 'date', required: true, defaultValue: selectedDisplayDate },\n        { name: 'time', label: 'Time', type: 'time', required: true, defaultValue: '09:00' }\n    ], [selectedDisplayDate]);\n\n    const handleSelectCalendarDate = useCallback((date) => {\n        setSelectedDisplayDate(getLocalDateString(date));\n    }, []);\n\n    const handlePrevDay = useCallback(() => {\n        const newDate = new Date(memoizedSelectedDateObject);\n        newDate.setDate(newDate.getDate() - 1);\n        handleSelectCalendarDate(newDate);\n    }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n    const handleNextDay = useCallback(() => {\n        const newDate = new Date(memoizedSelectedDateObject);\n        newDate.setDate(newDate.getDate() + 1);\n        handleSelectCalendarDate(newDate);\n    }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n    return (\n        <>\n            <div id=\"page-timetable\" className=\"page px-6 py-8\">\n                <header className=\"flex items-center justify-between mb-2\">\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Timetable</h1>\n                        <button\n                        onClick={handleToggleEditMode}\n                        className=\"bg-blue-50 text-blue-700 font-semibold text-xs px-4 py-2 rounded-full flex items-center hover:bg-blue-100 transition duration-200\"\n                        aria-label={timetableEditMode ? 'Done editing timetable' : 'Edit timetable'}\n                        >\n                        <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-1\"\n                        >\n                        <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                        <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n                        </svg>\n                        {timetableEditMode ? 'Done' : 'Edit'}\n                        </button>\n                </header>\n                <p className=\"text-gray-500 mb-6\">Upcoming Study Schedule</p>\n\n                {/* Search Bar */}\n                <div className=\"mb-6\">\n                    <input\n                        type=\"text\"\n                        value={searchQuery}\n                        onChange={e => setSearchQuery(e.target.value)}\n                        placeholder=\"Search events by subject, topic, or time...\"\n                        className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                    />\n                </div>\n\n                {/* Only show Add New button and date picker if not searching */}\n                {(!searchQuery.trim()) && (\n                    <>\n                <button\n                    onClick={() => setIsAddModalOpen(true)}\n                    className=\"w-full bg-blue-50 text-blue-700 font-semibold mt-6 py-2 px-4 rounded-lg flex items-center justify-center hover:bg-blue-100 transition duration-300 mb-2\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\n                    Add New Study Event\n                </button>\n\n                <div className=\"flex items-center justify-between px-0 py-6 text-gray-700 font-semibold text-lg\">\n                    <button onClick={handlePrevDay} className=\"p-2 rounded-full hover:bg-gray-100 transition-colors duration-200\" aria-label=\"Previous day\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"15 18 9 12 15 6\"></polyline></svg>\n                    </button>\n                    <span className=\"flex-grow text-center text-lg sm:text-base\">\n                        {memoizedSelectedDateObject.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\n                    </span>\n                    <button onClick={handleNextDay} className=\"p-2 rounded-full hover:bg-gray-100 transition-colors duration-200\" aria-label=\"Next day\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n                    </button>\n                </div>\n                    </>\n                )}\n\n                <div id=\"timetable-events-list\" className=\"space-y-4 bg-white rounded-lg min-h-[100px]\">\n                    {filteredEntriesWithStatus.length === 0 ? (\n                        <p className=\"text-gray-500 text-center py-4\">{searchQuery ? 'No events match your search.' : 'Add a new study event to your timetable.'}</p>\n                    ) : (\n                        <div className=\"space-y-4\">\n                            {/* If searching, group by date and show bold date headers */}\n                            {searchQuery.trim() ? (\n                                Object.keys(groupedByDate).sort().map(date => (\n                                    <div key={date}>\n                                        <div className=\"font-bold text-lg text-blue-800 mb-2 mt-6 pl-1 tracking-wide\">\n                                            {new Date(date).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' })}\n                                        </div>\n                                        <div className=\"space-y-4\">\n                                            {groupedByDate[date].map((event, i, arr) => {\n                                                const statusEvent = filteredEntriesWithStatus.find(e => e.id === event.id) || event;\n                                                return (\n                                                    <TimetableEventCard\n                                                        key={event.id}\n                                                        event={event}\n                                                        status={statusEvent.status}\n                                                        nextEvent={arr[i+1]}\n                                                        isEditMode={timetableEditMode}\n                                                        onDelete={handlers.deleteTimetableEntry}\n                                                        onCheck={handlers.checkTimetableEntry}\n                                                        onEdit={handleEditEvent}\n                                                    />\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                filteredEntriesWithStatus.map((event, idx) => (\n                                    <TimetableEventCard\n                                        key={event.id}\n                                        event={event}\n                                        status={event.status}\n                                        nextEvent={filteredEntriesWithStatus[idx+1]}\n                                        isEditMode={timetableEditMode}\n                                        onDelete={handleDeleteTimetableEntry}\n                                        onCheck={handleCheckTimetableEntry}\n                                        onEdit={handleEditEvent}\n                                    />\n                                ))\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <AddModal\n                isOpen={isAddModalOpen}\n                onClose={handleCloseAddModal}\n                onSave={handleSaveEvent}\n                title=\"Add New Study Event\"\n                fields={addModalFields}\n            />\n\n        <EditTimetableModal\n            isOpen={isEditModalOpen}\n            onClose={handleCloseEditModal}\n            eventData={currentEventToEdit}\n            onUpdate={handleUpdateEvent}\n            onAddSimilar={handleAddSimilarEvent}\n            showNotification={showNotification}\n        />\n    </>\n);\n}, areEqual);\n\nexport default TimetablePage;","// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({ isOpen, onClose, onSave, title, fields, initialState = EMPTY_INITIAL_STATE }) => {\n    const handlers = useHandlers();\n    const [formData, setFormData] = useState({});\n\n    useEffect(() => {\n        if (isOpen) {\n            const initialData = fields.reduce((acc, field) => {\n                acc[field.name] = initialState[field.name] || field.defaultValue || '';\n                return acc;\n            }, {});\n            setFormData(initialData);\n        } else {\n            setFormData({});\n        }\n    }, [isOpen, fields, initialState]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSaveClick = () => {\n        for (const field of fields) {\n            if (field.required && !formData[field.name]) {\n                if (handlers.showNotification) {\n                    handlers.showNotification(`${field.label} is required.`, 'error');\n                } else {\n                    console.error(`${field.label} is required.`);\n                }\n                return;\n            }\n        }\n        if (onSave) {\n            onSave(formData);\n        } else if (handlers.addTimetableEntry) {\n            handlers.addTimetableEntry(formData);\n        }\n        onClose();\n    };\n\n    return (\n        <AnimatePresence>\n            {isOpen && (\n                <motion.div\n                    className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.22 }}\n                    onClick={onClose}\n                >\n                    <div\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n                    >\n                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n                        <div className=\"space-y-4\">\n                            {fields.map(field => (\n                                <div key={field.name} className=\"flex flex-col\">\n                                    <label htmlFor={field.name} className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        {field.label}{field.required && <span className=\"text-red-500\">*</span>}\n                                    </label>\n                                    {field.type === 'textarea' ? (\n                                        <textarea\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            rows=\"3\"\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    ) : field.type === 'select' ? (\n                                        <select\n                                            id={field.name}\n                                            name={field.name}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        >\n                                            {field.options && field.options.map(option => (\n                                                <option key={option.value} value={option.value}>\n                                                    {option.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            type={field.type || 'text'}\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"mt-6 flex justify-end space-x-3\">\n                            <button\n                                onClick={onClose}\n                                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                onClick={handleSaveClick}\n                                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default AddModal;"],"names":["React","_ref","event","nextEvent","isEditMode","onEdit","status","handlers","useHandlers","getEventStatus","now","arguments","length","undefined","Date","checked","text","colorClass","dotClass","eventStart","concat","date","time","eventEnd","getTime","DEFAULT_DURATION_MINUTES","nextStart","studyDay","dateObj","getHours","setDate","getDate","setHours","getStudyDay","studyDayEnd","statusObj","cardClasses","_jsxs","id","className","children","_jsx","subject","topic","_Fragment","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","deleteTimetableEntry","x1","y1","x2","y2","motion","button","checkTimetableEntry","whileTap","scale","animate","backgroundColor","borderColor","transition","type","stiffness","damping","svg","initial","rotate","isOpen","onClose","eventData","onUpdate","showNotification","onAddSimilar","setSubject","useState","setTopic","setTime","createFutureEvent","setCreateFutureEvent","futureDate","setFutureDate","useEffect","AnimatePresence","div","opacity","exit","duration","e","stopPropagation","htmlFor","placeholder","value","onChange","target","min","async","setTimeout","_objectSpread","error","console","getLocalDateString","year","getFullYear","month","getMonth","toString","padStart","day","areEqual","prevProps","nextProps","timetableEntries","selectedDisplayDate","i","prevEvent","userId","timetableEditMode","setTimetableEditMode","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalFromState","currentEventToEdit","setCurrentEventToEdit","setSelectedDisplayDate","searchQuery","setSearchQuery","setIsEditModalOpen","useCallback","handleToggleEditMode","prev","handleCloseAddModal","handleCloseEditModal","handleEditEvent","eventId","eventToEdit","find","handleDeleteTimetableEntry","handleCheckTimetableEntry","handleUpdateEvent","updateTimetableEntry","handleAddSimilarEvent","addTimetableEntry","memoizedSelectedDateObject","useMemo","userTimezoneOffset","getTimezoneOffset","sortedTimetableEntries","sort","a","b","localeCompare","filteredEntries","trim","filter","entry","q","toLowerCase","includes","filteredEntriesWithStatus","map","idxInFull","findIndex","endTime","hour","split","Number","getEventEndTime","groupedByDate","reduce","acc","push","addModalFields","name","label","required","defaultValue","handleSelectCalendarDate","handlePrevDay","newDate","handleNextDay","points","toLocaleDateString","weekday","Object","keys","arr","statusEvent","TimetableEventCard","onDelete","onCheck","idx","AddModal","onSave","data","title","fields","EditTimetableModal","EMPTY_INITIAL_STATE","initialState","formData","setFormData","initialData","field","handleChange","disabled","rows","options","option","handleSaveClick"],"sourceRoot":""}