{"version":3,"file":"static/js/3.42b45a25.chunk.js","mappings":"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","sources":["components/TimetableEventCard.js","components/EditTimetableModal.js","pages/TimetablePage.js","components/AddModal.js"],"sourcesContent":["// src/components/TimetableEventCard.js\nimport React from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { motion } from 'framer-motion';\n\n// IMPORTANT: This component now accepts a single 'event' object as a prop.\n// The list mapping and date navigation are handled in TimetablePage.js.\nconst TimetableEventCard = React.memo(({ event, nextEvent, isEditMode, onEdit }) => {\n    const handlers = useHandlers();\n\n    // Removed sortedEvents useMemo as this component now receives a single event.\n    // Sorting is handled in TimetablePage.js before passing individual events.\n\n    // Removed formatDateForDisplay as date navigation is no longer in this component.\n    // Removed handlePrevDay and handleNextDay as date navigation is no longer in this component.\n\n    // Helper: get study day (4am–4am)\n    function getStudyDay(dateObj) {\n        const studyDay = new Date(dateObj);\n        if (studyDay.getHours() < 4) {\n            studyDay.setDate(studyDay.getDate() - 1);\n        }\n        studyDay.setHours(0, 0, 0, 0);\n        return studyDay;\n    }\n\n    /**\n     * Determines the status of an event (Completed, Missed, or Pending).\n     * @param {string} eventDate - The date of the event in 'YYYY-MM-DD' format.\n     * @param {string} eventTime - The time of the event in 'HH:MM' format.\n     * @param {boolean} isChecked - The checked status of the event.\n     * @returns {{text: string, colorClass: string}} An object with status text and Tailwind CSS color class.\n     */\n    const getEventStatus = (event, nextEvent, now = new Date()) => {\n        if (event.checked) {\n            return { text: 'Completed', colorClass: 'text-green-600', dotClass: 'bg-green-500' };\n        }\n        const eventStart = new Date(`${event.date}T${event.time}`);\n        const DEFAULT_DURATION_MINUTES = 180;\n        const eventEnd = new Date(eventStart.getTime() + DEFAULT_DURATION_MINUTES * 60000);\n        const nextStart = nextEvent ? new Date(`${nextEvent.date}T${nextEvent.time}`) : null;\n        const studyDay = getStudyDay(eventStart);\n        const studyDayEnd = new Date(studyDay);\n        studyDayEnd.setDate(studyDay.getDate() + 1);\n        studyDayEnd.setHours(4, 0, 0, 0); // 4am next day\n        // If now is after study day end, missed\n        if (now > studyDayEnd) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // If now is before event start time\n        if (now < eventStart) {\n            return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n        }\n        // If now is between event start and event end: Live\n        if (now >= eventStart && now < eventEnd) {\n            return { text: 'Live', colorClass: 'text-cyan-600', dotClass: 'bg-cyan-500' };\n        }\n        // If now is after event end and before next event's start (or no next event): Missed\n        if (now >= eventEnd && (!nextStart || now < nextStart)) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // If now is after next event's start: Missed\n        if (nextStart && now >= nextStart) {\n            return { text: 'Missed', colorClass: 'text-red-600', dotClass: 'bg-red-500' };\n        }\n        // Default fallback\n        return { text: 'Upcoming', colorClass: 'text-orange-600', dotClass: 'bg-orange-400' };\n\n\n    };\n\n    // Remove memoization of status; always calculate at render time\n    const status = getEventStatus(event, nextEvent, new Date());\n\n    // Card background: green for completed, red for missed, white otherwise\n    let cardClasses = `flex justify-between items-center p-4 mb-3 rounded-xl shadow-sm border`;\n    if (event.checked) {\n        cardClasses += ' bg-green-100 border-green-300';\n    } else if (status.text === 'Missed') {\n        cardClasses += ' bg-red-100 border-red-300';\n    } else {\n        cardClasses += ' bg-white border-gray-200';\n    }\n\n    return (\n        <div\n            id={`timetable-event-${event.id}`}\n            className={cardClasses}\n        >\n            <div>\n                <p className=\"text-sm text-gray-500\">{event.time}</p>\n                <p className={`text-lg font-semibold text-gray-800 ${event.checked ? 'line-through opacity-70' : ''}`}>{event.subject}</p>\n                <h4 className=\"text-base text-gray-600\">{event.topic}</h4>\n                {/* Status with colored dot (always for Live, Pending, Missed; never for Completed) */}\n                {!event.checked && (\n                  <span className=\"flex items-center gap-1 mt-1\">\n                    <span className={`inline-block w-3 h-3 rounded-full border border-white flex-shrink-0 mr-2 ${status.dotClass}`}></span>\n                    <span className={`text-sm font-semibold ${status.colorClass}`}>{status.text}</span>\n                  </span>\n                )}\n            </div>\n            <div className=\"flex items-center gap-1\">\n                {/* Conditional rendering based on isEditMode */}\n                {isEditMode ? (\n                    <>\n                        {/* Plus button (replaces repeat), visible only in edit mode */}\n                        <button\n                            onClick={() => {\n                                // Improved validation for required fields\n                                const missing = [];\n                                if (!event.subject || !event.subject.trim()) missing.push('subject');\n                                if (!event.topic || !event.topic.trim()) missing.push('topic');\n                                if (!event.time || !event.time.trim()) missing.push('time');\n                                if (!event.date || !event.date.trim()) missing.push('date');\n                                if (missing.length > 0) {\n                                    alert('Missing fields: ' + missing.join(', '));\n                                    return;\n                                }\n                                // Calculate next day's date\n                                const dateObj = new Date(event.date);\n                                dateObj.setDate(dateObj.getDate() + 1);\n                                const nextDate = dateObj.toISOString().slice(0, 10);\n                                // Prepare new event object (do not copy checked or id)\n                                const { id, checked, ...eventData } = event;\n                                handlers.addTimetableEntry(eventData.subject, eventData.topic, nextDate, eventData.time, false); // explicitly unchecked\n                            }}\n                            className=\"p-1.5 mr-4 rounded-full text-gray-400 hover:text-blue-500 transition-colors duration-200\"\n                            aria-label=\"Add similar event for next day\"\n                            title=\"Add similar event for next day\"\n                            type=\"button\"\n                        >\n                            {/* Copy/Duplicate SVG */}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n                                <rect x=\"3\" y=\"3\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n</svg>\n                        </button>\n                        {/* Edit button, visible only in edit mode */}\n                        <button\n                            onClick={() => onEdit(event.id)} // Call onEdit with event.id\n                            className=\"p-1.5 mr-4 rounded-full text-gray-400 hover:text-blue-500 transition-colors duration-200\"\n                            aria-label=\"Edit event\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n                        </button>\n                        {/* Delete button, visible only in edit mode */}\n                        <button\n                            onClick={() => handlers.deleteTimetableEntry(event.id)}\n                            className=\"p-1.5 rounded-full text-gray-400 hover:text-red-500 transition-colors duration-200 mr-2\"\n                            aria-label=\"Delete event\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"></path><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n                        </button>\n                    </>\n                ) : (\n                    // Check/uncheck button for marking completion, visible only NOT in edit mode\n                    <motion.button\n                        onClick={() => handlers.checkTimetableEntry(event.id)}\n                        className={`w-6 h-6 rounded-full border-2 flex items-center justify-center`}\n                        aria-label={event.checked ? \"Mark as incomplete\" : \"Mark as complete\"}\n                        whileTap={{ scale: 0.85 }}\n                        animate={{\n                            scale: event.checked ? 1.1 : 1,\n                            backgroundColor: event.checked ? '#22c55e' : '#ffffff00',\n                            borderColor: event.checked ? '#22c55e' : '#d1d5db'\n                        }}\n                        transition={{ type: 'spring', stiffness: 400, damping: 15 }}\n                    >\n                        {/* Checkmark icon if event is checked */}\n                        {event.checked && (\n                            <motion.svg\n                                initial={{ scale: 0, rotate: -90 }}\n                                animate={{ scale: 1, rotate: 0 }}\n                                transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-4 w-4 text-white\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                            </motion.svg>\n                        )}\n                    </motion.button>\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default TimetableEventCard;","// src/components/EditTimetableModal.js\nimport React, { useState, useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EditTimetableModal = ({ isOpen, onClose, eventData, onUpdate, showNotification }) => {\n    const [subject, setSubject] = useState('');\n    const [topic, setTopic] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n\n    useEffect(() => {\n        if (eventData) {\n            setSubject(eventData.subject || '');\n            setTopic(eventData.topic || '');\n            setDate(eventData.date || '');\n            setTime(eventData.time || '');\n        }\n    }, [eventData]);\n\n    const handleUpdateClick = async () => {\n        if (!eventData || !eventData.id) {\n            showNotification('No event selected for editing.', 'error');\n            return;\n        }\n        if (!subject || !topic || !date || !time) {\n            showNotification('All fields are required.', 'error');\n            return;\n        }\n        await onUpdate(eventData.id, subject, topic, date, time);\n        onClose();\n    };\n\n    return (\n        <AnimatePresence>\n            {isOpen && (\n                <motion.div\n                    className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.22 }}\n                    onClick={onClose}\n                >\n                    <div\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"bg-white rounded-lg shadow-xl w-full max-w-md p-6 relative\"\n                    >\n                        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Edit Study Event</h3>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"edit-modal-subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">Subject</label>\n                            <input\n                                type=\"text\"\n                                id=\"edit-modal-subject\"\n                                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                                placeholder=\"e.g., Anatomy\"\n                                value={subject}\n                                onChange={(e) => setSubject(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"edit-modal-topic\" className=\"block text-sm font-medium text-gray-700 mb-1\">Topic</label>\n                            <input\n                                type=\"text\"\n                                id=\"edit-modal-topic\"\n                                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                                placeholder=\"e.g., Cardiovascular System\"\n                                value={topic}\n                                onChange={(e) => setTopic(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"edit-modal-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                            <input\n                                type=\"date\"\n                                id=\"edit-modal-date\"\n                                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                                value={date}\n                                onChange={(e) => setDate(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"edit-modal-time\" className=\"block text-sm font-medium text-gray-700 mb-1\">Time</label>\n                            <input\n                                type=\"time\"\n                                id=\"edit-modal-time\"\n                                className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50\"\n                                value={time}\n                                onChange={(e) => setTime(e.target.value)}\n                            />\n                        </div>\n                        <button\n                            onClick={handleUpdateClick}\n                            className=\"w-full bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n                        >\n                            Update Event\n                        </button>\n                        <button\n                            onClick={onClose}\n                            className=\"w-full mt-2 bg-gray-200 text-gray-700 font-bold py-2 px-4 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n                        >\n                            Cancel\n                        </button>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default EditTimetableModal;","// src/pages/TimetablePage.js\nimport React, { useState, useMemo, useCallback } from 'react';\nimport TimetableEventCard from '../components/TimetableEventCard';\nimport { useHandlers } from '../context/HandlerContext';\nimport EditTimetableModal from '../components/EditTimetableModal';\nimport AddModal from '../components/AddModal';\n\n\n/**\n * Helper function to get a 'YYYY-MM-DD' formatted string from a Date object,\n * based on the user's local time zone. This prevents UTC conversion issues.\n * @param {Date} date - The date object to format.\n * @returns {string} The formatted date string.\n */\nconst getLocalDateString = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n};\n\n// Custom areEqual function for React.memo\nfunction areEqual(prevProps, nextProps) {\n    if (\n        prevProps.timetableEntries.length !== nextProps.timetableEntries.length ||\n        prevProps.selectedDisplayDate !== nextProps.selectedDisplayDate\n    ) {\n        return false;\n    }\n    // Compare each event by id and checked (add more fields if needed)\n    for (let i = 0; i < prevProps.timetableEntries.length; i++) {\n        const prevEvent = prevProps.timetableEntries[i];\n        const nextEvent = nextProps.timetableEntries[i];\n        if (\n            prevEvent.id !== nextEvent.id ||\n            prevEvent.checked !== nextEvent.checked ||\n            prevEvent.subject !== nextEvent.subject ||\n            prevEvent.topic !== nextEvent.topic ||\n            prevEvent.date !== nextEvent.date ||\n            prevEvent.time !== nextEvent.time\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Memoize TimetablePage to prevent unnecessary re-renders\nconst TimetablePage = React.memo(({ timetableEntries, showNotification, userId }) => {\n    const handlers = useHandlers();\n    const [timetableEditMode, setTimetableEditMode] = useState(false);\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalFromState] = useState(false); // Renamed to avoid confusion\n    const [currentEventToEdit, setCurrentEventToEdit] = useState(null);\n\n    const [selectedDisplayDate, setSelectedDisplayDate] = useState(getLocalDateString(new Date()));\n    // Add search state\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    // Helper to control modal state consistently\n    const setIsEditModalOpen = useCallback((isOpen) => {\n        setIsEditModalFromState(isOpen);\n        if (!isOpen) {\n            setCurrentEventToEdit(null); // Clear event data when modal closes\n        }\n    }, []);\n\n    const handleSaveEvent = (data) => {\n        handlers.addTimetableEntry(data.subject, data.topic, data.date, data.time);\n    };\n\n    const handleEditEvent = useCallback((eventId) => {\n        const eventToEdit = timetableEntries.find(event => event.id === eventId);\n        if (eventToEdit) {\n            setCurrentEventToEdit(eventToEdit);\n            setIsEditModalOpen(true);\n        }\n    }, [timetableEntries, setIsEditModalOpen]);\n\n    const handleDeleteTimetableEntry = useCallback((id) => {\n        handlers.deleteTimetableEntry(id);\n    }, [handlers]);\n\n    const handleCheckTimetableEntry = useCallback((id) => {\n        handlers.checkTimetableEntry(id);\n    }, [handlers]);\n\n    // This handleUpdateEvent now correctly calls the updateTimetableEntry prop from App.js\n    // which already has userId and showNotification in its closure.\n    const handleUpdateEvent = useCallback(async (eventId, subject, topic, date, time) => {\n        await handlers.updateTimetableEntry(eventId, subject, topic, date, time);\n        setIsEditModalOpen(false); // Close modal using the consistent helper\n    }, [handlers, setIsEditModalOpen]);\n\n    const memoizedSelectedDateObject = useMemo(() => {\n        const date = new Date(selectedDisplayDate);\n        const userTimezoneOffset = date.getTimezoneOffset() * 60000;\n        return new Date(date.getTime() + userTimezoneOffset);\n    }, [selectedDisplayDate]);\n\n    // Chronologically sort all entries by date, then by time\n    const sortedTimetableEntries = useMemo(() => {\n        return [...timetableEntries].sort((a, b) => {\n            if (a.date !== b.date) return a.date.localeCompare(b.date);\n            return a.time.localeCompare(b.time);\n        });\n    }, [timetableEntries]);\n\n    // Filtered and sorted entries based on search (searches across all entries)\n    const filteredEntries = useMemo(() => {\n        if (!searchQuery.trim()) {\n            // If not searching, show only today's entries, sorted\n            return sortedTimetableEntries.filter(entry => entry.date === selectedDisplayDate);\n        }\n        const q = searchQuery.toLowerCase();\n        return sortedTimetableEntries.filter(entry =>\n            entry.subject.toLowerCase().includes(q) ||\n            entry.topic.toLowerCase().includes(q) ||\n            entry.time.toLowerCase().includes(q)\n        );\n    }, [sortedTimetableEntries, searchQuery, selectedDisplayDate]);\n\n    // Group filtered entries by date for search results\n    const groupedByDate = useMemo(() => {\n        if (!searchQuery.trim()) return {};\n        return filteredEntries.reduce((acc, entry) => {\n            if (!acc[entry.date]) acc[entry.date] = [];\n            acc[entry.date].push(entry);\n            return acc;\n        }, {});\n    }, [filteredEntries, searchQuery]);\n\n    const addModalFields = useMemo(() => [\n        { name: 'subject', label: 'Subject', placeholder: 'e.g., Anatomy', required: true },\n        { name: 'topic', label: 'Topic', placeholder: 'e.g., Cardiovascular System', required: true },\n        { name: 'date', label: 'Date', type: 'date', required: true, defaultValue: selectedDisplayDate },\n        { name: 'time', label: 'Time', type: 'time', required: true, defaultValue: '09:00' }\n    ], [selectedDisplayDate]);\n\n    const handleSelectCalendarDate = useCallback((date) => {\n        setSelectedDisplayDate(getLocalDateString(date));\n    }, []);\n\n    const handlePrevDay = useCallback(() => {\n        const newDate = new Date(memoizedSelectedDateObject);\n        newDate.setDate(newDate.getDate() - 1);\n        handleSelectCalendarDate(newDate);\n    }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n    const handleNextDay = useCallback(() => {\n        const newDate = new Date(memoizedSelectedDateObject);\n        newDate.setDate(newDate.getDate() + 1);\n        handleSelectCalendarDate(newDate);\n    }, [memoizedSelectedDateObject, handleSelectCalendarDate]);\n\n    return (\n        <>\n            <div id=\"page-timetable\" className=\"page px-6 py-8\">\n                <header className=\"flex items-center justify-between mb-2\">\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Timetable</h1>\n                        <button\n                        onClick={() => setTimetableEditMode(!timetableEditMode)}\n                        className=\"bg-blue-50 text-blue-700 font-semibold text-xs px-4 py-2 rounded-full flex items-center hover:bg-blue-100 transition duration-200\"\n                        aria-label={timetableEditMode ? 'Done editing timetable' : 'Edit timetable'}\n                        >\n                        <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-1\"\n                        >\n                        <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                        <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n                        </svg>\n                        {timetableEditMode ? 'Done' : 'Edit'}\n                        </button>\n                </header>\n                <p className=\"text-gray-500 mb-6\">Upcoming Study Schedule</p>\n\n                {/* Search Bar */}\n                <div className=\"mb-6\">\n                    <input\n                        type=\"text\"\n                        value={searchQuery}\n                        onChange={e => setSearchQuery(e.target.value)}\n                        placeholder=\"Search events by subject, topic, or time...\"\n                        className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-200 bg-gray-50\"\n                    />\n                </div>\n\n                {/* Only show Add New button and date picker if not searching */}\n                {(!searchQuery.trim()) && (\n                    <>\n                <button\n                    onClick={() => setIsAddModalOpen(true)}\n                    className=\"w-full bg-blue-50 text-blue-700 font-semibold mt-6 py-2 px-4 rounded-lg flex items-center justify-center hover:bg-blue-100 transition duration-300 mb-2\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" className=\"mr-2\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\n                    Add New Study Event\n                </button>\n\n                <div className=\"flex items-center justify-between px-0 py-6 text-gray-700 font-semibold text-lg\">\n                    <button onClick={handlePrevDay} className=\"p-2 rounded-full hover:bg-gray-100 transition-colors duration-200\" aria-label=\"Previous day\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"15 18 9 12 15 6\"></polyline></svg>\n                    </button>\n                    <span className=\"flex-grow text-center text-lg sm:text-base\">\n                        {memoizedSelectedDateObject.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\n                    </span>\n                    <button onClick={handleNextDay} className=\"p-2 rounded-full hover:bg-gray-100 transition-colors duration-200\" aria-label=\"Next day\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n                    </button>\n                </div>\n                    </>\n                )}\n\n                <div id=\"timetable-events-list\" className=\"space-y-4 bg-white rounded-lg min-h-[100px]\">\n                    {filteredEntries.length === 0 ? (\n                        <p className=\"text-gray-500 text-center py-4\">{searchQuery ? 'No events match your search.' : 'Add a new study event to your timetable.'}</p>\n                    ) : (\n                        <div className=\"space-y-4\">\n                            {/* If searching, group by date and show bold date headers */}\n                            {searchQuery.trim() ? (\n                                Object.keys(groupedByDate).sort().map(date => (\n                                    <div key={date}>\n                                        <div className=\"font-bold text-lg text-blue-800 mb-2 mt-6 pl-1 tracking-wide\">\n                                            {new Date(date).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' })}\n                                        </div>\n                                        <div className=\"space-y-4\">\n                                            {groupedByDate[date].map((event, i, arr) => (\n                                <TimetableEventCard\n                                    key={event.id}\n                                    event={event}\n                                                    nextEvent={arr[i+1]}\n                                    isEditMode={timetableEditMode}\n                                    onDelete={handlers.deleteTimetableEntry}\n                                    onCheck={handlers.checkTimetableEntry}\n                                    onEdit={handleEditEvent}\n                                />\n                            ))}\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                filteredEntries.map((event, idx) => (\n                                    <TimetableEventCard\n                                        key={event.id}\n                                        event={event}\n                                        nextEvent={filteredEntries[idx+1]}\n                                        isEditMode={timetableEditMode}\n                                        onDelete={handleDeleteTimetableEntry}\n                                        onCheck={handleCheckTimetableEntry}\n                                        onEdit={handleEditEvent}\n                                    />\n                                ))\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <AddModal\n                isOpen={isAddModalOpen}\n                onClose={() => setIsAddModalOpen(false)}\n                onSave={handleSaveEvent}\n                title=\"Add New Study Event\"\n                fields={addModalFields}\n            />\n\n            <EditTimetableModal\n                isOpen={isEditModalOpen}\n                onClose={() => setIsEditModalOpen(false)}\n                eventData={currentEventToEdit}\n                onUpdate={handleUpdateEvent}\n            />\n        </>\n    );\n}, areEqual);\n\nexport default TimetablePage;","// src/components/AddModal.js\nimport React, { useState, useEffect } from 'react';\nimport { useHandlers } from '../context/HandlerContext';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst EMPTY_INITIAL_STATE = {};\n\nconst AddModal = ({ isOpen, onClose, onSave, title, fields, initialState = EMPTY_INITIAL_STATE }) => {\n    const handlers = useHandlers();\n    const [formData, setFormData] = useState({});\n\n    useEffect(() => {\n        if (isOpen) {\n            const initialData = fields.reduce((acc, field) => {\n                acc[field.name] = initialState[field.name] || field.defaultValue || '';\n                return acc;\n            }, {});\n            setFormData(initialData);\n        } else {\n            setFormData({});\n        }\n    }, [isOpen, fields, initialState]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSaveClick = () => {\n        for (const field of fields) {\n            if (field.required && !formData[field.name]) {\n                if (handlers.showNotification) {\n                    handlers.showNotification(`${field.label} is required.`, 'error');\n                } else {\n                    console.error(`${field.label} is required.`);\n                }\n                return;\n            }\n        }\n        if (onSave) {\n            onSave(formData);\n        } else if (handlers.addTimetableEntry) {\n            handlers.addTimetableEntry(formData);\n        }\n        onClose();\n    };\n\n    return (\n        <AnimatePresence>\n            {isOpen && (\n                <motion.div\n                    className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.22 }}\n                    onClick={onClose}\n                >\n                    <div\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-auto relative\"\n                    >\n                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">{title}</h2>\n                        <div className=\"space-y-4\">\n                            {fields.map(field => (\n                                <div key={field.name} className=\"flex flex-col\">\n                                    <label htmlFor={field.name} className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        {field.label}{field.required && <span className=\"text-red-500\">*</span>}\n                                    </label>\n                                    {field.type === 'textarea' ? (\n                                        <textarea\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            rows=\"3\"\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    ) : field.type === 'select' ? (\n                                        <select\n                                            id={field.name}\n                                            name={field.name}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        >\n                                            {field.options && field.options.map(option => (\n                                                <option key={option.value} value={option.value}>\n                                                    {option.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            type={field.type || 'text'}\n                                            id={field.name}\n                                            name={field.name}\n                                            placeholder={field.placeholder || ''}\n                                            value={formData[field.name] || ''}\n                                            onChange={handleChange}\n                                            disabled={field.disabled || false}\n                                            className=\"w-full px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 disabled:bg-gray-200\"\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"mt-6 flex justify-end space-x-3\">\n                            <button\n                                onClick={onClose}\n                                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-bold rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition duration-300\"\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                onClick={handleSaveClick}\n                                className=\"px-4 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300\"\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default AddModal;"],"names":["React","_ref","event","nextEvent","isEditMode","onEdit","handlers","useHandlers","status","now","arguments","length","undefined","Date","checked","text","colorClass","dotClass","eventStart","concat","date","time","eventEnd","getTime","DEFAULT_DURATION_MINUTES","nextStart","studyDay","dateObj","getHours","setDate","getDate","setHours","getStudyDay","studyDayEnd","getEventStatus","cardClasses","_jsxs","id","className","children","_jsx","subject","topic","_Fragment","onClick","missing","trim","push","alert","join","nextDate","toISOString","slice","eventData","_objectWithoutProperties","_excluded","addTimetableEntry","title","type","xmlns","width","height","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","d","deleteTimetableEntry","x1","y1","x2","y2","motion","button","checkTimetableEntry","whileTap","scale","animate","backgroundColor","borderColor","transition","stiffness","damping","svg","initial","rotate","isOpen","onClose","onUpdate","showNotification","setSubject","useState","setTopic","setTime","useEffect","AnimatePresence","div","opacity","exit","duration","e","stopPropagation","htmlFor","placeholder","value","onChange","target","async","getLocalDateString","year","getFullYear","month","getMonth","toString","padStart","day","areEqual","prevProps","nextProps","timetableEntries","selectedDisplayDate","i","prevEvent","userId","timetableEditMode","setTimetableEditMode","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalFromState","currentEventToEdit","setCurrentEventToEdit","setSelectedDisplayDate","searchQuery","setSearchQuery","setIsEditModalOpen","useCallback","handleEditEvent","eventId","eventToEdit","find","handleDeleteTimetableEntry","handleCheckTimetableEntry","handleUpdateEvent","updateTimetableEntry","memoizedSelectedDateObject","useMemo","userTimezoneOffset","getTimezoneOffset","sortedTimetableEntries","sort","a","b","localeCompare","filteredEntries","filter","entry","q","toLowerCase","includes","groupedByDate","reduce","acc","addModalFields","name","label","required","defaultValue","handleSelectCalendarDate","handlePrevDay","newDate","handleNextDay","points","toLocaleDateString","weekday","Object","keys","map","arr","TimetableEventCard","onDelete","onCheck","idx","AddModal","onSave","data","fields","EditTimetableModal","EMPTY_INITIAL_STATE","initialState","formData","setFormData","initialData","field","handleChange","prev","_objectSpread","disabled","rows","options","option","handleSaveClick","console","error"],"sourceRoot":""}