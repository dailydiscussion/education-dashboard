{"version":3,"file":"static/js/133.5d8c8179.chunk.js","mappings":"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","sources":["pages/ProfilePage.js"],"sourcesContent":["// src/pages/ProfilePage.js\r\nimport React, { useState } from 'react';\r\n// Import the actual functions from appFunctions\r\nimport { handleExportData, handleImportData } from '../utils/appFunctions'; // Correct import\r\n\r\nconst ProfilePage = React.memo(({ testData, todayFocusItems, timetableEntries, onManageContent, onLogout, currentUserId, userName, userEmail, showNotification, onResetLocalData }) => {\r\n    const [showImportConfirmation, setShowImportConfirmation] = useState(false);\r\n    const [importFileData, setImportFileData] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                try {\r\n                    const parsedData = JSON.parse(e.target.result);\r\n                    // Basic validation: Check for expected top-level keys\r\n                    if (parsedData.subjects && parsedData.todayFocus && parsedData.timetable) {\r\n                        setImportFileData(parsedData);\r\n                        setShowImportConfirmation(true);\r\n                    } else {\r\n                        showNotification(\"Invalid file format. Please upload a valid exported data file.\", \"error\");\r\n                    }\r\n                } catch (error) {\r\n                    showNotification(\"Failed to parse JSON file. Please ensure it's a valid JSON.\", \"error\");\r\n                    console.error(\"Error parsing import file:\", error);\r\n                }\r\n            };\r\n            reader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    const confirmImport = async () => {\r\n        setShowImportConfirmation(false);\r\n        if (importFileData) {\r\n            // Call the handleImportData function from appFunctions, passing necessary props\r\n            await handleImportData(currentUserId, showNotification, importFileData);\r\n            setImportFileData(null);\r\n            // Clear the file input after import attempt\r\n            document.getElementById('importFileInput').value = '';\r\n        }\r\n    };\r\n\r\n    const cancelImport = () => {\r\n        setShowImportConfirmation(false);\r\n        setImportFileData(null);\r\n        // Clear the file input if the user cancels\r\n        document.getElementById('importFileInput').value = '';\r\n    };\r\n\r\n    const handleExport = () => {\r\n        const data = { testData, todayFocusItems, timetableEntries };\r\n        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'dashboard-data.json';\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return (\r\n        <div id=\"page-profile\" className=\"page px-6 py-8\">\r\n            <header className=\"mb-6\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900\">My Profile</h1>\r\n                <p className=\"text-gray-500 mt-2\">Manage your account and app settings.</p>\r\n            </header>\r\n\r\n            <div className=\"bg-gray-100 p-6 rounded-lg shadow-md mb-6\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                    <img src=\"https://placehold.co/80x80/E2E8F0/4A5568?text=NK\" alt=\"User Avatar\" className=\"w-16 h-16 rounded-full\" />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-bold text-gray-800\">{userName || 'User'}</h2>\r\n                        <p className=\"text-gray-600 text-sm\">{userEmail || 'No Email'}</p>\r\n                        <p className=\"text-xs text-gray-500 break-all\">User ID: {currentUserId || 'N/A'}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4 mb-8\">\r\n                <button onClick={onManageContent} className=\"w-full bg-blue-50 text-blue-700 font-semibold py-3 px-4 rounded-lg flex items-center justify-between hover:bg-blue-100 transition duration-200\">\r\n                    Manage Subjects & Tests\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\r\n                </button>\r\n\r\n                {/* Export Data Button */}\r\n                <button\r\n                    onClick={() => handleExportData(currentUserId, showNotification)} // Correctly call handleExportData\r\n                    className=\"w-full bg-green-50 text-green-700 font-semibold py-3 px-4 rounded-lg flex items-center justify-between hover:bg-green-100 transition duration-200\"\r\n                >\r\n                    Export All Data\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                        <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n                        <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n                    </svg>\r\n                </button>\r\n\r\n                {/* Import Data Button */}\r\n                <label className=\"w-full bg-purple-50 text-purple-700 font-semibold py-3 px-4 rounded-lg flex items-center justify-between hover:bg-purple-100 transition duration-200 cursor-pointer\">\r\n                    Import Data\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\".json\"\r\n                        onChange={handleFileChange}\r\n                        className=\"hidden\"\r\n                        id=\"importFileInput\"\r\n                    />\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                        <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n                        <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n                    </svg>\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"mt-auto pt-6 border-t border-gray-200\">\r\n                <button onClick={onLogout} className=\"w-full bg-red-100 text-red-700 font-semibold py-3 px-4 rounded-lg flex items-center justify-center hover:bg-red-200 transition duration-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"17 16 22 12 17 8\"></polyline><line x1=\"22\" y1=\"12\" x2=\"10\" y2=\"12\"></line></svg>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            {/* Import Confirmation Modal */}\r\n            {showImportConfirmation && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-sm mx-auto\">\r\n                        <h3 className=\"text-lg font-bold mb-4\">Confirm Data Import</h3>\r\n                        <p className=\"text-gray-700 mb-6\">\r\n                            Importing this data will overwrite your existing subjects, tests, focus items, and timetable entries.\r\n                            Are you sure you want to proceed?\r\n                        </p>\r\n                        <div className=\"flex justify-end space-x-4\">\r\n                            <button\r\n                                onClick={cancelImport}\r\n                                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition duration-200\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={confirmImport}\r\n                                className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition duration-200\"\r\n                            >\r\n                                Import Data\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProfilePage;"],"names":["React","_ref","testData","todayFocusItems","timetableEntries","onManageContent","onLogout","currentUserId","userName","userEmail","showNotification","onResetLocalData","showImportConfirmation","setShowImportConfirmation","useState","importFileData","setImportFileData","_jsxs","id","className","children","_jsx","src","alt","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","handleExportData","d","x1","y1","x2","y2","type","accept","onChange","event","file","target","files","reader","FileReader","onload","e","parsedData","JSON","parse","result","subjects","todayFocus","timetable","error","console","readAsText","cancelImport","document","getElementById","value","async","handleImportData"],"sourceRoot":""}